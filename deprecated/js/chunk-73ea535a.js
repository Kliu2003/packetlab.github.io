(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-73ea535a"],{"0532":function(e,t,n){"use strict";n.r(t);var a=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("main",{staticClass:"main-content"},[n("h1",[e._v("Running your first PacketLab Experiment")]),e._m(0),n("b",{staticClass:"Section"},[e._v("Running the Broker")]),e._m(1),n("b",{staticClass:"Section"},[e._v("Running the Experiment Manager")]),e._m(2),n("code",[e._v("USAGE: pktxpmgr [-h] [-c XM_CONF_PATH] ADDR[:PORT] MLET [MLET_ARGS ...]")]),e._m(3),e._m(4),e._m(5),e._m(6),n("p",[e._v("We now have everything we need to run the XPMGR.")]),n("b",{staticClass:"Section"},[e._v("Running the Endpoint")]),e._m(7),n("code",[e._v("USAGE: pktendpt [-h] [-c EP_CONF_PATH] [ADDR[:PORT]]")]),e._m(8),e._m(9),n("b",{staticClass:"Section"},[e._v("Putting it all together")]),n("p",[e._v("Now, let's put it all together by running "),n("code",[e._v("test_http_get")]),e._v(", one of the "),n("router-link",{attrs:{to:{name:"SampleExps"}},scopedSlots:e._u([{key:"default",fn:function(t){var a=t.route,r=t.href;return[n("a",{class:{active:e.currentRouteName==a.name},attrs:{href:r}},[e._v("sample experiments included with the PacketLab library")])]}}])}),e._v(". This experiment executes an http request using TCP. Included sample tests can be found in the "),n("code",[e._v("ex_mlet")]),e._v(" directory, so we can access the test as "),n("code",[e._v("../pktlab/ex_mlet/test_http_get")]),e._v(" "),n("em",[e._v("if using the source tarball")]),e._v(", or as "),n("code",[e._v("../ex_mlet/test_http_get")]),e._v(" "),n("em",[e._v("if using the prebuilt package")]),e._v(".")],1),e._m(10),n("p",[e._v("And voila, if you navigate back to the terminal running the XPMGR, you should see HTML code retrieved from the web! Congratulations, you've just run your first experiment using PacketLab!")])])},r=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("To run an experiment using PacketLab, we will need to open a terminal for each of the three primary entities involved in running PacketLab experiments: the Broker, Experiment Manager (XPMGR), and Endpoint. In all three terminals, navigate to your PacketLab directory, then to "),n("code",[e._v("bin/")]),e._v(", the directory containing the compiled binaries for the Broker, XPMGR, and Endpoint, as well as several other compiled binaries.")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("Let's start with the Broker. In one of the terminals, from the "),n("code",[e._v("bin")]),e._v(" directory, we can run the Broker's compiled binary by executing "),n("code",[e._v("./pktbrokr")]),e._v(". The Broker should now be running, and you will see a blank terminal waiting for connections from the XPMGR and Endpoint.")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("Next, we can run the Experiment Manager. Running the XPMGR involves a few additional parameters, which can be displayed by running "),n("code",[e._v("./pktxpmgr -h")]),e._v(" from the same "),n("code",[e._v("bin")]),e._v(" directory:")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("code",[e._v("[-c XM_CONF_PATH]")]),e._v(" is the path to the config file for the XPMGR to use. This tag and a "),n("em",[e._v("relative")]),e._v(" path to the file can be used for custom config files. However, the tag can be omitted for testing purposes and a sample config file included with PacketLab will be used instead.")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("code",[e._v("ADDR[:PORT]")]),e._v(" refers to the IP address and port that the Experiment Manager is listening on. For example, while testing on my local machine and using port 5568, I would use "),n("code",[e._v("127.0.0.1:5568")]),e._v(".")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("code",[e._v("MLET")]),e._v(" (short for measurement applet) is the path to the compiled executable for the experiment program you want to run, such as one of the sample tests included with the PacketLab API. We will run a sample test at the end of this tutorial.")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("If the experiment that is being run has arguments of its own, these can be placed at the end of the command as "),n("code",[e._v("[MLET_ARGS ...]")]),e._v(". ")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("The final component of our setup is the Endpoint. We can see the parameters of the Endpoint by running "),n("code",[e._v("./pktendpt -h")]),e._v(" from the same "),n("code",[e._v("bin")]),e._v(" directory:")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("Like with the XPMGR, "),n("code",[e._v("[-c EP_CONF_PATH]")]),e._v(" is the path to the config file for the Endpoint to use. This tag and a "),n("em",[e._v("relative")]),e._v(" path to the file can be used for custom config files. However, the tag can be omitted for our test and a sample config file included with PacketLab will be used instead.")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[n("code",[e._v("ADDR[:PORT]")]),e._v(" refers to the same address and port used by the XPMGR. However, these arguments can also be omitted for general use such as running the experiment we will run in this tutorial. A later tutorial will discuss how and when to use these arguments.")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("If the Broker is not already running, we can run it from our first terminal with "),n("code",{staticClass:"boldcode"},[e._v("./pktbrokr")]),e._v("."),n("br"),e._v("Next, we can run the XPMGR with our chosen test in our second terminal as "),n("code",{staticClass:"boldcode"},[e._v("./pktxpmgr 127.0.0.1:5568 ../share/pktlab/example_mlets/test_http_get")]),e._v(" "),n("em",[e._v("if using the source tarball")]),e._v(" or "),n("code",{staticClass:"boldcode"},[e._v("./pktxpmgr 127.0.0.1:5568 ../example_mlets/test_http_get")]),e._v(" "),n("em",[e._v("if using the prebuilt package")]),e._v("."),n("br"),e._v("Finally, we can follow up with the Endpoint from our third terminal using "),n("code",{staticClass:"boldcode"},[e._v("./pktendpt")]),e._v(".")])}],i=(n("1499"),n("2877")),o={},s=Object(i["a"])(o,a,r,!1,null,"250f0602",null);t["default"]=s.exports},1499:function(e,t,n){"use strict";var a=n("ce4c"),r=n.n(a);r.a},ce4c:function(e,t,n){}}]);
//# sourceMappingURL=chunk-73ea535a.js.map
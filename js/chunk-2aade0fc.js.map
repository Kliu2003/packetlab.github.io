{"version":3,"sources":["webpack:///./node_modules/bucketify/index.min.js","webpack:///./src/views/Data.vue?5552","webpack:///src/views/Data.vue","webpack:///./src/views/Data.vue?f388","webpack:///./src/views/Data.vue"],"names":["Bucket","t","e","RangeError","this","min","max","vals","Bucketify","list","getProperty","minRange","s","maxRange","n","maxBuckets","i","bucketSize","u","Array","isArray","TypeError","r","Number","MAX_SAFE_INTEGER","l","MIN_SAFE_INTEGER","forEach","Math","h","a","o","ceil","m","buckets","push","add","prototype","length","floor","module","exports","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","name","graphData","on","setTimeRange","data","layout","spinner","staticRenderFns","component"],"mappings":"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","file":"js/chunk-2aade0fc.js","sourcesContent":["function Bucket(t,e){if(e<=0)throw RangeError(\"size must be greater than zero\");this.min=t,this.max=t+e,this.vals=[]}function Bucketify({list:t,getProperty:e,minRange:s,maxRange:n,maxBuckets:i,bucketSize:u}){if(!Array.isArray(t)||null!=e&&\"function\"!=typeof e||null!=s&&\"number\"!=typeof s||null!=n&&\"number\"!=typeof n||null!=i&&(null!=u||\"number\"!=typeof i||i<=0)||null!=u&&(null!=i||\"number\"!=typeof u||u<=0))throw TypeError(\"Illegal arguments\");const r=null!=s;s=r?s:Number.MAX_SAFE_INTEGER;const l=null!=n;if(n=l?n:Number.MIN_SAFE_INTEGER,r&&l&&n<s)throw RangeError(\"maxRange must be greater than or equal to minRange\");this.getProperty=null!=e?e:t=>t,t.forEach(t=>{const e=this.getProperty(t);r||(s=Math.min(s,e)),l||(n=Math.max(n,e))}),this.min=s,this.max=n;const h=this.max-this.min+1,a=null!=i?Math.min(h,i):h,o=Math.ceil(h/a),m=null!=u?u:o;this.buckets=[];for(let t=this.min;t<=this.max;t+=m)this.buckets.push(new Bucket(t,m));t.forEach(t=>{this.add(t)})}Bucketify.prototype.add=function(t){const e=this.getProperty(t);let s=0,n=this.buckets.length-1,i=!1;for(;!i;){let u=Math.floor((s+n)/2);this.buckets[u].min<=e&&this.buckets[u].max>e?(this.buckets[u].vals.push(t),i=!0):this.buckets[u].min>e?n-s<=2?(this.buckets[u-1].vals.push(t),i=!0):n=u:n-s<=2?(this.buckets[u+1].vals.push(t),i=!0):s=u}},module.exports=Bucketify;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('main',{staticClass:\"home\"},[_c('ac-grid',{attrs:{\"cols\":\"12\",\"align-h\":\"center\"}},[_c('ac-col',{attrs:{\"cols\":\"11\"}},[_c('date-range-dropdown',{attrs:{\"route\":{name:'Data'},\"callback\":_vm.graphData},on:{\"change\":_vm.setTimeRange}})],1)],1),_c('ac-grid',{attrs:{\"cols\":\"12\",\"align-h\":\"center\"}},[_c('ac-col',{attrs:{\"cols\":\"11\"}},[_c('graph',{attrs:{\"data\":_vm.data,\"layout\":_vm.layout,\"spinner\":_vm.spinner}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","a<template>\n\t<main class=\"home\">\n        <ac-grid cols=12 align-h=\"center\">\n            <ac-col cols=\"11\">\n                <date-range-dropdown :route=\"{name:'Data'}\"  v-on:change=\"setTimeRange\" :callback=\"graphData\"></date-range-dropdown>\n            </ac-col>\n        </ac-grid>\n        <ac-grid cols=12 align-h=\"center\">\n            <ac-col cols=\"11\">\n                <graph :data=\"data\" :layout=\"layout\" :spinner=\"spinner\"></graph>\n            </ac-col>\n        </ac-grid>\n        <!-- <ac-grid cols=12 align-h=\"center\">\n            <ac-col cols=\"11\">\n                <world-map :bubbles=\"bubbles\"></world-map>\n            </ac-col>\n        </ac-grid> -->\n\t</main>\n</template>\n\n<script>\nimport graph from \"@/components/graph\";\nimport dateRangeDropdown from \"@/components/date-range-dropdown\";\n// import worldMap from \"@/components/world-map\";\nimport moment from \"moment\";\nimport Bucketify from \"bucketify\";\nexport default {\n\tname: 'Home',\n\tcomponents: {\n    \"graph\":graph,\n    \"date-range-dropdown\":dateRangeDropdown,\n    // \"world-map\":worldMap\n\t},\n    data(){\n        return {\n            // Seconds per hour\n            BUCKETIFY_BUCKET_SIZE:3600,\n            timeRange:{toTime:null,fromTime:null},\n            data:{\n                \"ready\":false,\n                \"data\":[],\n            },\n            layout:{\n                \"ready\":false,\n                \"layout\":{\n                    \"title\":\"Available Endpoints Over Time\",\n                    \"xaxis\":{\n                        \"type\":\"date\",\n                        \"title\":\"Date\"\n                    },\n                    \"yaxis\":{\n                        \"title\":\"Number of Endpoints\",\n                    }\n                }\n            },\n            spinner:{\"message\":\"Generating graph...\",\"show\":true},\n            bubbles:[]\n        }\n    },\n    methods:{\n        setTimeRange(range){\n            this.timeRange = range;\n        },\n        processEndpoints(){\n            const endpoints = this.$store.state.endpoints;\n            this.bubbles = endpoints.map((endpoint)=>({\n                radius:5,\n                latitude:endpoint.location[0],\n                longitude:endpoint.location[1],\n                name:\"M\"+endpoint.monitor\n            }))\n        },\n        processData(fromTime, toTime){\n            this.data.ready=false;\n            const jsonDataRows = this.$store.state.data;\n            const buckets = new Bucketify({\n                \"list\":jsonDataRows.filter((curr)=>(curr.start>=fromTime && curr.start<=toTime)),\n                getProperty:(curr)=>parseFloat(curr.start),\n                \"bucketSize\":this.BUCKETIFY_BUCKET_SIZE,\n            });\n            const monitorCounts = [];\n            const monitorDates  = [];\n            buckets.buckets.forEach((bucket)=>{\n                // Get count of unique monitors running experiments per hour\n                const monitorIds = new Set(bucket.vals.map((val)=>val.monitor));\n                monitorCounts.push(monitorIds.size);\n                monitorCounts.push(monitorIds.size);\n                // Add the dates for the buckets min and max timestamps\n                const minBucketDate = moment(bucket.min,\"X\");\n                monitorDates.push(minBucketDate.format(\"YYYY-MM-DD HH:mm:ss\"));\n                const maxBucketDate = moment(bucket.max,\"X\");\n                monitorDates.push(maxBucketDate.format(\"YYYY-MM-DD HH:mm:ss\"));\n            })\n            this.spinner.message =\"Generating graph...\";\n            this.layout.layout.yaxis.range = [0,Math.max(...monitorCounts)];\n            this.data.data[0] = {\n                \"x\":monitorDates,\n                \"y\":monitorCounts,\n                \"mode\":'lines',\n            }\n            this.layout.ready=true;\n            this.data.ready=true;\n            this.spinner.show=false;\n        },\n        graphData(){\n            this.spinner.message=\"Fetching data...\";\n            let {toTime,fromTime}=this.timeRange;\n            // Default fromTime is 0\n            fromTime = (fromTime!=null) ? fromTime : 0;\n            // Default toTime is current time\n            toTime = (toTime!=null) ? toTime : parseFloat(moment().format(\"X\"));\n            this.$store.dispatch('loadData',fromTime).then(()=>{\n                this.spinner.message =`Processing data...`;\n                this.processData(fromTime, toTime);\n                this.processEndpoints();\n            })\n        }\n    },\n    mounted(){\n        this.graphData();\n    }\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Data.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Data.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Data.vue?vue&type=template&id=5ee187f2&\"\nimport script from \"./Data.vue?vue&type=script&lang=js&\"\nexport * from \"./Data.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
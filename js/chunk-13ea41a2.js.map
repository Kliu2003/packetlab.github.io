{"version":3,"sources":["webpack:///./node_modules/stats-lite/stats.js","webpack:///./node_modules/core-js/modules/es.string.split.js","webpack:///./src/views/Monitors.vue?9720","webpack:///./node_modules/isnumber/index.js","webpack:///./src/components/heatmap.vue?4665","webpack:///./src/mixins/graph-setup.js","webpack:///./node_modules/ac-colors/index.min.js","webpack:///./src/views/Monitors.vue?6d0b","webpack:///./src/components/heatmap.vue?ded2","webpack:///src/components/heatmap.vue","webpack:///./src/components/heatmap.vue?581d","webpack:///./src/components/heatmap.vue","webpack:///src/views/Monitors.vue","webpack:///./src/views/Monitors.vue?906e","webpack:///./src/views/Monitors.vue","webpack:///./node_modules/core-js/modules/es.number.min-safe-integer.js"],"names":["module","exports","numbers","sum","mean","median","mode","variance","populationVariance","sampleVariance","stdev","populationStdev","sampleStdev","percentile","histogram","isNumber","vals","nums","i","length","push","nsort","sort","a","b","total","NaN","half","dist","value","me","rank","Object","keys","modes","Set","modeCount","add","valuesMinusMeanSquared","avg","diffs","Math","pow","sqrt","ptile","int_part","fract","min","bins","round","max","range","binWidth","midpoint","leftEdge","floor","hist","values","Array","fill","binLimits","binIndex","fixRegExpWellKnownSymbolLogic","isRegExp","anObject","requireObjectCoercible","speciesConstructor","advanceStringIndex","toLength","callRegExpExec","regexpExec","fails","arrayPush","MAX_UINT32","SUPPORTS_Y","RegExp","SPLIT","nativeSplit","maybeCallNative","internalSplit","split","separator","limit","string","String","this","lim","undefined","call","match","lastIndex","lastLength","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","separatorCopy","source","slice","index","apply","test","O","splitter","regexp","res","done","rx","S","C","unicodeMatching","p","q","A","e","z","n","isNaN","parseFloat","isFinite","data","cdfSubdivisions","graphColor","Color","latencyHourlySpinner","show","message","latencyHourlyData","latencyHourlyLayout","latencyTimeSpinner","latencyTimeData","latencyTimeLayout","latencyTimeCDFData","latencyTimeCDFLayout","bandwidthTimeSpinner","bandwidthTimeData","bandwidthTimeLayout","bandwidthTimeCDFData","bandwidthTimeCDFLayout","bandwidthHourlySpinner","bandwidthHourlyData","bandwidthHourlyLayout","rttTimeSpinner","rttTimeData","rttTimeLayout","rttHourlySpinner","rttHourlyData","rttHourlyLayout","computed","endpointGraphs","_defineProperties","o","r","t","enumerable","configurable","writable","defineProperty","key","_createClass","prototype","color","type","precision","capitalize","l","u","s","updateColor","TypeError","toLowerCase","validTypes","includes","rgbToXyz","hslToRgb","hexToRgb","labToXyz","lchABToLab","luvToXyz","lchUVToLuv","_xyz","_rgb","xyzToRgb","_hsl","rgbToHsl","_hex","rgbToHex","_lab","xyzToLab","_lchab","labToLCHab","_luv","xyzToLuv","_lchuv","luvToLCHuv","abs","map","toString","replace","exec","parseInt","ea","ta","Fa","d65","cbrt","c","maxZeroTolerance","atan2","PI","cos","sin","h","luminance","rgb","random","randomFromString","mc","charCodeAt","randomOfType","randomOfTypeFormatted","contrastTextColor","contrastRatio","get","set","join","toUpperCase","hsl","toFixed","xyz","lab","lchab","luv","lchuv","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","_v","_s","endpointData","id","description","lastSeenTime","lastSeenIP","_e","processHeatmapData","name","params","on","setTimeRange","heatmapSpinner","dataSummary","_l","graph","layout","spinner","staticRenderFns","ref","class","showFullLegend","status","$event","toggleHiddenStatus","style","backgroundColor","legendToggleText","graphLayout","graphData","graphConfig","tempSpinner","component","$","target","stat","MIN_SAFE_INTEGER"],"mappings":"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","file":"js/chunk-13ea41a2.js","sourcesContent":["\"use strict\";\n\nmodule.exports.numbers = numbers\nmodule.exports.sum = sum\nmodule.exports.mean = mean\nmodule.exports.median = median\nmodule.exports.mode = mode\nmodule.exports.variance = populationVariance\nmodule.exports.sampleVariance = sampleVariance\nmodule.exports.populationVariance = populationVariance\nmodule.exports.stdev = populationStdev\nmodule.exports.sampleStdev = sampleStdev\nmodule.exports.populationStdev = populationStdev\nmodule.exports.percentile = percentile\nmodule.exports.histogram = histogram\n\nvar isNumber = require(\"isnumber\")\n\nfunction numbers(vals) {\n  var nums = []\n  if (vals == null)\n    return nums\n\n  for (var i = 0; i < vals.length; i++) {\n    if (isNumber(vals[i]))\n      nums.push(+vals[i])\n  }\n  return nums\n}\n\nfunction nsort(vals) {\n  return vals.sort(function numericSort(a, b) { return a - b })\n}\n\nfunction sum(vals) {\n  vals = numbers(vals)\n  var total = 0\n  for (var i = 0; i < vals.length; i++) {\n    total += vals[i]\n  }\n  return total\n}\n\nfunction mean(vals) {\n  vals = numbers(vals)\n  if (vals.length === 0) return NaN\n  return (sum(vals) / vals.length)\n}\n\nfunction median(vals) {\n  vals = numbers(vals)\n  if (vals.length === 0) return NaN\n\n  var half = (vals.length / 2) | 0\n\n  vals = nsort(vals)\n  if (vals.length % 2) {\n    // Odd length, true middle element\n    return vals[half]\n  }\n  else {\n    // Even length, average middle two elements\n    return (vals[half-1] + vals[half]) / 2.0\n  }\n}\n\n// Returns the mode of a unimodal dataset\n// If the dataset is multi-modal, returns a Set containing the modes\nfunction mode(vals) {\n  vals = numbers(vals)\n  if (vals.length === 0) return NaN\n  var mode = NaN\n  var dist = {}\n\n  for (var i = 0; i < vals.length; i++) {\n    var value = vals[i]\n    var me = dist[value] || 0\n    me++\n    dist[value] = me\n  }\n\n  var rank = numbers(Object.keys(dist).sort(function sortMembers(a, b) { return dist[b] - dist[a] }))\n  mode = rank[0]\n  if (dist[rank[1]] == dist[mode]) {\n    // multi-modal\n    if (rank.length == vals.length) {\n      // all values are modes\n      return vals\n    }\n    var modes = new Set([mode])\n    var modeCount = dist[mode]\n    for (var i = 1; i < rank.length; i++) {\n      if (dist[rank[i]] == modeCount) {\n        modes.add(rank[i])\n      }\n      else {\n        break\n      }\n    }\n    return modes\n  }\n  return mode\n}\n\n// This helper finds the mean of all the values, then squares the difference\n// from the mean for each value and returns the resulting array.  This is the\n// core of the varience functions - the difference being dividing by N or N-1.\nfunction valuesMinusMeanSquared(vals) {\n  vals = numbers(vals)\n  var avg = mean(vals)\n  var diffs = []\n  for (var i = 0; i < vals.length; i++) {\n    diffs.push(Math.pow((vals[i] - avg), 2))\n  }\n  return diffs\n}\n\n// Population Variance = average squared deviation from mean\nfunction populationVariance(vals) {\n  return mean(valuesMinusMeanSquared(vals))\n}\n\n// Sample Variance\nfunction sampleVariance(vals) {\n  var diffs = valuesMinusMeanSquared(vals)\n  if (diffs.length <= 1) return NaN\n\n  return sum(diffs) / (diffs.length - 1)\n}\n\n\n// Population Standard Deviation = sqrt of population variance\nfunction populationStdev(vals) {\n  return Math.sqrt(populationVariance(vals))\n}\n\n// Sample Standard Deviation = sqrt of sample variance\nfunction sampleStdev(vals) {\n  return Math.sqrt(sampleVariance(vals))\n}\n\nfunction percentile(vals, ptile) {\n  vals = numbers(vals)\n  if (vals.length === 0 || ptile == null || ptile < 0) return NaN\n\n  // Fudge anything over 100 to 1.0\n  if (ptile > 1) ptile = 1\n  vals = nsort(vals)\n  var i = (vals.length * ptile) - 0.5\n  if ((i | 0) === i) return vals[i]\n  // interpolated percentile -- using Estimation method\n  var int_part = i | 0\n  var fract = i - int_part\n  return (1 - fract) * vals[int_part] + fract * vals[Math.min(int_part + 1, vals.length - 1)]\n}\n\nfunction histogram (vals, bins) {\n  if (vals == null) {\n    return null\n  }\n  vals = nsort(numbers(vals))\n  if (vals.length === 0) {\n    return null\n  }\n  if (bins == null) {\n    // pick bins by simple method: Math.sqrt(n)\n    bins = Math.sqrt(vals.length)\n  }\n  bins = Math.round(bins)\n  if (bins < 1) {\n    bins = 1\n  }\n\n  var min = vals[0]\n  var max = vals[vals.length - 1]\n  if (min === max) {\n    // fudge for non-variant data\n    min = min - 0.5\n    max = max + 0.5\n  }\n\n  var range = (max - min)\n  // make the bins slightly larger by expanding the range about 10%\n  // this helps with dumb floating point stuff\n  var binWidth = (range + (range * 0.05)) / bins\n  var midpoint = (min + max) / 2\n  // even bin count, midpoint makes an edge\n  var leftEdge = midpoint - (binWidth * Math.floor(bins / 2))\n  if (bins % 2 !== 0) {\n    // odd bin count, center middle bin on midpoint\n    var leftEdge = (midpoint - (binWidth / 2)) - (binWidth * Math.floor(bins / 2))\n  }\n\n  var hist = {\n    values: Array(bins).fill(0),\n    bins: bins,\n    binWidth: binWidth,\n    binLimits: [leftEdge, leftEdge + (binWidth * bins)]\n  }\n\n  var binIndex = 0\n  for (var i = 0; i < vals.length; i++) {\n    while (vals[i] > (((binIndex + 1) * binWidth) + leftEdge)) {\n      binIndex++\n    }\n    hist.values[binIndex]++\n  }\n\n  return hist\n}\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\n\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, !SUPPORTS_Y);\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Monitors.vue?vue&type=style&index=0&id=e1131b62&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Monitors.vue?vue&type=style&index=0&id=e1131b62&lang=scss&scoped=true&\"","module.exports = isNumber\n\n/**\n * Determine if something is a non-infinite javascript number.\n * @param  {Number}  n A (potential) number to see if it is a number.\n * @return {Boolean}   True for non-infinite numbers, false for all else.\n */\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./heatmap.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./heatmap.vue?vue&type=style&index=0&lang=scss&\"","import Color from \"ac-colors\"\nexport default {\n    data(){\n        return {\n            cdfSubdivisions:1000,\n            graphColor:{\n                \"primary\":new Color({\"type\":\"hex\", \"color\":\"#7FA44F\"}),\n                \"secondary\":new Color({\"type\":\"hex\", \"color\":\"#989998\"})\n            },\n            latencyHourlySpinner:{\n                show:true,\n                message:\"Generating graph...\"\n            },\n            latencyHourlyData:{\n                \"ready\":false,\n                \"data\":[],\n            },\n            latencyHourlyLayout:{\n                \"ready\":false,\n                \"layout\":{\n                    \"title\":\"Average DNS Query Latency by Hour\",\n                    \"xaxis\":{\n                        \"title\":\"Hour of Day (UTC)\",\n                        \"range\":[0,23],\n                        \"dtick\":1\n                    },\n                    \"yaxis\":{\n                        \"title\":\"Average Endpoint DNS Query Latency (ms)\",\n                    }\n                }\n            },\n            latencyTimeSpinner:{\n                show:true,\n                message:\"Generating graph...\"\n            },\n            latencyTimeData:{\n                \"ready\":false,\n                \"data\":[],\n            },\n            latencyTimeLayout:{\n                \"ready\":false,\n                \"layout\":{\n                    \"title\":\"DNS Query Latency to Different DNS Resolvers over Time\",\n                    \"xaxis\":{\n                        \"title\":\"Date\",\n                        \"type\":\"date\"\n                    },\n                    \"yaxis\":{\n                        \"title\":\"Endpoint DNS Query Latency (ms)\",\n                    }\n                }\n            },\n            latencyTimeCDFData:{\n                \"ready\":false,\n                \"data\":[],\n            },\n            latencyTimeCDFLayout:{\n                \"ready\":false,\n                \"layout\":{\n                    \"title\":\"CDF for DNS Query Latency to Different DNS Resolvers over Time\",\n                    \"xaxis\":{\n                        \"title\":\"Endpoint DNS Query Latency (ms)\",\n                        \"autorange\":false,\n                    },\n                    \"yaxis\":{\n                        \"title\":\"Cumulative Probability\",\n                        \"autorange\":false,\n                        \"range\":[0,1],\n                    }\n                }\n            },\n            bandwidthTimeSpinner:{\n                show:true,\n                message:\"Generating graph...\"\n            },\n            bandwidthTimeData:{\n                \"ready\":false,\n                \"data\":[],\n            },\n            bandwidthTimeLayout:{\n                \"ready\":false,\n                \"layout\":{\n                    \"title\":\"Available Bandwidth & Bottleneck Bandwidth to Controller over Time\",\n                    \"xaxis\":{\n                        \"title\":\"Date\",\n                        \"type\":\"date\"\n                    },\n                    \"yaxis\":{\n                        \"title\":\"Measured Bandwidth (Mbps)\",\n                    }\n                }\n            },\n            bandwidthTimeCDFData:{\n                \"ready\":false,\n                \"data\":[],\n            },\n            bandwidthTimeCDFLayout:{\n                \"ready\":false,\n                \"layout\":{\n                    \"title\":\"CDF for Available Bandwidth & Bottleneck Bandwidth to Controller over Time\",\n                    \"xaxis\":{\n                        \"title\":\"Measured Bandwidth (Mbps)\",\n                        \"autorange\":false,\n                    },\n                    \"yaxis\":{\n                        \"title\":\"Cumulative Probability\",\n                        \"autorange\":false,\n                        \"range\":[0,1],\n                    }\n                }\n            },\n            bandwidthHourlySpinner:{\n                show:true,\n                message:\"Generating graph...\"\n            },\n            bandwidthHourlyData:{\n                \"ready\":false,\n                \"data\":[],\n            },\n            bandwidthHourlyLayout:{\n                \"ready\":false,\n                \"layout\":{\n                    \"title\":\"Average Available Bandwidth & Bottleneck Bandwidth to Controller by Hour\",\n                    \"xaxis\":{\n                        \"title\":\"Hour of Day (UTC)\",\n                        \"range\":[0,23],\n                        \"dtick\":1\n                    },\n                    \"yaxis\":{\n                        \"title\":\"Average Measured Bandwidth (Mbps)\",\n                    }\n                }\n            },\n            rttTimeSpinner:{\n                show:true,\n                message:\"Generating graph...\"\n            },\n            rttTimeData:{\n                \"ready\":false,\n                \"data\":[],\n            },\n            rttTimeLayout:{\n                \"ready\":false,\n                \"layout\":{\n                    \"title\":\"Endpoint Controller RTT over Time\",\n                    \"xaxis\":{\n                        \"title\":\"Date\",\n                        \"type\":\"date\"\n                    },\n                    \"yaxis\":{\n                        \"title\":\"Endpoint Controller RTT (ms)\",\n                    }\n                }\n            },\n            rttHourlySpinner:{\n                show:true,\n                message:\"Generating graph...\"\n            },\n            rttHourlyData:{\n                \"ready\":false,\n                \"data\":[],\n            },\n            rttHourlyLayout:{\n                \"ready\":false,\n                \"layout\":{\n                    \"title\":\"Average Endpoint Controller RTT by Hour\",\n                    \"xaxis\":{\n                        \"title\":\"Hour of Day (UTC)\",\n                        \"range\":[0,23],\n                        \"dtick\":1\n                    },\n                    \"yaxis\":{\n                        \"title\":\"Average Endpoint Controller RTT (ms)\",\n                    }\n                }\n            },\n        }\n    },\n    computed:{\n        endpointGraphs(){\n            return [\n                { \"spinner\":this.latencyTimeSpinner, \"data\":this.latencyTimeData, \"layout\":this.latencyTimeLayout },\n                { \"spinner\":this.latencyTimeSpinner, \"data\":this.latencyTimeCDFData, \"layout\":this.latencyTimeCDFLayout },\n                { \"spinner\":this.latencyHourlySpinner, \"data\":this.latencyHourlyData, \"layout\":this.latencyHourlyLayout },\n                { \"spinner\":this.bandwidthTimeSpinner, \"data\":this.bandwidthTimeData, \"layout\":this.bandwidthTimeLayout },\n                { \"spinner\":this.bandwidthTimeSpinner, \"data\":this.bandwidthTimeCDFData, \"layout\":this.bandwidthTimeCDFLayout },\n                { \"spinner\":this.bandwidthHourlySpinner, \"data\":this.bandwidthHourlyData, \"layout\":this.bandwidthHourlyLayout },\n                { \"spinner\":this.rttTimeSpinner, \"data\":this.rttTimeData, \"layout\":this.rttTimeLayout },\n                { \"spinner\":this.rttHourlySpinner, \"data\":this.rttHourlyData, \"layout\":this.rttHourlyLayout },\n            ]\n        }\n    }\n}","\"use strict\";function _defineProperties(o,r){for(var t=0;t<r.length;t++){var e=r[t];e.enumerable=e.enumerable||!1,e.configurable=!0,\"value\"in e&&(e.writable=!0),Object.defineProperty(o,e.key,e)}}function _createClass(o,r,t){return r&&_defineProperties(o.prototype,r),t&&_defineProperties(o,t),o}var Color=function(){function Color(o){var r=void 0===o?{color:[0,0,0],type:\"rgb\",precision:3,capitalize:!0}:o,t=r.color,e=void 0===t?[0,0,0]:t,n=r.type,a=void 0===n?\"rgb\":n,i=r.precision,l=void 0===i?3:i,u=r.capitalize,s=void 0===u||u;this.updateColor(e,a),this.precision=l,this.capitalize=s}return Color.prototype.updateColor=function updateColor(o,r){var t;if(void 0===r&&(r=\"rgb\"),\"string\"!=typeof r)throw new TypeError(\"Parameter 2 must be of type string.\");if(r=r.toLowerCase(),!Color.validTypes.includes(r))throw new TypeError(\"Parameter 2 '\"+r+\"' is not a valid type.\");switch(r){case\"rgb\":t=Color.rgbToXyz(o);break;case\"hsl\":t=Color.rgbToXyz(Color.hslToRgb(o));break;case\"hex\":t=Color.rgbToXyz(Color.hexToRgb(o));break;case\"lab\":t=Color.labToXyz(o);break;case\"lchab\":t=Color.labToXyz(Color.lchABToLab(o));break;case\"luv\":t=Color.luvToXyz(o);break;case\"lchuv\":t=Color.luvToXyz(Color.lchUVToLuv(o));break;case\"xyz\":case\"default\":this._xyz=o,this._rgb=Color.xyzToRgb(this._xyz),this._hsl=Color.rgbToHsl(this._rgb),this._hex=Color.rgbToHex(this._rgb),this._lab=Color.xyzToLab(this._xyz),this._lchab=Color.labToLCHab(this._lab),this._luv=Color.xyzToLuv(this._xyz),this._lchuv=Color.luvToLCHuv(this._luv)}\"xyz\"!==r&&this.updateColor(t,\"xyz\")},Color.rgbToHsl=function rgbToHsl(o){var r=o[0]/255,t=o[1]/255,e=o[2]/255,n=Math.max(r,t,e),a=Math.min(r,t,e),i=(n+a)/2,l=0,u=0;return n!==a&&(l=i<.5?(n-a)/(n+a):(n-a)/(2-n-a),u=r===n?(t-e)/(n-a):t===n?2+(e-r)/(n-a):4+(r-t)/(n-a)),[(u=(u*=60)<0?u%360+360:u)+0,(l*=100)+0,(i*=100)+0]},Color.hslToRgb=function hslToRgb(o){var r=o[0],t=o[1],e=o[2];isFinite(r)||(r=0),isFinite(t)||(t=0),isFinite(e)||(e=0),r=r<0?r%360+360:r,e/=100,t/=100,r/=60;var n=(1-Math.abs(2*e-1))*t,a=n*(1-Math.abs(r%2-1)),i=e-n/2,l=r<1?[n,a,0]:r<2?[a,n,0]:r<3?[0,n,a]:r<4?[0,a,n]:r<5?[a,0,n]:[n,0,a];return l.map(function(o){return Math.round(255*(o+i))+0})},Color.rgbToHex=function rgbToHex(o){function S(o){var r=o.toString(16);return 1===r.length?\"0\"+r:r}var r=o[0],t=o[1],e=o[2];return\"#\"+S(r)+S(t)+S(e)},Color.hexToRgb=function hexToRgb(o){o=o.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,function(o,r,t,e){return r+r+t+t+e+e});var r=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(o);return r?[parseInt(r[1],16),parseInt(r[2],16),parseInt(r[3],16)]:null},Color.rgbToXyz=function rgbToXyz(o){function ea(o){return o<=.04045?o/12.92:Math.pow((o+.055)/1.055,2.4)}var r=o[0]/255,t=o[1]/255,e=o[2]/255,n=ea(r),a=ea(t),i=ea(e);return[100*(.4124*n+.3576*a+.1805*i)+0,100*(.2126*n+.7152*a+.0722*i)+0,100*(.0193*n+.1192*a+.9505*i)+0]},Color.xyzToRgb=function xyzToRgb(o){function ta(o){return o<=.0031308?12.92*o:1.055*Math.pow(o,1/2.4)-.055}var r=o[0]/100,t=o[1]/100,e=o[2]/100,n=-.9689307147293197*r+1.8757560608852415*t+.041517523842953964*e,a=.055710120445510616*r+-.2040210505984867*t+1.0569959422543882*e,i=ta(3.2406254773200533*r-1.5372079722103187*t-.4986285986982479*e),l=ta(n),u=ta(a);return[Math.round(255*i)+0,Math.round(255*l)+0,Math.round(255*u)+0]},Color.xyzToLab=function xyzToLab(o){function Fa(o){return 216/24389<o?n(o):(24389/27*o+16)/116}var r=o[0]/Color.d65[0],t=o[1]/Color.d65[1],e=o[2]/Color.d65[2],n=null!=Math.cbrt?Math.cbrt:function(o){return Math.pow(o,1/3)},a=Fa(r),i=Fa(t);return[116*i-16,0+500*(a-i),0+200*(i-Fa(e))]},Color.labToXyz=function labToXyz(o){var r=o[0],t=o[1],e=216/24389,n=24389/27,a=(r+16)/116,i=a-o[2]/200,l=t/500+a,u=Math.pow(l,3)>e?Math.pow(l,3):(116*l-16)/n,s=8<r?Math.pow((r+16)/116,3):r/n,c=Math.pow(i,3)>e?Math.pow(i,3):(116*i-16)/n;return[u*Color.d65[0]+0,s*Color.d65[1]+0,c*Color.d65[2]+0]},Color.labToLCHab=function labToLCHab(o){var r=o[1],t=Math.abs(o[2])<Color.maxZeroTolerance?0:o[2],e=Math.sqrt(r*r+t*t),n=0<=Math.atan2(t,r)?Math.atan2(t,r)/Math.PI*180:Math.atan2(t,r)/Math.PI*180+360;return[o[0]+0,e+0,0+n]},Color.lchABToLab=function lchABToLab(o){var r=o[1],t=o[2],e=r*Math.cos(t/180*Math.PI),n=r*Math.sin(t/180*Math.PI);return[o[0]+0,0+e,0+n]},Color.xyzToLuv=function xyzToLuv(o){var r=o[0],t=o[1],e=o[2],n=Color.d65[0],a=Color.d65[1],i=Color.d65[2],l=9*a/(n+15*a+3*i),u=4*n/(n+15*a+3*i);if(0===r&&0===t&&0===e)return[0,0,0];var s=9*t/(r+15*t+3*e),c=4*r/(r+15*t+3*e),h=t/a,C=null!=Math.cbrt?Math.cbrt:function(o){return Math.pow(o,1/3)},p=216/24389<h?116*C(h,1/3)-16:24389/27*h;return[0+p,0+13*p*(c-u),0+13*p*(s-l)]},Color.luvToXyz=function luvToXyz(o){var r=o[0],t=o[1],e=o[2],n=Color.d65[0],a=Color.d65[1],i=Color.d65[2],l=9*a/(n+15*a+3*i),u=4*n/(n+15*a+3*i),s=8<r?Math.pow((r+16)/116,3):r/(24389/27),c=-5*s,h=(52*r/(t+13*r*u)-1)/3||0,C=((s*(39*r/(e+13*r*l)-5)||0)-c)/(h- -1/3);return[100*C+0,100*s+0,100*(C*h+c)+0]},Color.luvToLCHuv=function luvToLCHuv(o){var r=o[0],t=Math.abs(o[1])<Color.maxZeroTolerance?0:o[1],e=Math.abs(o[2])<Color.maxZeroTolerance?0:o[2],n=Math.sqrt(t*t+e*e),a=180*Math.atan2(e,t)/Math.PI;return[r+0,n+0,(a=0<=a?a:a+360)+0]},Color.lchUVToLuv=function lchUVToLuv(o){var r=o[0],t=o[1],e=o[2]/180*Math.PI;return[r+0,0+t*Math.cos(e),0+t*Math.sin(e)]},Color.luminance=function luminance(o,r){if(void 0===r&&(r=\"rgb\"),\"string\"!=typeof r)throw new TypeError(\"Parameter 2 must be of type string.\");if(r=r.toLowerCase(),!Color.validTypes.includes(r))throw new TypeError(\"Parameter 2 '\"+r+\"' is not a valid type.\");\"rgb\"!==r&&(o=new Color({color:o,type:r}).rgb);for(var t=0;t<o.length;t++)o[t]/=255,o[t]<.03928?o[t]/=12.92:o[t]=Math.pow((o[t]+.055)/1.055,2.4);return.2126*o[0]+.7152*o[1]+.0722*o[2]},Color.random=function random(){return new Color({color:[255,255,255].map(function(o){return Math.round(o*Math.random())})})},Color.randomFromString=function randomFromString(o){void 0===o&&(o=\"\");function mc(o){for(var r=4294967295,t=0;t<o.length;t++){var e=4026531840&(r=(r<<4)+o.charCodeAt(t));0!=e&&(r^=e>>>24,r^=e)}return Math.abs(r)}var r=mc(o),t=mc(o+r);return new Color({color:[r%256,t%256,mc(o+t)%256]})},Color.randomOfType=function randomOfType(o){if(void 0===o&&(o=\"rgb\"),\"string\"!=typeof o)throw new TypeError(\"Parameter 1 must be of type string.\");if(o=o.toLowerCase(),!Color.validTypes.includes(o))throw new TypeError(\"Parameter 1 '\"+o+\"' is not a valid type.\");return Color.random()[o]},Color.randomOfTypeFormatted=function randomOfTypeFormatted(o,r,t){if(void 0===o&&(o=\"rgb\"),void 0===r&&(r=!0),void 0===t&&(t=3),\"string\"!=typeof o)throw new TypeError(\"Parameter 1 must be of type string.\");if(o=o.toLowerCase(),!Color.validTypes.includes(o))throw new TypeError(\"Parameter 1 '\"+o+\"' is not a valid type.\");var e=Color.random();return e.capitalize=r,e.precision=t,e[o+\"String\"]},Color.contrastTextColor=function contrastTextColor(o,r){if(void 0===r&&(r=\"rgb\"),\"string\"!=typeof r)throw new TypeError(\"Parameter 2 must be of type string.\");if(r=r.toLowerCase(),!Color.validTypes.includes(r))throw new TypeError(\"Parameter 2 '\"+r+\"' is not a valid type.\");var t=Color.contrastRatio(new Color({color:[255,255,255]}),new Color({color:o,type:r}));return Color.contrastRatio(new Color({color:[0,0,0]}),new Color({color:o,type:r}))<t?\"#FFFFFF\":\"#000000\"},Color.contrastRatio=function contrastRatio(o,r){if(!(o instanceof Color))throw new TypeError(\"Parameter 1 must be of type Color.\");if(!(r instanceof Color))throw new TypeError(\"Parameter 2 must be of type Color.\");var t=Color.luminance(o.rgb)+.05,e=Color.luminance(r.rgb)+.05;return t<e?e/t:t/e},_createClass(Color,[{key:\"rgb\",get:function get(){return this._rgb},set:function set(o){this.updateColor(o,\"rgb\")}},{key:\"rgbString\",get:function get(){var o=\"RGB(\"+this.rgb.join(\", \")+\")\";return this.capitalize?o.toUpperCase():o.toLowerCase()}},{key:\"hsl\",get:function get(){return this._hsl},set:function set(o){this.updateColor(o,\"hsl\")}},{key:\"hslString\",get:function get(){var r=this,o=\"HSL(\"+this.hsl.map(function(o){return o.toFixed(r.precision)}).join(\", \")+\")\";return this.capitalize?o.toUpperCase():o.toLowerCase()}},{key:\"hex\",get:function get(){return this._hex},set:function set(o){this.updateColor(o,\"hex\")}},{key:\"hexString\",get:function get(){var o=this._hex;return this.capitalize?o.toUpperCase():o.toLowerCase()}},{key:\"xyz\",get:function get(){return this._xyz},set:function set(o){this.updateColor(o,\"xyz\")}},{key:\"xyzString\",get:function get(){var r=this,o=\"XYZ(\"+this.xyz.map(function(o){return o.toFixed(r.precision)}).join(\", \")+\")\";return this.capitalize?o.toUpperCase():o.toLowerCase()}},{key:\"lab\",get:function get(){return this._lab},set:function set(o){this.updateColor(o,\"lab\")}},{key:\"labString\",get:function get(){var r=this,o=\"LAB(\"+this.lab.map(function(o){return o.toFixed(r.precision)}).join(\", \")+\")\";return this.capitalize?o.toUpperCase():o.toLowerCase()}},{key:\"lchab\",get:function get(){return this._lchab},set:function set(o){this.updateColor(o,\"lchab\")}},{key:\"lchabString\",get:function get(){var r=this,o=this.lchab.map(function(o){return o.toFixed(r.precision)});return this.capitalize?\"LCHab(\"+o.join(\", \")+\")\":\"lchAB(\"+o.join(\", \")+\")\"}},{key:\"luv\",get:function get(){return this._luv},set:function set(o){this.updateColor(o,\"luv\")}},{key:\"luvString\",get:function get(){var r=this,o=\"LUV(\"+this.luv.map(function(o){return o.toFixed(r.precision)}).join(\", \")+\")\";return this.capitalize?o.toUpperCase():o.toLowerCase()}},{key:\"lchuv\",get:function get(){return this._lchuv},set:function set(o){this.updateColor(o,\"lchuv\")}},{key:\"lchuvString\",get:function get(){var r=this,o=this.lchuv.map(function(o){return o.toFixed(r.precision)});return this.capitalize?\"LCHuv(\"+o.join(\", \")+\")\":\"lchUV(\"+o.join(\", \")+\")\"}}]),Color}();Color.validTypes=[\"rgb\",\"hex\",\"hsl\",\"xyz\",\"lab\",\"lchab\",\"luv\",\"lchuv\"],Color.d65=[95.05,100,108.9],Color.maxZeroTolerance=Math.pow(10,-12),module.exports=Color;","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('main',{staticClass:\"monitors\"},[(_vm.monitorIDs)?_c('ac-grid',{attrs:{\"cols\":\"12\",\"align-h\":\"center\"}},[_c('ac-col',{staticClass:\"graph-row\",attrs:{\"cols\":\"11\"}},[_c('ac-grid',{staticClass:\"endpoint-summary\",attrs:{\"cols\":\"4\"}},[_c('ac-col',{staticClass:\"summary-section\",attrs:{\"cols\":\"4\",\"md-cols\":\"2\",\"lg-cols\":\"1\"}},[_c('div',{staticClass:\"summary-key\"},[_vm._v(\"Monitor\")]),_c('div',{staticClass:\"summary-value\"},[_vm._v(_vm._s(_vm.endpointData.id))])]),_c('ac-col',{staticClass:\"summary-section\",attrs:{\"cols\":\"4\",\"md-cols\":\"2\",\"lg-cols\":\"1\"}},[_c('div',{staticClass:\"summary-key\"},[_vm._v(\"Description\")]),_c('div',{staticClass:\"summary-value\"},[_vm._v(_vm._s(_vm.endpointData.description))])]),_c('ac-col',{staticClass:\"summary-section\",attrs:{\"cols\":\"4\",\"md-cols\":\"2\",\"lg-cols\":\"1\"}},[_c('div',{staticClass:\"summary-key\"},[_vm._v(\"Last Seen\")]),_c('div',{staticClass:\"summary-value\"},[_vm._v(_vm._s(_vm.endpointData.lastSeenTime))])]),_c('ac-col',{staticClass:\"summary-section\",attrs:{\"cols\":\"4\",\"md-cols\":\"2\",\"lg-cols\":\"1\"}},[_c('div',{staticClass:\"summary-key\"},[_vm._v(\"Last IP\")]),_c('div',{staticClass:\"summary-value\"},[_vm._v(_vm._s(_vm.endpointData.lastSeenIP))])])],1)],1)],1):_vm._e(),_c('ac-grid',{attrs:{\"cols\":\"12\",\"align-h\":\"center\"}},[_c('ac-col',{attrs:{\"cols\":\"11\"}},[_c('date-range-dropdown',{attrs:{\"callback\":_vm.processHeatmapData,\"route\":{name:'Monitors',params:{id:this.params.id}}},on:{\"change\":_vm.setTimeRange}})],1)],1),_c('ac-grid',{attrs:{\"cols\":\"12\",\"align-h\":\"center\"}},[_c('ac-col',{staticClass:\"graph-row\",attrs:{\"cols\":\"11\"}},[_c('heatmap',{attrs:{\"spinner\":_vm.heatmapSpinner,\"dataSummary\":_vm.dataSummary,\"legend\":\"\",\"embedIDURL\":function (id, name){ return (\"<a href='#/monitors/\" + id + \"' style='font-size:10px;' target='_self'>\" + name + \"</a>\"); }}})],1)],1),(_vm.monitorIDs)?_c('div',_vm._l((_vm.endpointGraphs),function(graph,i){return _c('ac-grid',{key:i,attrs:{\"cols\":\"12\",\"align-h\":\"center\"}},[_c('ac-col',{staticClass:\"graph-row\",attrs:{\"cols\":\"11\"}},[_c('graph',{attrs:{\"data\":graph.data,\"layout\":graph.layout,\"spinner\":graph.spinner}})],1)],1)}),1):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"wrapper\",staticClass:\"status-heatmap\"},[_c('div',{ref:\"graphMenu\",staticClass:\"graph-menu\"},[(_vm.legend)?_c('div',{staticClass:\"legend-wrapper\"},[_c('div',{class:{'legend':true,'show':_vm.showFullLegend}},_vm._l((_vm.statusTypeList),function(status){return _c('div',{key:status.type,class:['key-element', (status.hidden) ? 'disabled' : ''],on:{\"click\":function($event){return _vm.toggleHiddenStatus(status.type)}}},[_c('div',{staticClass:\"key-color\",style:({backgroundColor:status.color})}),_c('div',{staticClass:\"key-label\"},[_vm._v(_vm._s(status.type))])])}),0),_c('div',{staticClass:\"legend-toggle\",on:{\"click\":function($event){_vm.showFullLegend=!_vm.showFullLegend}}},[_vm._v(_vm._s(_vm.legendToggleText))])]):_vm._e()]),_c('graph',{ref:\"graphContainer\",staticClass:\"graphContainer\",attrs:{\"layout\":_vm.graphLayout,\"data\":_vm.graphData,\"config\":_vm.graphConfig,\"spinner\":_vm.tempSpinner}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div class=\"status-heatmap\" ref=\"wrapper\">\n        <div class=\"graph-menu\" ref=\"graphMenu\">\n            <div class=\"legend-wrapper\" v-if=\"legend\">\n                <div :class=\"{'legend':true,'show':showFullLegend}\">\n                    <div :class=\"['key-element', (status.hidden) ? 'disabled' : '']\" v-for=\"status in statusTypeList\" \n                    :key=\"status.type\" \n                    @click=\"toggleHiddenStatus(status.type)\">\n                        <div class=\"key-color\" :style=\"{backgroundColor:status.color}\"></div>\n                        <div class=\"key-label\">{{status.type}}</div>\n                    </div>\n                </div>\n                <div class=\"legend-toggle\" @click=\"showFullLegend=!showFullLegend\">{{legendToggleText}}</div>\n            </div>\n        </div>\n        <graph :layout=\"graphLayout\" :data=\"graphData\" :config=\"graphConfig\" class=\"graphContainer\" ref=\"graphContainer\"\n        :spinner=\"tempSpinner\"></graph>\n    </div>\n</template>\n<script type=\"text/javascript\">\n    import graph from '@/components/graph'\n    export default {\n        props:{\n            \"dataSummary\":{\n                type:Object,\n                default:()=>({})\n            },\n            \"sort\":{\n                type:Boolean,\n                default:false,\n            },\n            \"legend\":{\n                type:Boolean,\n                default:false,\n            },\n            \"spinner\":{\n                type:Object,\n                default:()=>({\"show\":true,\"message\":\"Generating graph...\"}),\n            },\n            \"embedIDURL\":{\n                type:Function,\n                default:(id)=>id\n            }\n            \n        },\n        data(){\n            return {\n                BUCKETIFY_BUCKET_SIZE:30,\n                HEATMAP_MIN_HEIGHT:120,\n                // Bar height multiplied by number of bars for min height\n                ADJUSTED_BAR_HEIGHT:50,\n                graphGenerated:false,\n                sortMode: \"earliestFirstUpdate\",\n                sortFunctions:{\n                    earliestFirstUpdate:(a,b)=>a.minTimestamp-b.minTimestamp,\n                    latestFirstUpdate:(a,b)=>b.minTimestamp-a.minTimestamp,\n                    lastUpdated:(a,b)=>b.maxTimestamp-a.maxTimestamp,\n                    parentID:(a,b)=>(a.id>b.id) ? 1 : -1,\n                    parentIDReverse:(a,b)=>(a.id<b.id) ? 1 : -1,\n                },\n                visibleStatusTypes:[],\n                statusTypeList:[],\n                graphConfig:{\n                    \"ready\":false,\n                    \"config\":{\n                        \"responsive\":true,\n                        \"displayModeBar\": false\n                    }\n                },\n                graphLayout:{\n                    \"ready\":false,\n                    \"layout\":{\n                        \"xaxis\":{\n                            \"type\":\"date\",\n                            \"side\":\"top\",\n                        },\n                        \"yaxis\":{\n                            \"title\":{\n                            }\n                        },\n                        \"margin\": {\n                            \"b\": 20,\n                            \"t\": 50,\n                            \"r\":10,\n                            \"pad\": 0,\n                        },\n                        \"font\": {\n                            \"family\": 'sans-serif',\n                            \"size\": 16,\n                            \"color\": '#333'\n                        } \n                    }\n                },\n                tempSpinner:{\"show\":true,\"message\":\"Generating graph...\"},\n                graphData:{\n                    \"ready\":false,\n                    \"data\":[]\n                },\n                showFullLegend:false,\n            }\n        },\n        methods:{\n            updateEmbedIDURL(embedFunction){\n                if(typeof embedFunction !== \"function\"){\n                    throw TypeError(\"Argument 'embedFunction' must be of type function\");\n                }else{\n                    this.embedIDURL = embedFunction;\n                }\n            },\n            sortFunction(){\n                return this.sortFunctions[this.sortMode];\n            },\n            scale(val,baseMin,baseMax,scaledMin,scaledMax){\n                return (val-baseMin)*(scaledMax-scaledMin)/(baseMax-baseMin)+scaledMin;\n            },\n            toggleHiddenStatus(status){\n                const statusTypes = this.dataSummary.statusTypes;\n                if(statusTypes[status]!=null){\n                    statusTypes[status].hidden = !statusTypes[status].hidden;\n                    this.updateStatusTypeList();\n                    this.graph(this.dataSummary);\n                }\n            },\n            async graph(dataSummary){\n                // this.graphLayout.layout.yaxis.title.text = dataSummary.type+\" ID\";\n                this.graphLayout.layout.xaxis.range = [dataSummary.startDate, dataSummary.endDate];\n                this.graphLoading = true;\n                this.graphData.ready=false;\n                this.graphLayout.ready=false;\n                this.graphConfig.ready=false;\n                // Scale bucket size proportionally to 30 seconds per 24 hours\n                this.BUCKETIFY_BUCKET_SIZE = (this.dataSummary.maxTimestamp - this.dataSummary.minTimestamp)*(3.4722*10**-4)\n                await this.$nextTick();\n                this.graphContainer.$el.style.height = Math.max(this.ADJUSTED_BAR_HEIGHT*dataSummary.groupedData.length,this.HEATMAP_MIN_HEIGHT)+\"px\";\n                const promise = new Promise((resolve,reject)=>{ \n                    // Sort parent data and reverse (lowest index goes to bottom of graph)\n                    dataSummary.groupedData.sort(this.sortFunction()).reverse()\n                    const groupedData = JSON.parse(JSON.stringify(dataSummary.groupedData));\n                    // Get parent ids for y-axis\n                    dataSummary.parentIDs= groupedData.map(parent=>parent.id);\n                    // Generate status chart and labels for z-values\n                    // Heatmap values for visible statuses\n                    const visibleStatusTypes = this.statusTypeList;\n                    this.updateHeatmapCharts().then((heatmapCharts)=>{\n                        this.tempSpinner.message =\"Generating graph...\";\n                        // Reset graphData\n                        this.graphData.data = [];\n                        visibleStatusTypes.forEach((status, i)=>{\n                            // Set colors for heatmap values\n                            const colorScale=[];\n                            colorScale.push([\"0.0\", status.color]);\n                            colorScale.push([\"1.0\", status.color]);\n                            this.graphData.data[i]={\n                                \"x\":dataSummary.dates,\n                                \"y\":dataSummary.parentIDs.map(id=>this.embedIDURL(id,dataSummary.endpoints[id].shortDescription)),\n                                \"z\":heatmapCharts.statusChart[status.type],\n                                \"type\":'heatmap',\n                                \"hoverongaps\":false,\n                                \"colorscale\":colorScale,\n                                \"showscale\":false,\n                                \"text\":heatmapCharts.statusLabel[status.type],\n                                \"hoverinfo\":\"text\",\n                                \"ygap\":.75,\n                            };\n                        })\n                        this.graphData.ready=true;\n                        this.graphLayout.ready=true;\n                        this.graphConfig.ready=true;\n                        this.graphGenerated=true;\n                        resolve();\n                        console.timeEnd(\"Start heatmap processing\")\n                    }).catch((error)=>{\n                        reject(error);\n                    });\n                }).finally(()=>{\n                    this.graphLoading=false; \n                    this.tempSpinner.show=false;\n                })\n                return promise;\n            },\n            updateHeatmapCharts(){\n                const that = this;\n                const promise = new Promise((resolve,reject)=>{    \n                    if(!Worker){\n                        reject(Error(\"Web Workers not enabled\"));\n                    }else{\n                        const worker = new Worker(\"workers/update-heatmap-charts.worker.js\");\n                        worker.addEventListener(\"message\",(e)=>{\n                            const data = e.data;\n                            if(data.status==\"finished\"){    \n                                worker.terminate();\n                                that.dataSummary.dates = data.dates;\n                                resolve({\n                                    \"statusChart\":data.statusChart,\n                                    \"statusLabel\":data.statusLabel\n                                });\n                            }else if(data.status==\"update\"){\n                                this.tempSpinner.message =`Processing data (${data.body}%)`;\n                            }\n                        });\n                        worker.postMessage({\n                            \"dataSummary\":that.dataSummary,\n                            \"visibleStatusTypes\":that.visibleStatusTypes,\n                            \"BUCKETIFY_BUCKET_SIZE\":that.BUCKETIFY_BUCKET_SIZE,\n                        });\n                    }\n                })\n                return promise;\n            },\n            async updateStatusTypeList(){\n                this.visibleStatusTypes = null;\n                this.statusTypeList = null;\n                await this.$nextTick();\n                this.statusTypeList = Object.values(this.dataSummary.statusTypes || {});\n                this.visibleStatusTypes =  this.statusTypeList.filter(status=>!status.hidden);\n            }\n        },\n        computed:{\n            graphContainer(){\n                return this.$refs.graphContainer;\n            },\n            legendToggleText(){\n                return (this.showFullLegend) ? \" - Show Less\" : \"+ Show More\";\n            },\n        },\n        components:{\n            graph\n        },\n        watch:{\n            spinner:{\n                immediate:true,\n                deep:true,\n                async handler(val){\n                    await this.$nextTick();\n                    this.tempSpinner.show=val.show;\n                    if(val.message!=null){\n                        this.tempSpinner.message = val.message;\n                    }\n                }\n            },\n            dataSummary:{\n                immediate:true,\n                deep:true,\n                handler(dataSummary){\n                    this.updateStatusTypeList();\n                    if(dataSummary.ready){\n                        this.graph(dataSummary);\n                    }\n                }\n            }\n        }\n    }\n</script>\n<style lang=\"scss\">\n.status-heatmap{\n    position: relative;\n    box-sizing: border-box;\n    font-size: 16px;\n    .graph-menu{\n        padding: 1%;\n        display: flex;\n        justify-content: space-between;\n        width: 100%;\n        box-sizing: border-box;\n        align-items: flex-start;\n        background-color: #FFF;\n        box-shadow: 3px 3px 5px rgba(0,0,0,0.1);\n\n    }\n    .graphContainer{\n        height: inherit;\n        padding-bottom: 20px;\n    }\n    .legend,\n    .sort-menu\n    {\n        font-family: sans-serif;\n        display: inline-block;\n        position: relative;\n        z-index: 100;\n    }\n    .legend{\n        transition: max-height 0.5s cubic-bezier(0, 1.05, 0, 1);\n        display: inline-flex;\n        flex-direction: row;\n        position: relative;\n        flex-wrap: wrap;\n        max-height: 1.5em;\n        overflow-y: hidden;\n        line-height: 1.5em;\n        &.show{\n            max-height: 100vh;\n            transition: max-height 0.5s cubic-bezier(0, 0, 1, 0.4);\n        }\n        & > div{\n            margin:  0 1em;\n            display: flex;\n            align-items: center;\n            cursor: pointer;\n            &.disabled{\n                opacity: 0.5;\n            }\n        }\n        .key-color{\n            min-height: 1em;\n            min-width: 1em;\n            display: block;\n        }\n        .key-label{\n            margin-left: 10%;\n        }\n    }\n    .legend-wrapper{\n        display: flex;\n        align-items: flex-start;\n        max-width: 50%;\n        flex-wrap: wrap;\n    }\n    .legend-toggle{\n        color: #005aff;\n        cursor: pointer;\n        transition: filter 0.15s ease-in-out;\n        filter: brightness(1);\n        display: inline-flex;\n        &.hidden{\n            opacity: 0;\n        }\n        &:hover{\n            filter: brightness(1.5);\n        }\n    }\n    .sort-menu{\n        padding: 0 1%;\n        display: inline-flex;\n        align-items: center;\n        width: max-content;\n        flex-wrap: wrap;\n        h2,label{\n            padding: 0;\n            font-size: 1em;\n            margin: 0 0.5em 0;\n            white-space: nowrap;\n            font-weight: bold;\n        }\n        .sortTypeLabel{\n            margin: 0 0.5em 0 1em;\n            white-space: nowrap;\n        }\n    }\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./heatmap.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./heatmap.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./heatmap.vue?vue&type=template&id=65f663b8&\"\nimport script from \"./heatmap.vue?vue&type=script&lang=js&\"\nexport * from \"./heatmap.vue?vue&type=script&lang=js&\"\nimport style0 from \"./heatmap.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <main class=\"monitors\">\n        <ac-grid cols=12 align-h=\"center\" v-if='monitorIDs'>\n                <ac-col cols=\"11\" class=\"graph-row\">\n                    <ac-grid cols=\"4\" class=\"endpoint-summary\">\n                        <ac-col cols=\"4\" md-cols=\"2\" lg-cols=\"1\" class=\"summary-section\">\n                            <div class=\"summary-key\">Monitor</div>\n                            <div class=\"summary-value\">{{endpointData.id}}</div>\n                        </ac-col>\n                        <ac-col cols=\"4\" md-cols=\"2\" lg-cols=\"1\" class=\"summary-section\">\n                            <div class=\"summary-key\">Description</div>\n                            <div class=\"summary-value\">{{endpointData.description}}</div>\n                        </ac-col>\n                        <ac-col cols=\"4\" md-cols=\"2\" lg-cols=\"1\" class=\"summary-section\">\n                            <div class=\"summary-key\">Last Seen</div>\n                            <div class=\"summary-value\">{{endpointData.lastSeenTime}}</div>\n                        </ac-col>\n                        <ac-col cols=\"4\" md-cols=\"2\" lg-cols=\"1\" class=\"summary-section\">\n                            <div class=\"summary-key\">Last IP</div>\n                            <div class=\"summary-value\">{{endpointData.lastSeenIP}}</div>\n                        </ac-col>\n                    </ac-grid>\n                </ac-col>\n            </ac-grid>\n        <ac-grid cols=12 align-h=\"center\">\n            <ac-col cols=\"11\">\n                <date-range-dropdown :callback=\"processHeatmapData\" :route=\"{name:'Monitors',params:{id:this.params.id}}\"  v-on:change=\"setTimeRange\"></date-range-dropdown>\n            </ac-col>\n        </ac-grid>\n        <ac-grid cols=12 align-h=\"center\">\n            <ac-col cols=\"11\" class=\"graph-row\">\n                <heatmap :spinner=\"heatmapSpinner\" :dataSummary=\"dataSummary\" legend\n                :embedIDURL=\"(id, name)=>`<a href='#/monitors/${id}' style='font-size:10px;' target='_self'>${name}</a>`\"></heatmap>\n            </ac-col>\n        </ac-grid>\n        <div v-if='monitorIDs'>\n            <ac-grid cols=12 align-h=\"center\" v-for=\"(graph,i) in endpointGraphs\" :key=\"i\">\n                <ac-col cols=\"11\" class=\"graph-row\">\n                    <graph :data=\"graph.data\" :layout=\"graph.layout\" :spinner=\"graph.spinner\"></graph>\n                </ac-col>\n            </ac-grid>\n        </div>\n    </main>\n</template>\n<script type=\"text/javascript\">\n    import stats from \"stats-lite\"\n    import graph from \"@/components/graph\";\n    import heatmap from \"@/components/heatmap\"\n    import dateRangeDropdown from \"@/components/date-range-dropdown\"\n    import moment from \"moment\"\n    import Color from \"ac-colors\"\n    import graphSetup from \"@/mixins/graph-setup.js\";\n    export default {\n        mixins:[graphSetup],\n        data(){\n            return {\n                endpointData:{\n                    \"id\":\"\",\n                    \"lastSeenTime\":\"\",\n                    \"lastSeenIP\":\"\",\n                },\n                timeRange:{toTime:null,fromTime:null},\n                dataSummary:{\n                    \"ready\":false,\n                },\n                heatmapSpinner:{\n                    show:true,\n                    message:\"Generating graph...\"\n                },\n            }\n        },\n        components:{\n            \"heatmap\":heatmap,\n            \"date-range-dropdown\":dateRangeDropdown,\n            \"graph\":graph,\n        },\n        computed:{\n            params(){\n                return this.$route.params;\n            },\n            query(){\n                return this.$route.query;\n            },\n            rangeDropdownOptions(){\n                return Object.values(this.rangeValues)\n            },\n            monitorIDs(){\n                return (this.params.id!=null) ? [this.params.id] : null;\n            }\n        },\n        methods:{\n            setTimeRange(range){\n                this.timeRange = range;\n            },\n            processHeatmapData(jsonDataRows,fromTime, toTime, endpoints){\n                this.heatmapSpinner={show:true,message:\"Sorting data...\"};\n                // Reduce data\n                const dataSummary = this.dataSummary;\n                dataSummary.ready = false;\n                dataSummary.endpoints = endpoints;\n                dataSummary.minTimestamp=Number.MAX_VALUE;\n                dataSummary.maxTimestamp=0;\n                dataSummary.type = \"Monitor\";\n                dataSummary.statusTypes = {};\n                let processedRows = 0;\n                const groupedData = Object.values(jsonDataRows.reduce((acc,curr)=>{\n                    this.heatmapSpinner = {\n                        show:true,\n                        message:`Sorting data (${Math.ceil(processedRows/jsonDataRows.length*100)}%)`\n                    };\n                    processedRows++;\n                    const index = \"M\"+curr.monitor;\n                    const dataStartTime = Math.max(fromTime,curr.start);\n                    const dataEndTime = Math.min(toTime,curr.end);\n                    // Update dataSummary max and min timestamp\n                    if(dataStartTime>dataSummary.maxTimestamp){\n                        dataSummary.maxTimestamp=dataStartTime;\n                    }\n                    if(dataStartTime<dataSummary.minTimestamp){\n                        dataSummary.minTimestamp=dataStartTime;\n                    }\n                    if(dataEndTime>dataSummary.maxTimestamp){\n                        dataSummary.maxTimestamp=dataEndTime;\n                    }\n                    if(dataEndTime<dataSummary.minTimestamp){\n                        dataSummary.minTimestamp=dataEndTime;\n                    }\n                    // If index for monitor is not set, make new object\n                    if(acc[index]==null){\n                         acc[index] = {\n                            \"id\":index,\n                            \"minTimestamp\": Math.min(dataStartTime,dataEndTime),\n                            \"maxTimestamp\": Math.max(dataStartTime,dataEndTime),\n                            \"records\":{}\n                         }\n                    }\n                    // Update current monitor max and min timestamp\n                    if(dataStartTime>acc[index].maxTimestamp){\n                        acc[index].maxTimestamp=dataStartTime;\n                    }\n                    if(dataStartTime<acc[index].minTimestamp){\n                        acc[index].minTimestamp=dataStartTime;\n                    }\n                    if(dataEndTime>acc[index].maxTimestamp){\n                        acc[index].maxTimestamp=dataEndTime;\n                    }\n                    if(dataEndTime<acc[index].minTimestamp){\n                        acc[index].minTimestamp=dataEndTime;\n                    }\n                    // Push one record for experiment start and one record for experiment end\n                    const status = curr.exp;\n                    // Divide up records by status\n                    acc[index].records[status] = acc[index].records[status] || [];\n                    acc[index].records[status].push({\n                        \"status\": status,\n                        \"success\": curr.success===1,\n                        \"exp\":curr.exp,\n                        \"ip\": curr.ip,\n                        \"timestamp\":dataStartTime,\n                    });\n                    acc[index].records[status].push({\n                        \"status\": null,\n                        \"success\": curr.success===1,\n                        \"exp\":curr.exp,\n                        \"ip\": curr.ip,\n                        \"timestamp\":dataEndTime,\n                    });\n                    // Add status to data summary;\n                    if(dataSummary.statusTypes[status]==null){\n                        const baseColor = this.graphColor[curr.exp];\n                        dataSummary.statusTypes[status]={\n                            \"type\":status,\n                            \"hidden\":false,\n                            \"color\":baseColor.rgbString.toLowerCase(),\n                        }\n                    }\n                    return acc;\n                },{}));\n                // If min and max timestamps not updated, set them equal to from and to range\n                dataSummary.minTimestamp = (dataSummary.minTimestamp==Number.MAX_VALUE) ? fromTime : dataSummary.minTimestamp;\n                dataSummary.maxTimestamp = (dataSummary.maxTimestamp==0) ? toTime : dataSummary.maxTimestamp;\n                dataSummary.startDate = moment(dataSummary.minTimestamp,\"X\").format(\"YYYY-MM-DD HH:mm:ss\");\n                dataSummary.endDate = moment(dataSummary.maxTimestamp,\"X\").format(\"YYYY-MM-DD HH:mm:ss\");\n                dataSummary.groupedData = groupedData;\n                dataSummary.ready = true;\n            },\n            processLatencyHourlyData(jsonDataRows){\n                this.latencyHourlySpinner={show:true,message:\"Sorting data...\"};\n                this.latencyHourlyData.ready=false;\n                this.latencyHourlyLayout.ready=false;\n                const latencyHourlyExperiments = this.$store.state.experiments.filter((exp)=>exp.categories.includes(\"latency\")).map(exp=>exp.name);\n                const latencyHourlyResults = {}\n                const addLatencyHourlyRecord = (record, exp)=>{\n                    if(record){\n                        if(!latencyHourlyResults[exp]){\n                            latencyHourlyResults[exp] = new Array(24).fill();\n                            latencyHourlyResults[exp] = latencyHourlyResults[exp].map(()=>[]);\n                        }\n                        \n                        // Time is in nanoseconds, convert to ms\n                        const sendTime = record.end_stime/(10**6);\n                        const recvTime = record.end_rtime/(10**6);\n                        const latency = (recvTime-sendTime);\n                        const hours = moment(sendTime,\"x\").utc().hours();\n                        // Verify data is properly parsed\n                        if(!isNaN(hours) && !isNaN(latency)){\n                            latencyHourlyResults[exp][hours].push(latency);\n                        }\n                    }\n                }\n                let processedRows = 0;\n                jsonDataRows.forEach((curr)=>{\n                    if(latencyHourlyExperiments.includes(curr.exp)){\n                        if(curr.exp==\"DNS_local\"){ \n                            addLatencyHourlyRecord(curr.data.rst_list[0], curr.exp)\n                        }else{\n                            addLatencyHourlyRecord(curr.data, curr.exp);\n                        }\n                    }\n                    this.latencyHourlySpinner = {\n                        show:true,\n                        message:`Sorting data (${Math.ceil(processedRows/jsonDataRows.length*100)}%)`\n                    };\n                    processedRows++;\n                });\n                Object.keys(latencyHourlyResults).forEach((expName)=>{\n                    let prevLatency = null;\n                    latencyHourlyResults[expName] = latencyHourlyResults[expName].map((hourData)=>{\n                        const filteredHourData = hourData.filter((val)=>!!val);\n                        if(filteredHourData.length==0){\n                            return prevLatency;\n                        }\n                        const avgLatency = stats.mean(filteredHourData);\n                        prevLatency = avgLatency;\n                        return avgLatency; \n                    });\n                });\n                this.latencyHourlySpinner.message=\"Generating graph...\";\n                this.latencyHourlyData.data=[];\n                const markerBorderWidth = 2;\n                const utcHours = new Array(24).fill().map((v,i)=>i); \n                Object.keys(latencyHourlyResults).forEach((exp)=>{\n                    const traceColor = this.graphColor[exp];\n                    this.latencyHourlyData.data.push({\n                        x:utcHours,\n                        y:latencyHourlyResults[exp],\n                        name:exp,\n                        mode:\"lines+markers\",\n                        line:{\n                            color:traceColor.rgbString\n                        },\n                        marker:{\n                            color:\"rgba(0,0,0,0)\",\n                            line:{\n                                color:traceColor.rgbString,\n                                width:markerBorderWidth\n                            }\n                        }\n                    })\n                })\n                // Update yaxis range\n                this.latencyHourlyData.ready=true;\n                this.latencyHourlyLayout.ready=true;\n                this.latencyHourlySpinner.show=false;\n            },\n            processLatencyTimeData(jsonDataRows){\n                this.latencyTimeSpinner={show:true,message:\"Sorting data...\"};\n                this.latencyTimeData.ready=false;\n                this.latencyTimeLayout.ready=false;\n                this.latencyTimeCDFData.ready=false;\n                this.latencyTimeCDFLayout.ready=false;\n                const latencyTimeExperiments = this.$store.state.experiments.filter((exp)=>exp.categories.includes(\"latency\")).map(exp=>exp.name);\n                const latencyTimeResults = {}\n                const addLatencyTimeRecord = (record, exp)=>{\n                    if(record){\n                        if(!latencyTimeResults[exp]){\n                            latencyTimeResults[exp] = []\n                        }\n                        \n                        // Time is in nanoseconds, convert to ms\n                        const sendTime = record.end_stime/(10**6);\n                        const recvTime = record.end_rtime/(10**6);\n                        const latency = (recvTime-sendTime);\n                        const timestamp = moment(sendTime,\"x\").utc().format(\"YYYY-MM-DD HH:mm:ss.SS\");\n                        // Verify data is properly parsed\n                        if(!isNaN(latency)){\n                            latencyTimeResults[exp].push({\n                                timestamp,\n                                latency,\n                                sendTime\n                            });\n                        }\n                    }\n                }\n                let processedRows = 0;\n                jsonDataRows.forEach((curr)=>{\n                    if(latencyTimeExperiments.includes(curr.exp)){\n                        if(curr.exp==\"DNS_local\"){ \n                            addLatencyTimeRecord(curr.data.rst_list[0], curr.exp)\n                        }else{\n                            addLatencyTimeRecord(curr.data, curr.exp);\n                        }\n                    }\n                    this.latencyTimeSpinner = {\n                        show:true,\n                        message:`Sorting data (${Math.ceil(processedRows/jsonDataRows.length*100)}%)`\n                    };\n                    processedRows++;\n                });\n                this.latencyTimeSpinner.message=\"Generating graph...\";\n                this.latencyTimeData.data=[];\n                this.latencyTimeCDFData.data=[];\n                const markerBorderWidth = 2;\n                const shapes = []\n                let overallMax = Number.MIN_SAFE_INTEGER;\n                let overallMin = Number.MAX_VALUE;\n                Object.keys(latencyTimeResults).forEach((exp)=>{\n                    // Sort records by sendTime\n                    latencyTimeResults[exp].sort((a,b)=>a.sendTime-b.sendTime)\n                    const traceColor = this.graphColor[exp];\n                    this.latencyTimeData.data.push({\n                        x:latencyTimeResults[exp].map(record=>record.timestamp),\n                        y:latencyTimeResults[exp].map(record=>record.latency),\n                        name:exp,\n                        mode:\"lines+markers\",\n                        line:{\n                            color:traceColor.rgbString\n                        },\n                        marker:{\n                            color:\"rgba(0,0,0,0)\",\n                            line:{\n                                color:traceColor.rgbString,\n                                width:markerBorderWidth\n                            }\n                        }\n                    })\n                    const x = latencyTimeResults[exp].map(record=>record.latency).sort((a,b)=>a-b);\n                    const y = x.map((val, i)=>(i+1)/x.length);\n                    const latencyTimeCDFTrace = {\n                        name:exp,\n                        x,\n                        y,\n                        mode: 'lines',\n                        line: {\n                            color: traceColor.rgbString,\n                            width: 2\n                        }\n                    };\n                    this.latencyTimeCDFData.data.push(latencyTimeCDFTrace);\n                    const max = Math.max(...x);\n                    const min = Math.min(...x);\n                    overallMax = Math.max(overallMax, max);\n                    overallMin = Math.min(overallMin, min);\n                })\n                this.latencyTimeCDFLayout.layout.xaxis.range = [overallMin,overallMax];\n                this.latencyTimeCDFLayout.layout.shapes = shapes;\n                // Update yaxis range\n                this.latencyTimeData.ready=true;\n                this.latencyTimeLayout.ready=true;\n                this.latencyTimeCDFData.ready=true;\n                this.latencyTimeCDFLayout.ready=true;\n                this.latencyTimeSpinner.show=false;\n            },\n            processBandwidthTimeData(jsonDataRows){\n                this.bandwidthTimeSpinner={show:true,message:\"Sorting data...\"};\n                this.bandwidthTimeData.ready=false;\n                this.bandwidthTimeLayout.ready=false;\n                this.bandwidthTimeCDFData.ready=false;\n                this.bandwidthTimeCDFLayout.ready=false;\n                const bandwidthTimeExperiments = this.$store.state.experiments.filter((exp)=>exp.categories.includes(\"bandwidth\")).map(exp=>exp.name);\n                const bandwidthTimeResults = {}\n                const addBandwidthTimeRecord = (data)=>{\n                    bandwidthTimeResults.avail_band = bandwidthTimeResults.avail_band || [];\n                    bandwidthTimeResults.btnk_band = bandwidthTimeResults.btnk_band || [];\n                    \n                    // Time is in nanoseconds, convert to ms\n                    const sendTime = data.ctrl_stime/(10**6);\n                    const timestamp = moment(sendTime,\"x\").utc().format(\"YYYY-MM-DD HH:mm:ss.SS\");\n\n                    if(data.avail_band && data.btnk_band){\n                        bandwidthTimeResults.avail_band.push({\n                            // Bandwidth is in bps, convert to Mbps\n                            \"bandwidth\":data.avail_band / (10**6),\n                            timestamp,\n                            sendTime\n                        });\n                        bandwidthTimeResults.btnk_band.push({\n                            // Bandwidth is in bps, convert to Mbps\n                            \"bandwidth\":data.btnk_band / (10**6),\n                            timestamp,\n                            sendTime\n                        });\n                    }\n                    \n                }\n                let processedRows = 0;\n                jsonDataRows.forEach((curr)=>{\n                    if(bandwidthTimeExperiments.includes(curr.exp)){\n                        addBandwidthTimeRecord(curr.data);\n                    }\n                    this.bandwidthTimeSpinner = {\n                        show:true,\n                        message:`Sorting data (${Math.ceil(processedRows/jsonDataRows.length*100)}%)`\n                    };\n                    processedRows++;\n                });\n                this.bandwidthTimeSpinner.message=\"Generating graph...\";\n                this.bandwidthTimeData.data=[];\n                this.bandwidthTimeCDFData.data=[];\n                const markerBorderWidth = 2;\n                const shapes = []\n                let overallMax = Number.MIN_SAFE_INTEGER;\n                let overallMin = Number.MAX_VALUE;\n                Object.keys(bandwidthTimeResults).forEach((exp, i)=>{\n                    // Sort records by sendTime\n                    bandwidthTimeResults[exp].sort((a,b)=>a.sendTime-b.sendTime)\n                    const traceColor = Object.values(this.graphColor)[i] || Color.random();\n                    this.bandwidthTimeData.data.push({\n                        x:bandwidthTimeResults[exp].map(record=>record.timestamp),\n                        y:bandwidthTimeResults[exp].map(record=>record.bandwidth),\n                        name:exp,\n                        mode:\"lines+markers\",\n                        line:{\n                            color:traceColor.rgbString\n                        },\n                        marker:{\n                            color:\"rgba(0,0,0,0)\",\n                            line:{\n                                color:traceColor.rgbString,\n                                width:markerBorderWidth\n                            }\n                        }\n                    })\n                    const x = bandwidthTimeResults[exp].map(record=>record.bandwidth).sort((a,b)=>a-b);\n                    const y = x.map((val, i)=>(i+1)/x.length);\n                    const bandwidthTimeCDFTrace = {\n                        name:exp,\n                        x,\n                        y,\n                        mode: 'lines',\n                        line: {\n                            color: traceColor.rgbString,\n                            width: 2\n                        }\n                    };\n                    this.bandwidthTimeCDFData.data.push(bandwidthTimeCDFTrace);\n                    const max = Math.max(...x);\n                    const min = Math.min(...x);\n                    overallMax = Math.max(overallMax, max);\n                    overallMin = Math.min(overallMin, min);\n                })\n                this.bandwidthTimeCDFLayout.layout.xaxis.range = [overallMin,overallMax];\n                this.bandwidthTimeCDFLayout.layout.shapes = shapes;\n                // Update yaxis range\n                this.bandwidthTimeData.ready=true;\n                this.bandwidthTimeLayout.ready=true;\n                this.bandwidthTimeCDFData.ready=true;\n                this.bandwidthTimeCDFLayout.ready=true;\n                this.bandwidthTimeSpinner.show=false;\n            },\n            processBandwidthHourlyData(jsonDataRows){\n                this.bandwidthHourlySpinner={show:true,message:\"Sorting data...\"};\n                this.bandwidthHourlyData.ready=false;\n                this.bandwidthHourlyLayout.ready=false;\n                const bandwidthHourlyExperiments = this.$store.state.experiments.filter((exp)=>exp.categories.includes(\"bandwidth\")).map(exp=>exp.name);\n                const bandwidthHourlyResults = {}\n                const addBandwidthHourlyRecord = (data)=>{\n                    if(!bandwidthHourlyResults.avail_band){\n                        bandwidthHourlyResults.avail_band = new Array(24).fill();\n                        bandwidthHourlyResults.avail_band = bandwidthHourlyResults.avail_band.map(()=>[]);\n                    }\n                    if(!bandwidthHourlyResults.btnk_band){\n                        bandwidthHourlyResults.btnk_band = new Array(24).fill();\n                        bandwidthHourlyResults.btnk_band = bandwidthHourlyResults.btnk_band.map(()=>[]);\n                    }\n                    \n                    // Time is in nanoseconds, convert to ms\n                    const sendTime = data.ctrl_stime/(10**6);\n                    const hours = moment(sendTime,\"x\").utc().hours();\n\n                    if(data.avail_band && data.btnk_band){\n                        // Bandwidth is in bps, convert to Mbps\n                        bandwidthHourlyResults.avail_band[hours].push(data.avail_band / (10**6));\n                        bandwidthHourlyResults.btnk_band[hours].push(data.btnk_band / (10**6));\n                    }\n                    \n                }\n                let processedRows = 0;\n                jsonDataRows.forEach((curr)=>{\n                    if(bandwidthHourlyExperiments.includes(curr.exp)){\n                        addBandwidthHourlyRecord(curr.data);\n                    }\n                    this.bandwidthHourlySpinner = {\n                        show:true,\n                        message:`Sorting data (${Math.ceil(processedRows/jsonDataRows.length*100)}%)`\n                    };\n                    processedRows++;\n                });\n                const meanBandwidthHourlyResults = {}\n                // Standard deviation data for error bars\n                const stdevBandwidthHourlyResults = {}\n                Object.keys(bandwidthHourlyResults).forEach((expName)=>{\n                    let prevAvgBandwidth = null;\n                    let prevStdevBandwidth = null;\n                    meanBandwidthHourlyResults[expName] = bandwidthHourlyResults[expName].map((hourData)=>{\n                        const filteredHourData = hourData.filter((val)=>!!val);\n                        if(filteredHourData.length==0){\n                            return prevAvgBandwidth;\n                        }\n                        const avgBandwidth =  stats.mean(filteredHourData);\n                        prevAvgBandwidth = avgBandwidth;\n                        return avgBandwidth; \n                    });\n                    stdevBandwidthHourlyResults[expName] = bandwidthHourlyResults[expName].map((hourData)=>{\n                        const filteredHourData = hourData.filter((val)=>!!val);\n                        if(filteredHourData.length==0){\n                            return prevStdevBandwidth;\n                        }\n                        const stdevBandwidth =  stats.sampleStdev(filteredHourData);\n                        prevStdevBandwidth = stdevBandwidth;\n                        return stdevBandwidth; \n                    });\n                });\n                this.bandwidthHourlySpinner.message=\"Generating graph...\";\n                this.bandwidthHourlyData.data=[];\n                const markerBorderWidth = 2;\n                const utcHours = new Array(24).fill().map((v,i)=>i); \n                Object.keys(meanBandwidthHourlyResults).forEach((exp,i)=>{\n                    const traceColor = Object.values(this.graphColor)[i] || Color.random();\n                    this.bandwidthHourlyData.data.push({\n                        x:utcHours,\n                        y:meanBandwidthHourlyResults[exp],\n                        error_y: {\n                            type: 'data',\n                            array: stdevBandwidthHourlyResults[exp],\n                            visible: true,\n                        },\n                        name:exp,\n                        mode:\"lines+markers\",\n                        line:{\n                            color:traceColor.rgbString\n                        },\n                        marker:{\n                            color:\"rgba(0,0,0,0)\",\n                            line:{\n                                color:traceColor.rgbString,\n                                width:markerBorderWidth\n                            }\n                        }\n                    })\n                })\n                // Update yaxis range\n                this.bandwidthHourlyData.ready=true;\n                this.bandwidthHourlyLayout.ready=true;\n                this.bandwidthHourlySpinner.show=false;\n            },\n            processRTTTimeData(jsonDataRows){\n                this.rttTimeSpinner={show:true,message:\"Sorting data...\"};\n                this.rttTimeData.ready=false;\n                this.rttTimeLayout.ready=false;\n                const rttTimeExperiments = this.$store.state.experiments.filter((exp)=>exp.categories.includes(\"rtt\")).map(exp=>exp.name);\n                const rttTimeResults = []\n                const addRTTTimeRecord = (record)=>{\n                    if(record){\n                        \n                        // Time is in nanoseconds, convert to ms\n                        const sendTime = record.ctrl_stime/(10**6);\n                        const recvTime = record.ctrl_rtime/(10**6);\n                        const rtt = (recvTime-sendTime);\n                        const timestamp = moment(sendTime,\"x\").utc().format(\"YYYY-MM-DD HH:mm:ss.SS\");\n                        // Verify data is properly parsed\n                        if(!isNaN(rtt)){\n                            rttTimeResults.push({\n                                timestamp,\n                                rtt,\n                                sendTime\n                            });\n                        }\n                    }\n                }\n                let processedRows = 0;\n                jsonDataRows.forEach((curr)=>{\n                    if(rttTimeExperiments.includes(curr.exp)){\n                        if(curr.exp==\"DNS_local\"){ \n                            addRTTTimeRecord(curr.data.rst_list[0])\n                        }else{\n                            addRTTTimeRecord(curr.data);\n                        }\n                    }\n                    this.rttTimeSpinner = {\n                        show:true,\n                        message:`Sorting data (${Math.ceil(processedRows/jsonDataRows.length*100)}%)`\n                    };\n                    processedRows++;\n                });\n                this.rttTimeSpinner.message=\"Generating graph...\";\n                this.rttTimeData.data=[];\n                const markerBorderWidth = 2;\n                const traceColor = this.graphColor.primary;\n                // Sort records by sendTime\n               rttTimeResults.sort((a,b)=>a.sendTime-b.sendTime)\n                this.rttTimeData.data.push({\n                    x:rttTimeResults.map(record=>record.timestamp),\n                    y:rttTimeResults.map(record=>record.rtt),\n                    name:\"RTT\",\n                    mode:\"lines+markers\",\n                    line:{\n                        color:traceColor.rgbString\n                    },\n                    marker:{\n                        color:\"rgba(0,0,0,0)\",\n                        line:{\n                            color:traceColor.rgbString,\n                            width:markerBorderWidth\n                        }\n                    }\n                })\n                // Update yaxis range\n                this.rttTimeData.ready=true;\n                this.rttTimeLayout.ready=true;\n                this.rttTimeSpinner.show=false;\n            },\n            processRTTHourlyData(jsonDataRows){\n                this.rttHourlySpinner={show:true,message:\"Sorting data...\"};\n                this.rttHourlyData.ready=false;\n                this.rttHourlyLayout.ready=false;\n                const rttHourlyExperiments = this.$store.state.experiments.filter((exp)=>exp.categories.includes(\"rtt\")).map(exp=>exp.name);\n                const rttHourlyResults = new Array(24).fill().map(()=>[]);\n                const addRTTHourlyRecord = (record)=>{\n                    if(record){\n                        // Time is in nanoseconds, convert to ms\n                        const sendTime = record.ctrl_stime/(10**6);\n                        const recvTime = record.ctrl_rtime/(10**6);\n                        const rtt = (recvTime-sendTime);\n                        const hours = moment(sendTime,\"x\").utc().hours();\n                        // Verify data is properly parsed\n                        if(!isNaN(hours) && !isNaN(rtt)){\n                            rttHourlyResults[hours].push(rtt);\n                        }\n                    }\n                }\n                let processedRows = 0;\n                jsonDataRows.forEach((curr)=>{\n                    if(rttHourlyExperiments.includes(curr.exp)){\n                        if(curr.exp==\"DNS_local\"){ \n                            addRTTHourlyRecord(curr.data.rst_list[0])\n                        }else{\n                            addRTTHourlyRecord(curr.data);\n                        }\n                    }\n                    this.rttHourlySpinner = {\n                        show:true,\n                        message:`Sorting data (${Math.ceil(processedRows/jsonDataRows.length*100)}%)`\n                    };\n                    processedRows++;\n                });\n                let prevAvgRTT = null;\n                let prevStdevRTT = null;\n                const meanRTTHourlyResults = rttHourlyResults.map((hourData)=>{\n                    const filteredHourData = hourData.filter((val)=>!!val);\n                    if(filteredHourData.length==0){\n                        return prevAvgRTT;\n                    }\n                    const avgRTT = stats.mean(filteredHourData);\n                    prevAvgRTT = avgRTT;\n                    return avgRTT; \n                });\n                const stdevRTTHourlyResults = rttHourlyResults.map((hourData)=>{\n                    const filteredHourData = hourData.filter((val)=>!!val);\n                    if(filteredHourData.length==0){\n                        return prevStdevRTT;\n                    }\n                    const stdevRTT =  stats.sampleStdev(filteredHourData);\n                    prevStdevRTT = stdevRTT;\n                    return stdevRTT; \n                });\n                this.rttHourlySpinner.message=\"Generating graph...\";\n                this.rttHourlyData.data=[];\n                const markerBorderWidth = 2;\n                const utcHours = new Array(24).fill().map((v,i)=>i); \n                const traceColor = this.graphColor.primary;\n                this.rttHourlyData.data.push({\n                    x:utcHours,\n                    y:meanRTTHourlyResults,\n                    error_y: {\n                        type: 'data',\n                        array: stdevRTTHourlyResults,\n                        visible: true,\n                    },\n                    name:\"Avg. RTT\",\n                    mode:\"lines+markers\",\n                    line:{\n                        color:traceColor.rgbString\n                    },\n                    marker:{\n                        color:\"rgba(0,0,0,0)\",\n                        line:{\n                            color:traceColor.rgbString,\n                            width:markerBorderWidth\n                        }\n                    }\n                })\n                // Update yaxis range\n                this.rttHourlyData.ready=true;\n                this.rttHourlyLayout.ready=true;\n                this.rttHourlySpinner.show=false;\n            },\n            initGraphData(){\n                const spinnerList = [\n                    this.heatmapSpinner,\n                    this.latencyHourlySpinner,\n                    this.latencyTimeSpinner,\n                    this.bandwidthTimeSpinner,\n                    this.bandwidthHourlySpinner,\n                    this.rttTimeSpinner,\n                    this.rttHourlySpinner\n                ]\n                spinnerList.forEach((spinner)=>{\n                    spinner.show=true;\n                    spinner.message=\"Fetching data...\";\n                })\n                let {toTime,fromTime}=this.timeRange;\n                // Default fromTime is 0\n                fromTime = (fromTime!=null) ? fromTime : 0;\n                // Default toTime is current time\n                toTime = (toTime!=null) ? toTime : parseFloat(moment().format(\"X\"));\n                this.$store.dispatch('loadData', fromTime).then(()=>{\n                    const endpoints = this.$store.state.endpoints.reduce((acc,curr)=>{\n                        const id = \"M\"+curr.monitor;\n                        const shortDescription = id+\" - \"+curr.description.split(/[\\s_]/)[0]\n                        acc[id]={\n                            \"shortDescription\":shortDescription,\n                            ...curr\n                        };\n                        return acc;\n                    }, {});\n                    // Get graph colors\n                    this.$store.state.experiments.forEach((exp)=>{\n                        this.graphColor[exp.name] = new Color({\"type\":\"hex\", \"color\":exp.color});\n                    })\n                    const jsonDataRows = this.$store.state.data.filter((row, i)=>{\n                        if(row.monitor){\n                            const index = (\"M\"+row.monitor).toLowerCase(); \n                            spinnerList.forEach((spinner)=>{\n                                spinner.show=true;\n                                spinner.message=`Filtering data (${Math.ceil(i/this.$store.state.data.length*100)}%)`\n\n                            })\n                            return (this.monitorIDs==null || \n                                (Array.isArray(this.monitorIDs) && this.monitorIDs.map((str)=>str.toLowerCase()).includes(index))\n                            )\n                            && (\n                                (row.start >= fromTime && row.start <= toTime) ||\n                                (row.end>=fromTime && row.end<=toTime)\n                            )\n                        }else{\n                            return false;\n                        }\n                    });\n                    this.processHeatmapData(jsonDataRows, fromTime, toTime, endpoints);\n                    if(this.monitorIDs){\n                        const activeEndpoint = endpoints[this.monitorIDs[0].toUpperCase()];\n                        this.endpointData = {\n                            \"id\":\"M\"+activeEndpoint.monitor,\n                            \"lastSeenIP\":activeEndpoint['last-seen-ip'],\n                            \"lastSeenTime\":moment(activeEndpoint['last-seen-time'], \"X\").fromNow(),\n                            \"description\":activeEndpoint.description\n                        }\n                        this.processLatencyHourlyData(jsonDataRows);\n                        this.processLatencyTimeData(jsonDataRows);\n                        this.processBandwidthTimeData(jsonDataRows);\n                        this.processBandwidthHourlyData(jsonDataRows);\n                        this.processRTTTimeData(jsonDataRows);\n                        this.processRTTHourlyData(jsonDataRows);\n                    }\n                })\n            }\n        },\n        watch:{\n            monitorIDs:{\n                immediate:true,\n                deep:true,\n                async handler(){   \n                    await this.$nextTick();\n                    this.initGraphData();\n                }\n            }\n        }\n    }\n</script>\n<style lang='scss' scoped>\n    .endpoint-summary{\n        background-color: #FFF;\n        box-shadow: 3px 3px 5px rgba(0,0,0,0.1);\n    }\n    .graph-row{\n        margin: 2% 0;\n        .summary-key,\n        .summary-value{\n            padding: 2%;\n        }\n        .summary-section + .summary-section{\n            .summary-key,\n            .summary-value{\n                border-left: solid 1px rgba(0,0,0,0.1);\n            }\n        }\n        .summary-key{\n            background-color: #615E8A;\n            color: #FFF;\n            font-weight: bold;\n        }\n    }\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Monitors.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Monitors.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Monitors.vue?vue&type=template&id=e1131b62&scoped=true&\"\nimport script from \"./Monitors.vue?vue&type=script&lang=js&\"\nexport * from \"./Monitors.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Monitors.vue?vue&type=style&index=0&id=e1131b62&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"e1131b62\",\n  null\n  \n)\n\nexport default component.exports","var $ = require('../internals/export');\n\n// `Number.MIN_SAFE_INTEGER` constant\n// https://tc39.github.io/ecma262/#sec-number.min_safe_integer\n$({ target: 'Number', stat: true }, {\n  MIN_SAFE_INTEGER: -0x1FFFFFFFFFFFFF\n});\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/stats-lite/stats.js","webpack:///./node_modules/core-js/modules/es.string.split.js","webpack:///./src/views/Experiments.vue?413e","webpack:///src/views/Experiments.vue","webpack:///./src/views/Experiments.vue?81ea","webpack:///./src/views/Experiments.vue","webpack:///./node_modules/isnumber/index.js","webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./src/mixins/graph-setup.js","webpack:///./node_modules/ac-colors/index.min.js","webpack:///./src/views/Experiments.vue?c555"],"names":["module","exports","numbers","sum","mean","median","mode","variance","populationVariance","sampleVariance","stdev","populationStdev","sampleStdev","percentile","histogram","isNumber","vals","nums","i","length","push","nsort","sort","a","b","total","NaN","half","dist","value","me","rank","Object","keys","modes","Set","modeCount","add","valuesMinusMeanSquared","avg","diffs","Math","pow","sqrt","ptile","int_part","fract","min","bins","round","max","range","binWidth","midpoint","leftEdge","floor","hist","values","Array","fill","binLimits","binIndex","fixRegExpWellKnownSymbolLogic","isRegExp","anObject","requireObjectCoercible","speciesConstructor","advanceStringIndex","toLength","callRegExpExec","regexpExec","fails","arrayPush","MAX_UINT32","SUPPORTS_Y","RegExp","SPLIT","nativeSplit","maybeCallNative","internalSplit","split","separator","limit","string","String","this","lim","undefined","call","match","lastIndex","lastLength","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","separatorCopy","source","slice","index","apply","test","O","splitter","regexp","res","done","rx","S","C","unicodeMatching","p","q","A","e","z","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","name","params","id","on","setTimeRange","_l","graph","directives","rawName","data","expression","key","layout","spinner","_e","exp","_v","_s","description","experimentDescriptions","message","staticRenderFns","component","n","isNaN","parseFloat","isFinite","$","$find","find","addToUnscopables","arrayMethodUsesToLength","FIND","SKIPS_HOLES","USES_TO_LENGTH","target","proto","forced","callbackfn","arguments","cdfSubdivisions","graphColor","Color","latencyHourlySpinner","show","latencyHourlyData","latencyHourlyLayout","latencyTimeSpinner","latencyTimeData","latencyTimeLayout","latencyTimeCDFData","latencyTimeCDFLayout","bandwidthTimeSpinner","bandwidthTimeData","bandwidthTimeLayout","bandwidthTimeCDFData","bandwidthTimeCDFLayout","bandwidthHourlySpinner","bandwidthHourlyData","bandwidthHourlyLayout","rttTimeSpinner","rttTimeData","rttTimeLayout","rttHourlySpinner","rttHourlyData","rttHourlyLayout","computed","endpointGraphs","_defineProperties","o","r","t","enumerable","configurable","writable","defineProperty","_createClass","prototype","color","type","precision","capitalize","l","u","s","updateColor","TypeError","toLowerCase","validTypes","includes","rgbToXyz","hslToRgb","hexToRgb","labToXyz","lchABToLab","luvToXyz","lchUVToLuv","_xyz","_rgb","xyzToRgb","_hsl","rgbToHsl","_hex","rgbToHex","_lab","xyzToLab","_lchab","labToLCHab","_luv","xyzToLuv","_lchuv","luvToLCHuv","abs","map","toString","replace","exec","parseInt","ea","ta","Fa","d65","cbrt","c","maxZeroTolerance","atan2","PI","cos","sin","h","luminance","rgb","random","randomFromString","mc","charCodeAt","randomOfType","randomOfTypeFormatted","contrastTextColor","contrastRatio","get","set","join","toUpperCase","hsl","toFixed","xyz","lab","lchab","luv","lchuv"],"mappings":"kHAEAA,EAAOC,QAAQC,QAAUA,EACzBF,EAAOC,QAAQE,IAAMA,EACrBH,EAAOC,QAAQG,KAAOA,EACtBJ,EAAOC,QAAQI,OAASA,EACxBL,EAAOC,QAAQK,KAAOA,EACtBN,EAAOC,QAAQM,SAAWC,EAC1BR,EAAOC,QAAQQ,eAAiBA,EAChCT,EAAOC,QAAQO,mBAAqBA,EACpCR,EAAOC,QAAQS,MAAQC,EACvBX,EAAOC,QAAQW,YAAcA,EAC7BZ,EAAOC,QAAQU,gBAAkBA,EACjCX,EAAOC,QAAQY,WAAaA,EAC5Bb,EAAOC,QAAQa,UAAYA,EAE3B,IAAIC,EAAW,EAAQ,QAEvB,SAASb,EAAQc,GACf,IAAIC,EAAO,GACX,GAAY,MAARD,EACF,OAAOC,EAET,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC3BH,EAASC,EAAKE,KAChBD,EAAKG,MAAMJ,EAAKE,IAEpB,OAAOD,EAGT,SAASI,EAAML,GACb,OAAOA,EAAKM,MAAK,SAAqBC,EAAGC,GAAK,OAAOD,EAAIC,KAG3D,SAASrB,EAAIa,GACXA,EAAOd,EAAQc,GAEf,IADA,IAAIS,EAAQ,EACHP,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BO,GAAST,EAAKE,GAEhB,OAAOO,EAGT,SAASrB,EAAKY,GAEZ,OADAA,EAAOd,EAAQc,GACK,IAAhBA,EAAKG,OAAqBO,IACtBvB,EAAIa,GAAQA,EAAKG,OAG3B,SAASd,EAAOW,GAEd,GADAA,EAAOd,EAAQc,GACK,IAAhBA,EAAKG,OAAc,OAAOO,IAE9B,IAAIC,EAAQX,EAAKG,OAAS,EAAK,EAG/B,OADAH,EAAOK,EAAML,GACTA,EAAKG,OAAS,EAETH,EAAKW,IAIJX,EAAKW,EAAK,GAAKX,EAAKW,IAAS,EAMzC,SAASrB,EAAKU,GAEZ,GADAA,EAAOd,EAAQc,GACK,IAAhBA,EAAKG,OAAc,OAAOO,IAI9B,IAHA,IAAIpB,EAAOoB,IACPE,EAAO,GAEFV,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAAK,CACpC,IAAIW,EAAQb,EAAKE,GACbY,EAAKF,EAAKC,IAAU,EACxBC,IACAF,EAAKC,GAASC,EAGhB,IAAIC,EAAO7B,EAAQ8B,OAAOC,KAAKL,GAAMN,MAAK,SAAqBC,EAAGC,GAAK,OAAOI,EAAKJ,GAAKI,EAAKL,OAE7F,GADAjB,EAAOyB,EAAK,GACRH,EAAKG,EAAK,KAAOH,EAAKtB,GAAO,CAE/B,GAAIyB,EAAKZ,QAAUH,EAAKG,OAEtB,OAAOH,EAET,IAAIkB,EAAQ,IAAIC,IAAI,CAAC7B,IACjB8B,EAAYR,EAAKtB,GACrB,IAASY,EAAI,EAAGA,EAAIa,EAAKZ,OAAQD,IAAK,CACpC,GAAIU,EAAKG,EAAKb,KAAOkB,EAInB,MAHAF,EAAMG,IAAIN,EAAKb,IAMnB,OAAOgB,EAET,OAAO5B,EAMT,SAASgC,EAAuBtB,GAC9BA,EAAOd,EAAQc,GAGf,IAFA,IAAIuB,EAAMnC,EAAKY,GACXwB,EAAQ,GACHtB,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BsB,EAAMpB,KAAKqB,KAAKC,IAAK1B,EAAKE,GAAKqB,EAAM,IAEvC,OAAOC,EAIT,SAAShC,EAAmBQ,GAC1B,OAAOZ,EAAKkC,EAAuBtB,IAIrC,SAASP,EAAeO,GACtB,IAAIwB,EAAQF,EAAuBtB,GACnC,OAAIwB,EAAMrB,QAAU,EAAUO,IAEvBvB,EAAIqC,IAAUA,EAAMrB,OAAS,GAKtC,SAASR,EAAgBK,GACvB,OAAOyB,KAAKE,KAAKnC,EAAmBQ,IAItC,SAASJ,EAAYI,GACnB,OAAOyB,KAAKE,KAAKlC,EAAeO,IAGlC,SAASH,EAAWG,EAAM4B,GAExB,GADA5B,EAAOd,EAAQc,GACK,IAAhBA,EAAKG,QAAyB,MAATyB,GAAiBA,EAAQ,EAAG,OAAOlB,IAGxDkB,EAAQ,IAAGA,EAAQ,GACvB5B,EAAOK,EAAML,GACb,IAAIE,EAAKF,EAAKG,OAASyB,EAAS,GAChC,IAAS,EAAJ1B,KAAWA,EAAG,OAAOF,EAAKE,GAE/B,IAAI2B,EAAe,EAAJ3B,EACX4B,EAAQ5B,EAAI2B,EAChB,OAAQ,EAAIC,GAAS9B,EAAK6B,GAAYC,EAAQ9B,EAAKyB,KAAKM,IAAIF,EAAW,EAAG7B,EAAKG,OAAS,IAG1F,SAASL,EAAWE,EAAMgC,GACxB,GAAY,MAARhC,EACF,OAAO,KAGT,GADAA,EAAOK,EAAMnB,EAAQc,IACD,IAAhBA,EAAKG,OACP,OAAO,KAEG,MAAR6B,IAEFA,EAAOP,KAAKE,KAAK3B,EAAKG,SAExB6B,EAAOP,KAAKQ,MAAMD,GACdA,EAAO,IACTA,EAAO,GAGT,IAAID,EAAM/B,EAAK,GACXkC,EAAMlC,EAAKA,EAAKG,OAAS,GACzB4B,IAAQG,IAEVH,GAAY,GACZG,GAAY,IAGd,IAAIC,EAASD,EAAMH,EAGfK,GAAYD,EAAiB,IAARA,GAAiBH,EACtCK,GAAYN,EAAMG,GAAO,EAEzBI,EAAWD,EAAYD,EAAWX,KAAKc,MAAMP,EAAO,GACxD,GAAIA,EAAO,IAAM,EAEXM,EAAYD,EAAYD,EAAW,EAAOA,EAAWX,KAAKc,MAAMP,EAAO,GAW7E,IARA,IAAIQ,EAAO,CACTC,OAAQC,MAAMV,GAAMW,KAAK,GACzBX,KAAMA,EACNI,SAAUA,EACVQ,UAAW,CAACN,EAAUA,EAAYF,EAAWJ,IAG3Ca,EAAW,EACN3C,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAAK,CACpC,MAAOF,EAAKE,IAAQ2C,EAAW,GAAKT,EAAYE,EAC9CO,IAEFL,EAAKC,OAAOI,KAGd,OAAOL,I,kCC/MT,IAAIM,EAAgC,EAAQ,QACxCC,EAAW,EAAQ,QACnBC,EAAW,EAAQ,QACnBC,EAAyB,EAAQ,QACjCC,EAAqB,EAAQ,QAC7BC,EAAqB,EAAQ,QAC7BC,EAAW,EAAQ,QACnBC,EAAiB,EAAQ,QACzBC,EAAa,EAAQ,QACrBC,EAAQ,EAAQ,QAEhBC,EAAY,GAAGpD,KACf2B,EAAMN,KAAKM,IACX0B,EAAa,WAGbC,GAAcH,GAAM,WAAc,OAAQI,OAAOF,EAAY,QAGjEX,EAA8B,QAAS,GAAG,SAAUc,EAAOC,EAAaC,GACtE,IAAIC,EAmDJ,OAzCEA,EAR2B,KAA3B,OAAOC,MAAM,QAAQ,IACc,GAAnC,OAAOA,MAAM,QAAS,GAAG7D,QACO,GAAhC,KAAK6D,MAAM,WAAW7D,QACU,GAAhC,IAAI6D,MAAM,YAAY7D,QACtB,IAAI6D,MAAM,QAAQ7D,OAAS,GAC3B,GAAG6D,MAAM,MAAM7D,OAGC,SAAU8D,EAAWC,GACnC,IAAIC,EAASC,OAAOnB,EAAuBoB,OACvCC,OAAgBC,IAAVL,EAAsBT,EAAaS,IAAU,EACvD,GAAY,IAARI,EAAW,MAAO,GACtB,QAAkBC,IAAdN,EAAyB,MAAO,CAACE,GAErC,IAAKpB,EAASkB,GACZ,OAAOJ,EAAYW,KAAKL,EAAQF,EAAWK,GAE7C,IAQIG,EAAOC,EAAWC,EARlBC,EAAS,GACTC,GAASZ,EAAUa,WAAa,IAAM,KAC7Bb,EAAUc,UAAY,IAAM,KAC5Bd,EAAUe,QAAU,IAAM,KAC1Bf,EAAUgB,OAAS,IAAM,IAClCC,EAAgB,EAEhBC,EAAgB,IAAIxB,OAAOM,EAAUmB,OAAQP,EAAQ,KAEzD,MAAOJ,EAAQnB,EAAWkB,KAAKW,EAAehB,GAAS,CAErD,GADAO,EAAYS,EAAcT,UACtBA,EAAYQ,IACdN,EAAOxE,KAAK+D,EAAOkB,MAAMH,EAAeT,EAAMa,QAC1Cb,EAAMtE,OAAS,GAAKsE,EAAMa,MAAQnB,EAAOhE,QAAQqD,EAAU+B,MAAMX,EAAQH,EAAMY,MAAM,IACzFV,EAAaF,EAAM,GAAGtE,OACtB+E,EAAgBR,EACZE,EAAOzE,QAAUmE,GAAK,MAExBa,EAAcT,YAAcD,EAAMa,OAAOH,EAAcT,YAK7D,OAHIQ,IAAkBf,EAAOhE,QACvBwE,GAAeQ,EAAcK,KAAK,KAAKZ,EAAOxE,KAAK,IAClDwE,EAAOxE,KAAK+D,EAAOkB,MAAMH,IACzBN,EAAOzE,OAASmE,EAAMM,EAAOS,MAAM,EAAGf,GAAOM,GAG7C,IAAIZ,WAAMO,EAAW,GAAGpE,OACjB,SAAU8D,EAAWC,GACnC,YAAqBK,IAAdN,GAAqC,IAAVC,EAAc,GAAKL,EAAYW,KAAKH,KAAMJ,EAAWC,IAEpEL,EAEhB,CAGL,SAAeI,EAAWC,GACxB,IAAIuB,EAAIxC,EAAuBoB,MAC3BqB,OAAwBnB,GAAbN,OAAyBM,EAAYN,EAAUL,GAC9D,YAAoBW,IAAbmB,EACHA,EAASlB,KAAKP,EAAWwB,EAAGvB,GAC5BH,EAAcS,KAAKJ,OAAOqB,GAAIxB,EAAWC,IAO/C,SAAUyB,EAAQzB,GAChB,IAAI0B,EAAM9B,EAAgBC,EAAe4B,EAAQtB,KAAMH,EAAOH,IAAkBF,GAChF,GAAI+B,EAAIC,KAAM,OAAOD,EAAI/E,MAEzB,IAAIiF,EAAK9C,EAAS2C,GACdI,EAAI3B,OAAOC,MACX2B,EAAI9C,EAAmB4C,EAAInC,QAE3BsC,EAAkBH,EAAGd,QACrBH,GAASiB,EAAGhB,WAAa,IAAM,KACtBgB,EAAGf,UAAY,IAAM,KACrBe,EAAGd,QAAU,IAAM,KACnBtB,EAAa,IAAM,KAI5BgC,EAAW,IAAIM,EAAEtC,EAAaoC,EAAK,OAASA,EAAGV,OAAS,IAAKP,GAC7DP,OAAgBC,IAAVL,EAAsBT,EAAaS,IAAU,EACvD,GAAY,IAARI,EAAW,MAAO,GACtB,GAAiB,IAAbyB,EAAE5F,OAAc,OAAuC,OAAhCkD,EAAeqC,EAAUK,GAAc,CAACA,GAAK,GACxE,IAAIG,EAAI,EACJC,EAAI,EACJC,EAAI,GACR,MAAOD,EAAIJ,EAAE5F,OAAQ,CACnBuF,EAAShB,UAAYhB,EAAayC,EAAI,EACtC,IACIE,EADAC,EAAIjD,EAAeqC,EAAUhC,EAAaqC,EAAIA,EAAEV,MAAMc,IAE1D,GACQ,OAANG,IACCD,EAAItE,EAAIqB,EAASsC,EAAShB,WAAahB,EAAa,EAAIyC,IAAKJ,EAAE5F,WAAa+F,EAE7EC,EAAIhD,EAAmB4C,EAAGI,EAAGF,OACxB,CAEL,GADAG,EAAEhG,KAAK2F,EAAEV,MAAMa,EAAGC,IACdC,EAAEjG,SAAWmE,EAAK,OAAO8B,EAC7B,IAAK,IAAIlG,EAAI,EAAGA,GAAKoG,EAAEnG,OAAS,EAAGD,IAEjC,GADAkG,EAAEhG,KAAKkG,EAAEpG,IACLkG,EAAEjG,SAAWmE,EAAK,OAAO8B,EAE/BD,EAAID,EAAIG,GAIZ,OADAD,EAAEhG,KAAK2F,EAAEV,MAAMa,IACRE,OAGT1C,I,2CCrIJ,IAAI6C,EAAS,WAAa,IAAIC,EAAInC,KAASoC,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,OAAO,CAACE,YAAY,eAAe,CAACF,EAAG,UAAU,CAACG,MAAM,CAAC,KAAO,KAAK,UAAU,WAAW,CAACH,EAAG,SAAS,CAACG,MAAM,CAAC,KAAO,OAAO,CAACH,EAAG,sBAAsB,CAACG,MAAM,CAAC,SAAW,aAAc,MAAQ,CAACC,KAAK,cAAcC,OAAO,CAACC,GAAG5C,KAAK2C,OAAOC,MAAMC,GAAG,CAAC,OAASV,EAAIW,gBAAiBX,EAAiB,cAAEG,EAAG,MAAMH,EAAIY,GAAIZ,EAAkB,gBAAE,SAASa,EAAMnH,GAAG,OAAOyG,EAAG,MAAM,CAACW,WAAW,CAAC,CAACP,KAAK,OAAOQ,QAAQ,SAAS1G,MAAOwG,EAAMG,KAAY,QAAEC,WAAW,uBAAuBC,IAAIxH,EAAE2G,YAAY,aAAa,CAACF,EAAG,QAAQ,CAACG,MAAM,CAAC,KAAOO,EAAMG,KAAK,OAASH,EAAMM,OAAO,QAAUN,EAAMO,YAAY,MAAK,GAAGpB,EAAIqB,KAAKlB,EAAG,UAAUH,EAAIY,GAAIZ,EAA0B,wBAAE,SAASsB,EAAI5H,GAAG,OAAOyG,EAAG,SAAS,CAACe,IAAIxH,EAAE4G,MAAM,CAAC,KAAO,KAAK,UAAU,IAAI,UAAU,IAAI,UAAU,MAAM,CAACH,EAAG,UAAU,CAACE,YAAY,sBAAsB,CAACF,EAAG,KAAK,CAACE,YAAY,2BAA2B,CAACL,EAAIuB,GAAGvB,EAAIwB,GAAGF,EAAIf,SAASJ,EAAG,MAAM,CAACE,YAAY,kCAAkC,CAACL,EAAIuB,GAAGvB,EAAIwB,GAAGF,EAAIG,gBAAgBtB,EAAG,cAAc,CAACE,YAAY,0BAA0BC,MAAM,CAAC,GAAK,CAACC,KAAK,cAAcC,OAAO,CAACC,GAAGa,EAAIf,SAAS,CAACP,EAAIuB,GAAG,kBAAkB,QAAO,GAAuC,GAAnCvB,EAAI0B,uBAAuB/H,OAAWwG,EAAG,MAAM,CAACA,EAAG,QAAQ,CAACG,MAAM,CAAC,QAAU,CAAC,MAAO,EAAKqB,QAAQ,wBAAwB,GAAG3B,EAAIqB,MAAM,IAAI,IAAI,IACn1CO,EAAkB,G,uSCsCtB,GACE,OAAF,SACE,KAFF,WAGI,MAAJ,CACM,WAAN,CACQ,QAAR,SAAU,KAAV,MAAU,MAAV,YACQ,UAAR,SAAU,KAAV,MAAU,MAAV,aAEM,UAAN,CAAQ,OAAR,KAAQ,SAAR,QAGE,WAAF,CACI,sBAAJ,OACI,MAAJ,QAEE,SAAF,CACI,OADJ,WAEM,OAAN,oBAEI,MAJJ,WAKM,OAAN,mBAEI,qBAPJ,WAQM,OAAN,iCAEI,cAVJ,WAWM,OAAN,4CAEI,uBAbJ,WAcM,OAAN,+CAGE,QAAF,CACI,aADJ,SACA,GACM,KAAN,aAEI,uBAJJ,SAIA,GAAM,IAAN,OACM,KAAN,oBAAQ,MAAR,EAAQ,QAAR,mBACM,KAAN,yBACM,KAAN,2BACM,IAAN,KACA,gBACQ,GAAR,GACA,OACY,EAAZ,OAGU,IAAV,6BACA,6BACA,MACA,oDAEA,UACY,EAAZ,SACc,UAAd,EACc,QAAd,EACc,SAAd,MAKA,IACM,EAAN,qBACA,mBACU,EAAV,4BAEU,EAAV,gBAEQ,EAAR,oBACU,MAAV,EACU,QAAV,yDAEQ,OAEF,KAAN,iDACM,KAAN,wBACM,IAAN,IACM,OAAN,6BAEQ,EAAR,uBAAU,OAAV,yBACQ,IAAR,8BACQ,EAAR,2BACU,EAAV,sBAAY,OAAZ,eACU,EAAV,sBAAY,OAAZ,aACU,KAAV,EACU,KAAV,gBACU,KAAV,CACY,MAAZ,aAEU,OAAV,CACY,MAAZ,gBACY,KAAZ,CACc,MAAd,YACc,MAAd,SAMM,KAAN,yBACM,KAAN,2BACM,KAAN,4BAEI,yBAvEJ,SAuEA,GAAM,IAAN,OACM,KAAN,sBAAQ,MAAR,EAAQ,QAAR,mBACM,KAAN,2BACM,KAAN,6BACM,IAAN,KACA,gBACQ,GAAR,GACA,OACY,EAAZ,wBACY,EAAZ,wBAAc,MAAd,OAIU,IAAV,6BACA,6BACA,MACA,2BAEA,oBACY,EAAZ,gBAIA,IACM,EAAN,qBACA,mBACU,EAAV,4BAEU,EAAV,gBAEQ,EAAR,sBACU,MAAV,EACU,QAAV,yDAEQ,OAEF,OAAN,6BACQ,IAAR,OACQ,EAAR,yBACU,IAAV,wBAAY,QAAZ,KACU,GAAV,YACY,OAAZ,EAEU,IAAV,cAEU,OADA,EAAV,EACA,QAGM,KAAN,mDACM,KAAN,0BACM,IAAN,IACA,0CAAQ,OAAR,KACM,OAAN,6BACQ,IAAR,8BACQ,EAAR,6BACU,EAAV,EACU,EAAV,KACU,KAAV,EACU,KAAV,gBACU,KAAV,CACY,MAAZ,aAEU,OAAV,CACY,MAAZ,gBACY,KAAZ,CACc,MAAd,YACc,MAAd,SAMM,KAAN,2BACM,KAAN,6BACM,KAAN,8BAGI,yBApJJ,SAoJA,GAAM,IAAN,OACM,KAAN,sBAAQ,MAAR,EAAQ,QAAR,mBACM,KAAN,2BACM,KAAN,6BACM,IAAN,KACA,gBACQ,EAAR,UACU,WAAV,GACU,UAAV,IAIQ,IAAR,8BACA,oDAEA,4BACU,EAAV,oBAEY,UAAZ,4BACY,UAAZ,EACY,SAAZ,IAEU,EAAV,mBAEY,UAAZ,2BACY,UAAZ,EACY,SAAZ,MAKA,IACM,EAAN,qBACQ,EAAR,gBACQ,EAAR,sBACU,MAAV,EACU,QAAV,yDAEQ,OAEF,KAAN,mDACM,KAAN,0BACM,IAAN,IACM,OAAN,6BACQ,IAAR,OACA,8BACA,WAAU,MAAV,sCAAU,KAAV,UACA,QACQ,OAAR,+BAEU,EAAV,uBAAY,OAAZ,yBACU,IAAV,qBACU,EAAV,6BACY,EAAZ,sBAAc,OAAd,eACY,EAAZ,sBAAc,OAAd,eACY,KAAZ,UACY,KAAZ,gBACY,KAAZ,CACc,MAAd,aAEY,OAAZ,CACc,MAAd,gBACc,KAAd,CACgB,MAAhB,YACgB,MAAhB,YAOM,KAAN,2BACM,KAAN,6BACM,KAAN,8BAEI,2BA/NJ,SA+NA,GAAM,IAAN,OACM,KAAN,wBAAQ,MAAR,EAAQ,QAAR,mBACM,KAAN,6BACM,KAAN,+BACM,IAAN,oDAAQ,OAAR,uDAAQ,OAAR,UACA,KACA,cACA,eACU,EAAV,gCACU,EAAV,wCAAY,MAAZ,OAEA,cACU,EAAV,+BACU,EAAV,sCAAY,MAAZ,OAIQ,IAAR,8BACA,2BAEA,4BAEU,EAAV,gDACU,EAAV,gDAIA,IACM,EAAN,qBACA,mBACU,EAAV,QAEQ,EAAR,wBACU,MAAV,EACU,QAAV,yDAEQ,OAEF,IAAN,KAEA,KACM,OAAN,6BACQ,IAAR,OACA,OACQ,EAAR,yBACU,IAAV,wBAAY,QAAZ,KACU,GAAV,YACY,OAAZ,EAEU,IAAV,cAEU,OADA,EAAV,EACA,KAEQ,EAAR,yBACU,IAAV,wBAAY,QAAZ,KACU,GAAV,YACY,OAAZ,EAEU,IAAV,qBAEU,OADA,EAAV,EACA,QAGM,KAAN,qDACM,KAAN,4BACM,IAAN,IACA,0CAAQ,OAAR,KACM,OAAN,+BACQ,IAAR,+CACQ,EAAR,+BACU,EAAV,EACU,EAAV,KACU,QAAV,CACY,KAAZ,OACY,MAAZ,KACY,SAAZ,GAEU,KAAV,EACU,KAAV,gBACU,KAAV,CACY,MAAZ,aAEU,OAAV,CACY,MAAZ,gBACY,KAAZ,CACc,MAAd,YACc,MAAd,SAMM,KAAN,6BACM,KAAN,+BACM,KAAN,gCAEI,mBA/TJ,SA+TA,GAAM,IAAN,OACM,KAAN,gBAAQ,MAAR,EAAQ,QAAR,mBACM,KAAN,qBACM,KAAN,uBACM,IAAN,KACA,gBACQ,GAAR,GAEU,IAAV,8BACA,8BACA,MACA,oDAEA,WACA,OACc,EAAd,OAEY,EAAZ,SACc,UAAd,EACc,IAAd,EACc,SAAd,OAKA,IACM,EAAN,qBACA,mBACU,EAAV,4BAEU,EAAV,gBAEQ,EAAR,gBACU,MAAV,EACU,QAAV,yDAEQ,OAEF,KAAN,6CACM,KAAN,oBACM,IAAN,IAEM,OAAN,6BACQ,IAAR,8BACA,OACQ,EAAR,oBAAU,OAAV,yBACQ,EAAR,uBACU,EAAV,mBAAY,OAAZ,eACU,EAAV,mBAAY,OAAZ,SACU,KAAV,EACU,KAAV,gBACU,KAAV,CACY,MAAZ,aAEU,OAAV,CACY,MAAZ,gBACY,KAAZ,CACc,MAAd,YACc,MAAd,SAMM,KAAN,qBACM,KAAN,uBACM,KAAN,wBAEI,qBAnYJ,SAmYA,GAAM,IAAN,OACM,KAAN,kBAAQ,MAAR,EAAQ,QAAR,mBACM,KAAN,uBACM,KAAN,yBACM,IAAN,KACA,gBAKQ,GAJR,OACU,EAAV,wBACU,EAAV,wBAAY,MAAZ,OAEA,GAEU,IAAV,8BACA,8BACA,MACA,2BAEA,oBACY,EAAZ,gBAIA,IACM,EAAN,qBACA,mBACU,EAAV,4BAEU,EAAV,gBAEQ,EAAR,kBACU,MAAV,EACU,QAAV,yDAEQ,OAEF,IAAN,OACA,OACM,QAAN,OACM,KAAN,+CACM,KAAN,sBACM,IAAN,IACA,0CAAQ,OAAR,KACM,OAAN,6BACQ,IAAR,OACA,qBACU,IAAV,wBAAY,QAAZ,KACU,GAAV,YACY,OAAZ,EAEU,IAAV,cAEU,OADA,EAAV,EACA,KAEA,qBACU,IAAV,wBAAY,QAAZ,KACU,GAAV,YACY,OAAZ,EAEU,IAAV,qBAEU,OADA,EAAV,EACA,KAEA,8BACQ,EAAR,yBACU,EAAV,EACU,EAAV,EACU,QAAV,CACY,KAAZ,OACY,MAAZ,EACY,SAAZ,GAEU,KAAV,EACU,KAAV,gBACU,KAAV,CACY,MAAZ,aAEU,OAAV,CACY,MAAZ,gBACY,KAAZ,CACc,MAAd,YACc,MAAd,SAMM,KAAN,uBACM,KAAN,yBACM,KAAN,0BAEI,cA7dJ,WA6dM,IAAN,OACA,GACA,yBAEA,GACA,CACQ,EAAR,4BACQ,KAAR,qBACQ,SAAR,WAEA,CACQ,EAAR,8BACQ,KAAR,uBACQ,SAAR,WAEA,CACQ,EAAR,8BACQ,KAAR,uBACQ,SAAR,aAEA,CACQ,EAAR,gCACQ,KAAR,yBACQ,SAAR,aAEA,CACQ,EAAR,wBACQ,KAAR,iBACQ,SAAR,OAEA,CACQ,EAAR,0BACQ,KAAR,mBACQ,SAAR,QAGM,EAAN,qBACQ,EAAR,QACQ,EAAR,8BAtCM,IAAN,EAwCA,iBAxCA,EAwCA,SAxCA,EAwCA,SAEM,EAAN,YAEM,EAAN,wCACM,KAAN,+CAEQ,EAAR,8CACU,EAAV,4BAAY,KAAZ,MAAY,MAAZ,aAEQ,IAAR,4CACU,IAAV,iDACY,IAAZ,gBACA,0CAKY,OAJA,EAAZ,mBACc,iBAAd,GACA,GAEA,IACA,IACU,GAAV,WACY,IAAZ,gBAOY,OANA,EAAZ,4BACY,EAAZ,qBACc,EAAd,QACc,EAAd,wFAGA,uBACA,mEAGA,wBACA,oBAGY,OAAZ,KAGA,iBACU,EAAV,qBACY,IAAZ,+CAAc,OAAd,oCACA,mCACc,EAAd,gBACc,EAAd,MAEc,EAAd,wBAOE,MAAF,CACI,cAAJ,CACM,WAAN,EACM,MAAN,EACM,QAHN,WAGQ,IAAR,OAAQ,OAAR,qDAAU,OAAV,qCAAY,MAAZ,EAAc,OAAd,eAAgB,KAAhB,kBACA,cADgB,KAAhB,EAEkB,EAAlB,gBAFgB,KAAhB,EAAgB,IAAhB,sCCroBqV,I,wBCQjVC,EAAY,eACd,EACA9B,EACA6B,GACA,EACA,KACA,WACA,MAIa,aAAAC,E,4BCZf,SAAStI,EAASuI,GAChB,OAAQC,MAAMC,WAAWF,KAAOG,SAASH,GAR3CtJ,EAAOC,QAAUc,G,oCCCjB,IAAI2I,EAAI,EAAQ,QACZC,EAAQ,EAAQ,QAAgCC,KAChDC,EAAmB,EAAQ,QAC3BC,EAA0B,EAAQ,QAElCC,EAAO,OACPC,GAAc,EAEdC,EAAiBH,EAAwBC,GAGzCA,IAAQ,IAAIrG,MAAM,GAAGqG,IAAM,WAAcC,GAAc,KAI3DN,EAAE,CAAEQ,OAAQ,QAASC,OAAO,EAAMC,OAAQJ,IAAgBC,GAAkB,CAC1EL,KAAM,SAAcS,GAClB,OAAOV,EAAMtE,KAAMgF,EAAYC,UAAUnJ,OAAS,EAAImJ,UAAU,QAAK/E,MAKzEsE,EAAiBE,I,oCCvBjB,yBACe,QACXvB,KADW,WAEP,MAAO,CACH+B,gBAAgB,IAChBC,WAAW,CACP,QAAU,IAAIC,IAAM,CAAC,KAAO,MAAO,MAAQ,YAC3C,UAAY,IAAIA,IAAM,CAAC,KAAO,MAAO,MAAQ,aAEjDC,qBAAqB,CACjBC,MAAK,EACLxB,QAAQ,uBAEZyB,kBAAkB,CACd,OAAQ,EACR,KAAO,IAEXC,oBAAoB,CAChB,OAAQ,EACR,OAAS,CACL,MAAQ,oCACR,MAAQ,CACJ,MAAQ,oBACR,MAAQ,CAAC,EAAE,IACX,MAAQ,GAEZ,MAAQ,CACJ,MAAQ,6CAIpBC,mBAAmB,CACfH,MAAK,EACLxB,QAAQ,uBAEZ4B,gBAAgB,CACZ,OAAQ,EACR,KAAO,IAEXC,kBAAkB,CACd,OAAQ,EACR,OAAS,CACL,MAAQ,yDACR,MAAQ,CACJ,MAAQ,OACR,KAAO,QAEX,MAAQ,CACJ,MAAQ,qCAIpBC,mBAAmB,CACf,OAAQ,EACR,KAAO,IAEXC,qBAAqB,CACjB,OAAQ,EACR,OAAS,CACL,MAAQ,iEACR,MAAQ,CACJ,MAAQ,kCACR,WAAY,GAEhB,MAAQ,CACJ,MAAQ,yBACR,WAAY,EACZ,MAAQ,CAAC,EAAE,MAIvBC,qBAAqB,CACjBR,MAAK,EACLxB,QAAQ,uBAEZiC,kBAAkB,CACd,OAAQ,EACR,KAAO,IAEXC,oBAAoB,CAChB,OAAQ,EACR,OAAS,CACL,MAAQ,qEACR,MAAQ,CACJ,MAAQ,OACR,KAAO,QAEX,MAAQ,CACJ,MAAQ,+BAIpBC,qBAAqB,CACjB,OAAQ,EACR,KAAO,IAEXC,uBAAuB,CACnB,OAAQ,EACR,OAAS,CACL,MAAQ,6EACR,MAAQ,CACJ,MAAQ,4BACR,WAAY,GAEhB,MAAQ,CACJ,MAAQ,yBACR,WAAY,EACZ,MAAQ,CAAC,EAAE,MAIvBC,uBAAuB,CACnBb,MAAK,EACLxB,QAAQ,uBAEZsC,oBAAoB,CAChB,OAAQ,EACR,KAAO,IAEXC,sBAAsB,CAClB,OAAQ,EACR,OAAS,CACL,MAAQ,2EACR,MAAQ,CACJ,MAAQ,oBACR,MAAQ,CAAC,EAAE,IACX,MAAQ,GAEZ,MAAQ,CACJ,MAAQ,uCAIpBC,eAAe,CACXhB,MAAK,EACLxB,QAAQ,uBAEZyC,YAAY,CACR,OAAQ,EACR,KAAO,IAEXC,cAAc,CACV,OAAQ,EACR,OAAS,CACL,MAAQ,oCACR,MAAQ,CACJ,MAAQ,OACR,KAAO,QAEX,MAAQ,CACJ,MAAQ,kCAIpBC,iBAAiB,CACbnB,MAAK,EACLxB,QAAQ,uBAEZ4C,cAAc,CACV,OAAQ,EACR,KAAO,IAEXC,gBAAgB,CACZ,OAAQ,EACR,OAAS,CACL,MAAQ,0CACR,MAAQ,CACJ,MAAQ,oBACR,MAAQ,CAAC,EAAE,IACX,MAAQ,GAEZ,MAAQ,CACJ,MAAQ,4CAM5BC,SAAS,CACLC,eADK,WAED,MAAO,CACH,CAAE,QAAU7G,KAAKyF,mBAAoB,KAAOzF,KAAK0F,gBAAiB,OAAS1F,KAAK2F,mBAChF,CAAE,QAAU3F,KAAKyF,mBAAoB,KAAOzF,KAAK4F,mBAAoB,OAAS5F,KAAK6F,sBACnF,CAAE,QAAU7F,KAAKqF,qBAAsB,KAAOrF,KAAKuF,kBAAmB,OAASvF,KAAKwF,qBACpF,CAAE,QAAUxF,KAAK8F,qBAAsB,KAAO9F,KAAK+F,kBAAmB,OAAS/F,KAAKgG,qBACpF,CAAE,QAAUhG,KAAK8F,qBAAsB,KAAO9F,KAAKiG,qBAAsB,OAASjG,KAAKkG,wBACvF,CAAE,QAAUlG,KAAKmG,uBAAwB,KAAOnG,KAAKoG,oBAAqB,OAASpG,KAAKqG,uBACxF,CAAE,QAAUrG,KAAKsG,eAAgB,KAAOtG,KAAKuG,YAAa,OAASvG,KAAKwG,eACxE,CAAE,QAAUxG,KAAKyG,iBAAkB,KAAOzG,KAAK0G,cAAe,OAAS1G,KAAK2G,sB,2DC5L/E,SAASG,EAAkBC,EAAEC,GAAG,IAAI,IAAIC,EAAE,EAAEA,EAAED,EAAElL,OAAOmL,IAAI,CAAC,IAAIjF,EAAEgF,EAAEC,GAAGjF,EAAEkF,WAAWlF,EAAEkF,aAAY,EAAGlF,EAAEmF,cAAa,EAAG,UAAUnF,IAAIA,EAAEoF,UAAS,GAAIzK,OAAO0K,eAAeN,EAAE/E,EAAEqB,IAAIrB,IAAI,SAASsF,EAAaP,EAAEC,EAAEC,GAAG,OAAOD,GAAGF,EAAkBC,EAAEQ,UAAUP,GAAGC,GAAGH,EAAkBC,EAAEE,GAAGF,EAAE,IAAI3B,EAAM,WAAW,SAASA,EAAM2B,GAAG,IAAIC,OAAE,IAASD,EAAE,CAACS,MAAM,CAAC,EAAE,EAAE,GAAGC,KAAK,MAAMC,UAAU,EAAEC,YAAW,GAAIZ,EAAEE,EAAED,EAAEQ,MAAMxF,OAAE,IAASiF,EAAE,CAAC,EAAE,EAAE,GAAGA,EAAEhD,EAAE+C,EAAES,KAAKvL,OAAE,IAAS+H,EAAE,MAAMA,EAAEpI,EAAEmL,EAAEU,UAAUE,OAAE,IAAS/L,EAAE,EAAEA,EAAEgM,EAAEb,EAAEW,WAAWG,OAAE,IAASD,GAAGA,EAAE7H,KAAK+H,YAAY/F,EAAE9F,GAAG8D,KAAK0H,UAAUE,EAAE5H,KAAK2H,WAAWG,EAAE,OAAO1C,EAAMmC,UAAUQ,YAAY,SAAqBhB,EAAEC,GAAG,IAAIC,EAAE,QAAG,IAASD,IAAIA,EAAE,OAAO,iBAAiBA,EAAE,MAAM,IAAIgB,UAAU,uCAAuC,GAAGhB,EAAEA,EAAEiB,eAAe7C,EAAM8C,WAAWC,SAASnB,GAAG,MAAM,IAAIgB,UAAU,gBAAgBhB,EAAE,0BAA0B,OAAOA,GAAG,IAAI,MAAMC,EAAE7B,EAAMgD,SAASrB,GAAG,MAAM,IAAI,MAAME,EAAE7B,EAAMgD,SAAShD,EAAMiD,SAAStB,IAAI,MAAM,IAAI,MAAME,EAAE7B,EAAMgD,SAAShD,EAAMkD,SAASvB,IAAI,MAAM,IAAI,MAAME,EAAE7B,EAAMmD,SAASxB,GAAG,MAAM,IAAI,QAAQE,EAAE7B,EAAMmD,SAASnD,EAAMoD,WAAWzB,IAAI,MAAM,IAAI,MAAME,EAAE7B,EAAMqD,SAAS1B,GAAG,MAAM,IAAI,QAAQE,EAAE7B,EAAMqD,SAASrD,EAAMsD,WAAW3B,IAAI,MAAM,IAAI,MAAM,IAAI,UAAU/G,KAAK2I,KAAK5B,EAAE/G,KAAK4I,KAAKxD,EAAMyD,SAAS7I,KAAK2I,MAAM3I,KAAK8I,KAAK1D,EAAM2D,SAAS/I,KAAK4I,MAAM5I,KAAKgJ,KAAK5D,EAAM6D,SAASjJ,KAAK4I,MAAM5I,KAAKkJ,KAAK9D,EAAM+D,SAASnJ,KAAK2I,MAAM3I,KAAKoJ,OAAOhE,EAAMiE,WAAWrJ,KAAKkJ,MAAMlJ,KAAKsJ,KAAKlE,EAAMmE,SAASvJ,KAAK2I,MAAM3I,KAAKwJ,OAAOpE,EAAMqE,WAAWzJ,KAAKsJ,MAAM,QAAQtC,GAAGhH,KAAK+H,YAAYd,EAAE,QAAQ7B,EAAM2D,SAAS,SAAkBhC,GAAG,IAAIC,EAAED,EAAE,GAAG,IAAIE,EAAEF,EAAE,GAAG,IAAI/E,EAAE+E,EAAE,GAAG,IAAI9C,EAAE7G,KAAKS,IAAImJ,EAAEC,EAAEjF,GAAG9F,EAAEkB,KAAKM,IAAIsJ,EAAEC,EAAEjF,GAAGnG,GAAGoI,EAAE/H,GAAG,EAAE0L,EAAE,EAAEC,EAAE,EAAE,OAAO5D,IAAI/H,IAAI0L,EAAE/L,EAAE,IAAIoI,EAAE/H,IAAI+H,EAAE/H,IAAI+H,EAAE/H,IAAI,EAAE+H,EAAE/H,GAAG2L,EAAEb,IAAI/C,GAAGgD,EAAEjF,IAAIiC,EAAE/H,GAAG+K,IAAIhD,EAAE,GAAGjC,EAAEgF,IAAI/C,EAAE/H,GAAG,GAAG8K,EAAEC,IAAIhD,EAAE/H,IAAI,EAAE2L,GAAGA,GAAG,IAAI,EAAEA,EAAE,IAAI,IAAIA,GAAG,EAAW,GAARD,GAAG,KAAgB,GAAR/L,GAAG,OAASuJ,EAAMiD,SAAS,SAAkBtB,GAAG,IAAIC,EAAED,EAAE,GAAGE,EAAEF,EAAE,GAAG/E,EAAE+E,EAAE,GAAG3C,SAAS4C,KAAKA,EAAE,GAAG5C,SAAS6C,KAAKA,EAAE,GAAG7C,SAASpC,KAAKA,EAAE,GAAGgF,EAAEA,EAAE,EAAEA,EAAE,IAAI,IAAIA,EAAEhF,GAAG,IAAIiF,GAAG,IAAID,GAAG,GAAG,IAAI/C,GAAG,EAAE7G,KAAKsM,IAAI,EAAE1H,EAAE,IAAIiF,EAAE/K,EAAE+H,GAAG,EAAE7G,KAAKsM,IAAI1C,EAAE,EAAE,IAAInL,EAAEmG,EAAEiC,EAAE,EAAE2D,EAAEZ,EAAE,EAAE,CAAC/C,EAAE/H,EAAE,GAAG8K,EAAE,EAAE,CAAC9K,EAAE+H,EAAE,GAAG+C,EAAE,EAAE,CAAC,EAAE/C,EAAE/H,GAAG8K,EAAE,EAAE,CAAC,EAAE9K,EAAE+H,GAAG+C,EAAE,EAAE,CAAC9K,EAAE,EAAE+H,GAAG,CAACA,EAAE,EAAE/H,GAAG,OAAO0L,EAAE+B,KAAI,SAAS5C,GAAG,OAAO3J,KAAKQ,MAAM,KAAKmJ,EAAElL,IAAI,MAAKuJ,EAAM6D,SAAS,SAAkBlC,GAAG,SAASrF,EAAEqF,GAAG,IAAIC,EAAED,EAAE6C,SAAS,IAAI,OAAO,IAAI5C,EAAElL,OAAO,IAAIkL,EAAEA,EAAE,IAAIA,EAAED,EAAE,GAAGE,EAAEF,EAAE,GAAG/E,EAAE+E,EAAE,GAAG,MAAM,IAAIrF,EAAEsF,GAAGtF,EAAEuF,GAAGvF,EAAEM,IAAIoD,EAAMkD,SAAS,SAAkBvB,GAAGA,EAAEA,EAAE8C,QAAQ,oCAAmC,SAAS9C,EAAEC,EAAEC,EAAEjF,GAAG,OAAOgF,EAAEA,EAAEC,EAAEA,EAAEjF,EAAEA,KAAI,IAAIgF,EAAE,4CAA4C8C,KAAK/C,GAAG,OAAOC,EAAE,CAAC+C,SAAS/C,EAAE,GAAG,IAAI+C,SAAS/C,EAAE,GAAG,IAAI+C,SAAS/C,EAAE,GAAG,KAAK,MAAM5B,EAAMgD,SAAS,SAAkBrB,GAAG,SAASiD,EAAGjD,GAAG,OAAOA,GAAG,OAAOA,EAAE,MAAM3J,KAAKC,KAAK0J,EAAE,MAAM,MAAM,KAAK,IAAIC,EAAED,EAAE,GAAG,IAAIE,EAAEF,EAAE,GAAG,IAAI/E,EAAE+E,EAAE,GAAG,IAAI9C,EAAE+F,EAAGhD,GAAG9K,EAAE8N,EAAG/C,GAAGpL,EAAEmO,EAAGhI,GAAG,MAAM,CAAC,KAAK,MAAMiC,EAAE,MAAM/H,EAAE,MAAML,GAAG,EAAE,KAAK,MAAMoI,EAAE,MAAM/H,EAAE,MAAML,GAAG,EAAE,KAAK,MAAMoI,EAAE,MAAM/H,EAAE,MAAML,GAAG,IAAIuJ,EAAMyD,SAAS,SAAkB9B,GAAG,SAASkD,EAAGlD,GAAG,OAAOA,GAAG,SAAS,MAAMA,EAAE,MAAM3J,KAAKC,IAAI0J,EAAE,EAAE,KAAK,KAAK,IAAIC,EAAED,EAAE,GAAG,IAAIE,EAAEF,EAAE,GAAG,IAAI/E,EAAE+E,EAAE,GAAG,IAAI9C,GAAG,kBAAkB+C,EAAE,mBAAmBC,EAAE,oBAAoBjF,EAAE9F,EAAE,oBAAoB8K,GAAG,kBAAkBC,EAAE,mBAAmBjF,EAAEnG,EAAEoO,EAAG,mBAAmBjD,EAAE,mBAAmBC,EAAE,kBAAkBjF,GAAG4F,EAAEqC,EAAGhG,GAAG4D,EAAEoC,EAAG/N,GAAG,MAAM,CAACkB,KAAKQ,MAAM,IAAI/B,GAAG,EAAEuB,KAAKQ,MAAM,IAAIgK,GAAG,EAAExK,KAAKQ,MAAM,IAAIiK,GAAG,IAAIzC,EAAM+D,SAAS,SAAkBpC,GAAG,SAASmD,EAAGnD,GAAG,OAAO,IAAI,MAAMA,EAAE9C,EAAE8C,IAAI,MAAM,GAAGA,EAAE,IAAI,IAAI,IAAIC,EAAED,EAAE,GAAG3B,EAAM+E,IAAI,GAAGlD,EAAEF,EAAE,GAAG3B,EAAM+E,IAAI,GAAGnI,EAAE+E,EAAE,GAAG3B,EAAM+E,IAAI,GAAGlG,EAAE,MAAM7G,KAAKgN,KAAKhN,KAAKgN,KAAK,SAASrD,GAAG,OAAO3J,KAAKC,IAAI0J,EAAE,EAAE,IAAI7K,EAAEgO,EAAGlD,GAAGnL,EAAEqO,EAAGjD,GAAG,MAAM,CAAC,IAAIpL,EAAE,GAAG,EAAE,KAAKK,EAAEL,GAAG,EAAE,KAAKA,EAAEqO,EAAGlI,MAAMoD,EAAMmD,SAAS,SAAkBxB,GAAG,IAAIC,EAAED,EAAE,GAAGE,EAAEF,EAAE,GAAG/E,EAAE,IAAI,MAAMiC,EAAE,MAAM,GAAG/H,GAAG8K,EAAE,IAAI,IAAInL,EAAEK,EAAE6K,EAAE,GAAG,IAAIa,EAAEX,EAAE,IAAI/K,EAAE2L,EAAEzK,KAAKC,IAAIuK,EAAE,GAAG5F,EAAE5E,KAAKC,IAAIuK,EAAE,IAAI,IAAIA,EAAE,IAAI3D,EAAE6D,EAAE,EAAEd,EAAE5J,KAAKC,KAAK2J,EAAE,IAAI,IAAI,GAAGA,EAAE/C,EAAEoG,EAAEjN,KAAKC,IAAIxB,EAAE,GAAGmG,EAAE5E,KAAKC,IAAIxB,EAAE,IAAI,IAAIA,EAAE,IAAIoI,EAAE,MAAM,CAAC4D,EAAEzC,EAAM+E,IAAI,GAAG,EAAErC,EAAE1C,EAAM+E,IAAI,GAAG,EAAEE,EAAEjF,EAAM+E,IAAI,GAAG,IAAI/E,EAAMiE,WAAW,SAAoBtC,GAAG,IAAIC,EAAED,EAAE,GAAGE,EAAE7J,KAAKsM,IAAI3C,EAAE,IAAI3B,EAAMkF,iBAAiB,EAAEvD,EAAE,GAAG/E,EAAE5E,KAAKE,KAAK0J,EAAEA,EAAEC,EAAEA,GAAGhD,EAAE,GAAG7G,KAAKmN,MAAMtD,EAAED,GAAG5J,KAAKmN,MAAMtD,EAAED,GAAG5J,KAAKoN,GAAG,IAAIpN,KAAKmN,MAAMtD,EAAED,GAAG5J,KAAKoN,GAAG,IAAI,IAAI,MAAM,CAACzD,EAAE,GAAG,EAAE/E,EAAE,EAAE,EAAEiC,IAAImB,EAAMoD,WAAW,SAAoBzB,GAAG,IAAIC,EAAED,EAAE,GAAGE,EAAEF,EAAE,GAAG/E,EAAEgF,EAAE5J,KAAKqN,IAAIxD,EAAE,IAAI7J,KAAKoN,IAAIvG,EAAE+C,EAAE5J,KAAKsN,IAAIzD,EAAE,IAAI7J,KAAKoN,IAAI,MAAM,CAACzD,EAAE,GAAG,EAAE,EAAE/E,EAAE,EAAEiC,IAAImB,EAAMmE,SAAS,SAAkBxC,GAAG,IAAIC,EAAED,EAAE,GAAGE,EAAEF,EAAE,GAAG/E,EAAE+E,EAAE,GAAG9C,EAAEmB,EAAM+E,IAAI,GAAGjO,EAAEkJ,EAAM+E,IAAI,GAAGtO,EAAEuJ,EAAM+E,IAAI,GAAGvC,EAAE,EAAE1L,GAAG+H,EAAE,GAAG/H,EAAE,EAAEL,GAAGgM,EAAE,EAAE5D,GAAGA,EAAE,GAAG/H,EAAE,EAAEL,GAAG,GAAG,IAAImL,GAAG,IAAIC,GAAG,IAAIjF,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,IAAI8F,EAAE,EAAEb,GAAGD,EAAE,GAAGC,EAAE,EAAEjF,GAAGqI,EAAE,EAAErD,GAAGA,EAAE,GAAGC,EAAE,EAAEjF,GAAG2I,EAAE1D,EAAE/K,EAAEyF,EAAE,MAAMvE,KAAKgN,KAAKhN,KAAKgN,KAAK,SAASrD,GAAG,OAAO3J,KAAKC,IAAI0J,EAAE,EAAE,IAAIlF,EAAE,IAAI,MAAM8I,EAAE,IAAIhJ,EAAEgJ,EAAE,EAAE,GAAG,GAAG,MAAM,GAAGA,EAAE,MAAM,CAAC,EAAE9I,EAAE,EAAE,GAAGA,GAAGwI,EAAExC,GAAG,EAAE,GAAGhG,GAAGiG,EAAEF,KAAKxC,EAAMqD,SAAS,SAAkB1B,GAAG,IAAIC,EAAED,EAAE,GAAGE,EAAEF,EAAE,GAAG/E,EAAE+E,EAAE,GAAG9C,EAAEmB,EAAM+E,IAAI,GAAGjO,EAAEkJ,EAAM+E,IAAI,GAAGtO,EAAEuJ,EAAM+E,IAAI,GAAGvC,EAAE,EAAE1L,GAAG+H,EAAE,GAAG/H,EAAE,EAAEL,GAAGgM,EAAE,EAAE5D,GAAGA,EAAE,GAAG/H,EAAE,EAAEL,GAAGiM,EAAE,EAAEd,EAAE5J,KAAKC,KAAK2J,EAAE,IAAI,IAAI,GAAGA,GAAG,MAAM,IAAIqD,GAAG,EAAEvC,EAAE6C,GAAG,GAAG3D,GAAGC,EAAE,GAAGD,EAAEa,GAAG,GAAG,GAAG,EAAElG,IAAImG,GAAG,GAAGd,GAAGhF,EAAE,GAAGgF,EAAEY,GAAG,IAAI,GAAGyC,IAAIM,IAAI,EAAE,GAAG,MAAM,CAAC,IAAIhJ,EAAE,EAAE,IAAImG,EAAE,EAAE,KAAKnG,EAAEgJ,EAAEN,GAAG,IAAIjF,EAAMqE,WAAW,SAAoB1C,GAAG,IAAIC,EAAED,EAAE,GAAGE,EAAE7J,KAAKsM,IAAI3C,EAAE,IAAI3B,EAAMkF,iBAAiB,EAAEvD,EAAE,GAAG/E,EAAE5E,KAAKsM,IAAI3C,EAAE,IAAI3B,EAAMkF,iBAAiB,EAAEvD,EAAE,GAAG9C,EAAE7G,KAAKE,KAAK2J,EAAEA,EAAEjF,EAAEA,GAAG9F,EAAE,IAAIkB,KAAKmN,MAAMvI,EAAEiF,GAAG7J,KAAKoN,GAAG,MAAM,CAACxD,EAAE,EAAE/C,EAAE,GAAG/H,EAAE,GAAGA,EAAEA,EAAEA,EAAE,KAAK,IAAIkJ,EAAMsD,WAAW,SAAoB3B,GAAG,IAAIC,EAAED,EAAE,GAAGE,EAAEF,EAAE,GAAG/E,EAAE+E,EAAE,GAAG,IAAI3J,KAAKoN,GAAG,MAAM,CAACxD,EAAE,EAAE,EAAEC,EAAE7J,KAAKqN,IAAIzI,GAAG,EAAEiF,EAAE7J,KAAKsN,IAAI1I,KAAKoD,EAAMwF,UAAU,SAAmB7D,EAAEC,GAAG,QAAG,IAASA,IAAIA,EAAE,OAAO,iBAAiBA,EAAE,MAAM,IAAIgB,UAAU,uCAAuC,GAAGhB,EAAEA,EAAEiB,eAAe7C,EAAM8C,WAAWC,SAASnB,GAAG,MAAM,IAAIgB,UAAU,gBAAgBhB,EAAE,0BAA0B,QAAQA,IAAID,EAAE,IAAI3B,EAAM,CAACoC,MAAMT,EAAEU,KAAKT,IAAI6D,KAAK,IAAI,IAAI5D,EAAE,EAAEA,EAAEF,EAAEjL,OAAOmL,IAAIF,EAAEE,IAAI,IAAIF,EAAEE,GAAG,OAAOF,EAAEE,IAAI,MAAMF,EAAEE,GAAG7J,KAAKC,KAAK0J,EAAEE,GAAG,MAAM,MAAM,KAAK,MAAM,MAAMF,EAAE,GAAG,MAAMA,EAAE,GAAG,MAAMA,EAAE,IAAI3B,EAAM0F,OAAO,WAAkB,OAAO,IAAI1F,EAAM,CAACoC,MAAM,CAAC,IAAI,IAAI,KAAKmC,KAAI,SAAS5C,GAAG,OAAO3J,KAAKQ,MAAMmJ,EAAE3J,KAAK0N,gBAAe1F,EAAM2F,iBAAiB,SAA0BhE,GAAsB,SAASiE,EAAGjE,GAAG,IAAI,IAAIC,EAAE,WAAWC,EAAE,EAAEA,EAAEF,EAAEjL,OAAOmL,IAAI,CAAC,IAAIjF,EAAE,YAAYgF,GAAGA,GAAG,GAAGD,EAAEkE,WAAWhE,IAAI,GAAGjF,IAAIgF,GAAGhF,IAAI,GAAGgF,GAAGhF,GAAG,OAAO5E,KAAKsM,IAAI1C,QAA9J,IAASD,IAAIA,EAAE,IAAkJ,IAAIC,EAAEgE,EAAGjE,GAAGE,EAAE+D,EAAGjE,EAAEC,GAAG,OAAO,IAAI5B,EAAM,CAACoC,MAAM,CAACR,EAAE,IAAIC,EAAE,IAAI+D,EAAGjE,EAAEE,GAAG,QAAQ7B,EAAM8F,aAAa,SAAsBnE,GAAG,QAAG,IAASA,IAAIA,EAAE,OAAO,iBAAiBA,EAAE,MAAM,IAAIiB,UAAU,uCAAuC,GAAGjB,EAAEA,EAAEkB,eAAe7C,EAAM8C,WAAWC,SAASpB,GAAG,MAAM,IAAIiB,UAAU,gBAAgBjB,EAAE,0BAA0B,OAAO3B,EAAM0F,SAAS/D,IAAI3B,EAAM+F,sBAAsB,SAA+BpE,EAAEC,EAAEC,GAAG,QAAG,IAASF,IAAIA,EAAE,YAAO,IAASC,IAAIA,GAAE,QAAI,IAASC,IAAIA,EAAE,GAAG,iBAAiBF,EAAE,MAAM,IAAIiB,UAAU,uCAAuC,GAAGjB,EAAEA,EAAEkB,eAAe7C,EAAM8C,WAAWC,SAASpB,GAAG,MAAM,IAAIiB,UAAU,gBAAgBjB,EAAE,0BAA0B,IAAI/E,EAAEoD,EAAM0F,SAAS,OAAO9I,EAAE2F,WAAWX,EAAEhF,EAAE0F,UAAUT,EAAEjF,EAAE+E,EAAE,WAAW3B,EAAMgG,kBAAkB,SAA2BrE,EAAEC,GAAG,QAAG,IAASA,IAAIA,EAAE,OAAO,iBAAiBA,EAAE,MAAM,IAAIgB,UAAU,uCAAuC,GAAGhB,EAAEA,EAAEiB,eAAe7C,EAAM8C,WAAWC,SAASnB,GAAG,MAAM,IAAIgB,UAAU,gBAAgBhB,EAAE,0BAA0B,IAAIC,EAAE7B,EAAMiG,cAAc,IAAIjG,EAAM,CAACoC,MAAM,CAAC,IAAI,IAAI,OAAO,IAAIpC,EAAM,CAACoC,MAAMT,EAAEU,KAAKT,KAAK,OAAO5B,EAAMiG,cAAc,IAAIjG,EAAM,CAACoC,MAAM,CAAC,EAAE,EAAE,KAAK,IAAIpC,EAAM,CAACoC,MAAMT,EAAEU,KAAKT,KAAKC,EAAE,UAAU,WAAW7B,EAAMiG,cAAc,SAAuBtE,EAAEC,GAAG,KAAKD,aAAa3B,GAAO,MAAM,IAAI4C,UAAU,sCAAsC,KAAKhB,aAAa5B,GAAO,MAAM,IAAI4C,UAAU,sCAAsC,IAAIf,EAAE7B,EAAMwF,UAAU7D,EAAE8D,KAAK,IAAI7I,EAAEoD,EAAMwF,UAAU5D,EAAE6D,KAAK,IAAI,OAAO5D,EAAEjF,EAAEA,EAAEiF,EAAEA,EAAEjF,GAAGsF,EAAalC,EAAM,CAAC,CAAC/B,IAAI,MAAMiI,IAAI,WAAe,OAAOtL,KAAK4I,MAAM2C,IAAI,SAAaxE,GAAG/G,KAAK+H,YAAYhB,EAAE,SAAS,CAAC1D,IAAI,YAAYiI,IAAI,WAAe,IAAIvE,EAAE,OAAO/G,KAAK6K,IAAIW,KAAK,MAAM,IAAI,OAAOxL,KAAK2H,WAAWZ,EAAE0E,cAAc1E,EAAEkB,gBAAgB,CAAC5E,IAAI,MAAMiI,IAAI,WAAe,OAAOtL,KAAK8I,MAAMyC,IAAI,SAAaxE,GAAG/G,KAAK+H,YAAYhB,EAAE,SAAS,CAAC1D,IAAI,YAAYiI,IAAI,WAAe,IAAItE,EAAEhH,KAAK+G,EAAE,OAAO/G,KAAK0L,IAAI/B,KAAI,SAAS5C,GAAG,OAAOA,EAAE4E,QAAQ3E,EAAEU,cAAa8D,KAAK,MAAM,IAAI,OAAOxL,KAAK2H,WAAWZ,EAAE0E,cAAc1E,EAAEkB,gBAAgB,CAAC5E,IAAI,MAAMiI,IAAI,WAAe,OAAOtL,KAAKgJ,MAAMuC,IAAI,SAAaxE,GAAG/G,KAAK+H,YAAYhB,EAAE,SAAS,CAAC1D,IAAI,YAAYiI,IAAI,WAAe,IAAIvE,EAAE/G,KAAKgJ,KAAK,OAAOhJ,KAAK2H,WAAWZ,EAAE0E,cAAc1E,EAAEkB,gBAAgB,CAAC5E,IAAI,MAAMiI,IAAI,WAAe,OAAOtL,KAAK2I,MAAM4C,IAAI,SAAaxE,GAAG/G,KAAK+H,YAAYhB,EAAE,SAAS,CAAC1D,IAAI,YAAYiI,IAAI,WAAe,IAAItE,EAAEhH,KAAK+G,EAAE,OAAO/G,KAAK4L,IAAIjC,KAAI,SAAS5C,GAAG,OAAOA,EAAE4E,QAAQ3E,EAAEU,cAAa8D,KAAK,MAAM,IAAI,OAAOxL,KAAK2H,WAAWZ,EAAE0E,cAAc1E,EAAEkB,gBAAgB,CAAC5E,IAAI,MAAMiI,IAAI,WAAe,OAAOtL,KAAKkJ,MAAMqC,IAAI,SAAaxE,GAAG/G,KAAK+H,YAAYhB,EAAE,SAAS,CAAC1D,IAAI,YAAYiI,IAAI,WAAe,IAAItE,EAAEhH,KAAK+G,EAAE,OAAO/G,KAAK6L,IAAIlC,KAAI,SAAS5C,GAAG,OAAOA,EAAE4E,QAAQ3E,EAAEU,cAAa8D,KAAK,MAAM,IAAI,OAAOxL,KAAK2H,WAAWZ,EAAE0E,cAAc1E,EAAEkB,gBAAgB,CAAC5E,IAAI,QAAQiI,IAAI,WAAe,OAAOtL,KAAKoJ,QAAQmC,IAAI,SAAaxE,GAAG/G,KAAK+H,YAAYhB,EAAE,WAAW,CAAC1D,IAAI,cAAciI,IAAI,WAAe,IAAItE,EAAEhH,KAAK+G,EAAE/G,KAAK8L,MAAMnC,KAAI,SAAS5C,GAAG,OAAOA,EAAE4E,QAAQ3E,EAAEU,cAAa,OAAO1H,KAAK2H,WAAW,SAASZ,EAAEyE,KAAK,MAAM,IAAI,SAASzE,EAAEyE,KAAK,MAAM,MAAM,CAACnI,IAAI,MAAMiI,IAAI,WAAe,OAAOtL,KAAKsJ,MAAMiC,IAAI,SAAaxE,GAAG/G,KAAK+H,YAAYhB,EAAE,SAAS,CAAC1D,IAAI,YAAYiI,IAAI,WAAe,IAAItE,EAAEhH,KAAK+G,EAAE,OAAO/G,KAAK+L,IAAIpC,KAAI,SAAS5C,GAAG,OAAOA,EAAE4E,QAAQ3E,EAAEU,cAAa8D,KAAK,MAAM,IAAI,OAAOxL,KAAK2H,WAAWZ,EAAE0E,cAAc1E,EAAEkB,gBAAgB,CAAC5E,IAAI,QAAQiI,IAAI,WAAe,OAAOtL,KAAKwJ,QAAQ+B,IAAI,SAAaxE,GAAG/G,KAAK+H,YAAYhB,EAAE,WAAW,CAAC1D,IAAI,cAAciI,IAAI,WAAe,IAAItE,EAAEhH,KAAK+G,EAAE/G,KAAKgM,MAAMrC,KAAI,SAAS5C,GAAG,OAAOA,EAAE4E,QAAQ3E,EAAEU,cAAa,OAAO1H,KAAK2H,WAAW,SAASZ,EAAEyE,KAAK,MAAM,IAAI,SAASzE,EAAEyE,KAAK,MAAM,QAAQpG,EAAjrS,GAA0rSA,EAAM8C,WAAW,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,QAAQ,MAAM,SAAS9C,EAAM+E,IAAI,CAAC,MAAM,IAAI,OAAO/E,EAAMkF,iBAAiBlN,KAAKC,IAAI,IAAI,IAAI1C,EAAOC,QAAQwK,G,kCCAroT,yBAAwiB,EAAG","file":"js/chunk-001c9bad.js","sourcesContent":["\"use strict\";\n\nmodule.exports.numbers = numbers\nmodule.exports.sum = sum\nmodule.exports.mean = mean\nmodule.exports.median = median\nmodule.exports.mode = mode\nmodule.exports.variance = populationVariance\nmodule.exports.sampleVariance = sampleVariance\nmodule.exports.populationVariance = populationVariance\nmodule.exports.stdev = populationStdev\nmodule.exports.sampleStdev = sampleStdev\nmodule.exports.populationStdev = populationStdev\nmodule.exports.percentile = percentile\nmodule.exports.histogram = histogram\n\nvar isNumber = require(\"isnumber\")\n\nfunction numbers(vals) {\n  var nums = []\n  if (vals == null)\n    return nums\n\n  for (var i = 0; i < vals.length; i++) {\n    if (isNumber(vals[i]))\n      nums.push(+vals[i])\n  }\n  return nums\n}\n\nfunction nsort(vals) {\n  return vals.sort(function numericSort(a, b) { return a - b })\n}\n\nfunction sum(vals) {\n  vals = numbers(vals)\n  var total = 0\n  for (var i = 0; i < vals.length; i++) {\n    total += vals[i]\n  }\n  return total\n}\n\nfunction mean(vals) {\n  vals = numbers(vals)\n  if (vals.length === 0) return NaN\n  return (sum(vals) / vals.length)\n}\n\nfunction median(vals) {\n  vals = numbers(vals)\n  if (vals.length === 0) return NaN\n\n  var half = (vals.length / 2) | 0\n\n  vals = nsort(vals)\n  if (vals.length % 2) {\n    // Odd length, true middle element\n    return vals[half]\n  }\n  else {\n    // Even length, average middle two elements\n    return (vals[half-1] + vals[half]) / 2.0\n  }\n}\n\n// Returns the mode of a unimodal dataset\n// If the dataset is multi-modal, returns a Set containing the modes\nfunction mode(vals) {\n  vals = numbers(vals)\n  if (vals.length === 0) return NaN\n  var mode = NaN\n  var dist = {}\n\n  for (var i = 0; i < vals.length; i++) {\n    var value = vals[i]\n    var me = dist[value] || 0\n    me++\n    dist[value] = me\n  }\n\n  var rank = numbers(Object.keys(dist).sort(function sortMembers(a, b) { return dist[b] - dist[a] }))\n  mode = rank[0]\n  if (dist[rank[1]] == dist[mode]) {\n    // multi-modal\n    if (rank.length == vals.length) {\n      // all values are modes\n      return vals\n    }\n    var modes = new Set([mode])\n    var modeCount = dist[mode]\n    for (var i = 1; i < rank.length; i++) {\n      if (dist[rank[i]] == modeCount) {\n        modes.add(rank[i])\n      }\n      else {\n        break\n      }\n    }\n    return modes\n  }\n  return mode\n}\n\n// This helper finds the mean of all the values, then squares the difference\n// from the mean for each value and returns the resulting array.  This is the\n// core of the varience functions - the difference being dividing by N or N-1.\nfunction valuesMinusMeanSquared(vals) {\n  vals = numbers(vals)\n  var avg = mean(vals)\n  var diffs = []\n  for (var i = 0; i < vals.length; i++) {\n    diffs.push(Math.pow((vals[i] - avg), 2))\n  }\n  return diffs\n}\n\n// Population Variance = average squared deviation from mean\nfunction populationVariance(vals) {\n  return mean(valuesMinusMeanSquared(vals))\n}\n\n// Sample Variance\nfunction sampleVariance(vals) {\n  var diffs = valuesMinusMeanSquared(vals)\n  if (diffs.length <= 1) return NaN\n\n  return sum(diffs) / (diffs.length - 1)\n}\n\n\n// Population Standard Deviation = sqrt of population variance\nfunction populationStdev(vals) {\n  return Math.sqrt(populationVariance(vals))\n}\n\n// Sample Standard Deviation = sqrt of sample variance\nfunction sampleStdev(vals) {\n  return Math.sqrt(sampleVariance(vals))\n}\n\nfunction percentile(vals, ptile) {\n  vals = numbers(vals)\n  if (vals.length === 0 || ptile == null || ptile < 0) return NaN\n\n  // Fudge anything over 100 to 1.0\n  if (ptile > 1) ptile = 1\n  vals = nsort(vals)\n  var i = (vals.length * ptile) - 0.5\n  if ((i | 0) === i) return vals[i]\n  // interpolated percentile -- using Estimation method\n  var int_part = i | 0\n  var fract = i - int_part\n  return (1 - fract) * vals[int_part] + fract * vals[Math.min(int_part + 1, vals.length - 1)]\n}\n\nfunction histogram (vals, bins) {\n  if (vals == null) {\n    return null\n  }\n  vals = nsort(numbers(vals))\n  if (vals.length === 0) {\n    return null\n  }\n  if (bins == null) {\n    // pick bins by simple method: Math.sqrt(n)\n    bins = Math.sqrt(vals.length)\n  }\n  bins = Math.round(bins)\n  if (bins < 1) {\n    bins = 1\n  }\n\n  var min = vals[0]\n  var max = vals[vals.length - 1]\n  if (min === max) {\n    // fudge for non-variant data\n    min = min - 0.5\n    max = max + 0.5\n  }\n\n  var range = (max - min)\n  // make the bins slightly larger by expanding the range about 10%\n  // this helps with dumb floating point stuff\n  var binWidth = (range + (range * 0.05)) / bins\n  var midpoint = (min + max) / 2\n  // even bin count, midpoint makes an edge\n  var leftEdge = midpoint - (binWidth * Math.floor(bins / 2))\n  if (bins % 2 !== 0) {\n    // odd bin count, center middle bin on midpoint\n    var leftEdge = (midpoint - (binWidth / 2)) - (binWidth * Math.floor(bins / 2))\n  }\n\n  var hist = {\n    values: Array(bins).fill(0),\n    bins: bins,\n    binWidth: binWidth,\n    binLimits: [leftEdge, leftEdge + (binWidth * bins)]\n  }\n\n  var binIndex = 0\n  for (var i = 0; i < vals.length; i++) {\n    while (vals[i] > (((binIndex + 1) * binWidth) + leftEdge)) {\n      binIndex++\n    }\n    hist.values[binIndex]++\n  }\n\n  return hist\n}\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\n\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, !SUPPORTS_Y);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('main',{staticClass:\"experiments\"},[_c('ac-grid',{attrs:{\"cols\":\"12\",\"align-h\":\"center\"}},[_c('ac-col',{attrs:{\"cols\":\"11\"}},[_c('date-range-dropdown',{attrs:{\"callback\":function (){},\"route\":{name:'Experiments',params:{id:this.params.id}}},on:{\"change\":_vm.setTimeRange}}),(_vm.experimentIDs)?_c('div',_vm._l((_vm.endpointGraphs),function(graph,i){return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(graph.data.visible),expression:\"graph.data.visible\"}],key:i,staticClass:\"graph-row\"},[_c('graph',{attrs:{\"data\":graph.data,\"layout\":graph.layout,\"spinner\":graph.spinner}})],1)}),0):_vm._e(),_c('ac-grid',_vm._l((_vm.experimentDescriptions),function(exp,i){return _c('ac-col',{key:i,attrs:{\"cols\":\"12\",\"md-cols\":\"6\",\"lg-cols\":\"4\",\"xl-cols\":\"3\"}},[_c('section',{staticClass:\"experiment-section\"},[_c('h2',{staticClass:\"experiment-section-name\"},[_vm._v(_vm._s(exp.name))]),_c('div',{staticClass:\"experiment-section-description\"},[_vm._v(_vm._s(exp.description))]),_c('router-link',{staticClass:\"experiment-section-link\",attrs:{\"to\":{name:'Experiments',params:{id:exp.name}}}},[_vm._v(\"View Graphs\")])],1)])}),1),(_vm.experimentDescriptions.length==0)?_c('div',[_c('graph',{attrs:{\"spinner\":{'show':true,message:'Fetching data...'}}})],1):_vm._e()],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <main class=\"experiments\">\n        <ac-grid cols=12 align-h=\"center\">\n            <ac-col cols=\"11\">\n                <date-range-dropdown :callback=\"()=>{}\" :route=\"{name:'Experiments',params:{id:this.params.id}}\"  v-on:change=\"setTimeRange\"></date-range-dropdown>\n                <div v-if='experimentIDs'>\n                    <div class=\"graph-row\" v-for=\"(graph,i) in endpointGraphs\" :key=\"i\"  v-show=\"graph.data.visible\">\n                        <graph :data=\"graph.data\" :layout=\"graph.layout\" :spinner=\"graph.spinner\" ></graph>\n                    </div>\n                </div>\n                <ac-grid>\n                    <ac-col \n                        cols=\"12\"\n                        md-cols=\"6\"\n                        lg-cols=\"4\"\n                        xl-cols=\"3\"\n                        v-for=\"(exp, i) in experimentDescriptions\" \n                        :key=\"i\">\n                        <section class=\"experiment-section\">\n                            <h2 class=\"experiment-section-name\">{{exp.name}}</h2>\n                            <div class=\"experiment-section-description\">{{exp.description}}</div>\n                            <router-link :to=\"{name:'Experiments',params:{id:exp.name}}\" class=\"experiment-section-link\">View Graphs</router-link>\n                        </section>\n                    </ac-col>\n                </ac-grid>\n                <div v-if=\"experimentDescriptions.length==0\">\n                    <graph :spinner=\"{'show':true,message:'Fetching data...'}\"></graph>\n                </div>\n            </ac-col>\n        </ac-grid>\n    </main>\n</template>\n<script type=\"text/javascript\">\n    import stats from \"stats-lite\"\n    import graph from \"@/components/graph\";\n    import dateRangeDropdown from \"@/components/date-range-dropdown\"\n    import moment from \"moment\"\n    import Color from \"ac-colors\"\n    import graphSetup from \"@/mixins/graph-setup.js\";\n    export default {\n        mixins:[graphSetup],\n        data(){\n            return {\n                graphColor:{\n                    \"primary\":new Color({\"type\":\"hex\", \"color\":\"#7FA44F\"}),\n                    \"secondary\":new Color({\"type\":\"hex\", \"color\":\"#989998\"})\n                },\n                timeRange:{toTime:null,fromTime:null},\n            }\n        },\n        components:{\n            \"date-range-dropdown\":dateRangeDropdown,\n            \"graph\":graph,\n        },\n        computed:{\n            params(){\n                return this.$route.params;\n            },\n            query(){\n                return this.$route.query;\n            },\n            rangeDropdownOptions(){\n                return Object.values(this.rangeValues)\n            },\n            experimentIDs(){\n                return (this.params.id!=null) ? [this.params.id] : null;\n            },\n            experimentDescriptions(){\n                return this.$store.state.experimentDescriptions || [];\n            }\n        },\n        methods:{\n            setTimeRange(range){\n                this.timeRange = range;\n            },\n            processLatencyTimeData(jsonDataRows){\n                this.latencyTimeSpinner={show:true, message:\"Sorting data...\"};\n                this.latencyTimeData.ready=false;\n                this.latencyTimeLayout.ready=false;\n                const latencyTimeResults = {}\n                const addLatencyTimeRecord = (record, index)=>{\n                    if(record){\n                        if(!latencyTimeResults[index]){\n                            latencyTimeResults[index] = []\n                        }\n                        // Time is in nanoseconds, convert to ms\n                        const sendTime = record.end_stime/(10**6);\n                        const recvTime = record.end_rtime/(10**6);\n                        const latency = (recvTime-sendTime);\n                        const timestamp = moment(sendTime,\"x\").utc().format(\"YYYY-MM-DD HH:mm:ss.SS\");\n                        // Verify data is properly parsed\n                        if(!isNaN(latency)){\n                            latencyTimeResults[index].push({\n                                timestamp,\n                                latency,\n                                sendTime\n                            });\n                        }\n                    }\n                }\n                let processedRows = 0;\n                jsonDataRows.forEach((curr)=>{\n                    if(curr.exp==\"DNS_local\"){ \n                        addLatencyTimeRecord(curr.data.rst_list[0], curr.index)\n                    }else{\n                        addLatencyTimeRecord(curr.data, curr.index);\n                    }\n                    this.latencyTimeSpinner = {\n                        show:true,\n                        message:`Sorting data (${Math.ceil(processedRows/jsonDataRows.length*100)}%)`\n                    };\n                    processedRows++;\n                });\n                this.latencyTimeSpinner.message=\"Generating graph...\";\n                this.latencyTimeData.data=[];\n                const markerBorderWidth = 2;\n                Object.keys(latencyTimeResults).forEach((index)=>{\n                    // Sort records by sendTime\n                    latencyTimeResults[index].sort((a,b)=>a.sendTime-b.sendTime)\n                    const traceColor = Color.randomFromString(index+index+index);\n                    this.latencyTimeData.data.push({\n                        x:latencyTimeResults[index].map(record=>record.timestamp),\n                        y:latencyTimeResults[index].map(record=>record.latency),\n                        name:index,\n                        mode:\"lines+markers\",\n                        line:{\n                            color:traceColor.rgbString\n                        },\n                        marker:{\n                            color:\"rgba(0,0,0,0)\",\n                            line:{\n                                color:traceColor.rgbString,\n                                width:markerBorderWidth\n                            }\n                        }\n                    });\n                })\n                // Update yaxis range\n                this.latencyTimeData.ready=true;\n                this.latencyTimeLayout.ready=true;\n                this.latencyTimeSpinner.show=false;\n            },\n            processLatencyHourlyData(jsonDataRows){\n                this.latencyHourlySpinner={show:true,message:\"Sorting data...\"};\n                this.latencyHourlyData.ready=false;\n                this.latencyHourlyLayout.ready=false;\n                const latencyHourlyResults = {}\n                const addLatencyHourlyRecord = (record, index)=>{\n                    if(record){\n                        if(!latencyHourlyResults[index]){\n                            latencyHourlyResults[index] = new Array(24).fill();\n                            latencyHourlyResults[index] = latencyHourlyResults[index].map(()=>[]);\n                        }\n                        \n                        // Time is in nanoseconds, convert to ms\n                        const sendTime = record.end_stime/(10**6);\n                        const recvTime = record.end_rtime/(10**6);\n                        const latency = (recvTime-sendTime);\n                        const hours = moment(sendTime,\"x\").utc().hours();\n                        // Verify data is properly parsed\n                        if(!isNaN(hours) && !isNaN(latency)){\n                            latencyHourlyResults[index][hours].push(latency);\n                        }\n                    }\n                }\n                let processedRows = 0;\n                jsonDataRows.forEach((curr)=>{\n                    if(curr.exp==\"DNS_local\"){ \n                        addLatencyHourlyRecord(curr.data.rst_list[0], curr.index)\n                    }else{\n                        addLatencyHourlyRecord(curr.data, curr.index);\n                    }\n                    this.latencyHourlySpinner = {\n                        show:true,\n                        message:`Sorting data (${Math.ceil(processedRows/jsonDataRows.length*100)}%)`\n                    };\n                    processedRows++;\n                });\n                Object.keys(latencyHourlyResults).forEach((index)=>{\n                    let prevLatency = null;\n                    latencyHourlyResults[index] = latencyHourlyResults[index].map((hourData)=>{\n                        const filteredHourData = hourData.filter((val)=>!!val);\n                        if(filteredHourData.length==0){\n                            return prevLatency;\n                        }\n                        const avgLatency = stats.mean(filteredHourData);\n                        prevLatency = avgLatency;\n                        return avgLatency; \n                    });\n                });\n                this.latencyHourlySpinner.message=\"Generating graph...\";\n                this.latencyHourlyData.data=[];\n                const markerBorderWidth = 2;\n                const utcHours = new Array(24).fill().map((v,i)=>i); \n                Object.keys(latencyHourlyResults).forEach((index)=>{\n                    const traceColor = Color.randomFromString(index+index+index);\n                    this.latencyHourlyData.data.push({\n                        x:utcHours,\n                        y:latencyHourlyResults[index],\n                        name:index,\n                        mode:\"lines+markers\",\n                        line:{\n                            color:traceColor.rgbString\n                        },\n                        marker:{\n                            color:\"rgba(0,0,0,0)\",\n                            line:{\n                                color:traceColor.rgbString,\n                                width:markerBorderWidth\n                            }\n                        }\n                    })\n                })\n                // Update yaxis range\n                this.latencyHourlyData.ready=true;\n                this.latencyHourlyLayout.ready=true;\n                this.latencyHourlySpinner.show=false;\n            },\n\n            processBandwidthTimeData(jsonDataRows){\n                this.bandwidthTimeSpinner={show:true,message:\"Sorting data...\"};\n                this.bandwidthTimeData.ready=false;\n                this.bandwidthTimeLayout.ready=false;\n                const bandwidthTimeResults = {}\n                const addBandwidthTimeRecord = (data, index)=>{\n                    bandwidthTimeResults[index] = bandwidthTimeResults[index] || {\n                        \"avail_band\":[],\n                        \"btnk_band\":[]\n                    };\n                    \n                    // Time is in nanoseconds, convert to ms\n                    const sendTime = data.ctrl_stime/(10**6);\n                    const timestamp = moment(sendTime,\"x\").utc().format(\"YYYY-MM-DD HH:mm:ss.SS\");\n\n                    if(data.avail_band && data.btnk_band){\n                        bandwidthTimeResults[index].avail_band.push({\n                            // Bandwidth is in bps, convert to Mbps\n                            \"bandwidth\":data.avail_band / (10**6),\n                            timestamp,\n                            sendTime\n                        });\n                        bandwidthTimeResults[index].btnk_band.push({\n                            // Bandwidth is in bps, convert to Mbps\n                            \"bandwidth\":data.btnk_band / (10**6),\n                            timestamp,\n                            sendTime\n                        });\n                    }\n                    \n                }\n                let processedRows = 0;\n                jsonDataRows.forEach((curr)=>{\n                    addBandwidthTimeRecord(curr.data, curr.index);\n                    this.bandwidthTimeSpinner = {\n                        show:true,\n                        message:`Sorting data (${Math.ceil(processedRows/jsonDataRows.length*100)}%)`\n                    };\n                    processedRows++;\n                });\n                this.bandwidthTimeSpinner.message=\"Generating graph...\";\n                this.bandwidthTimeData.data=[];\n                const markerBorderWidth = 2;\n                Object.keys(bandwidthTimeResults).forEach((index)=>{\n                    const bandwidthTimeData = bandwidthTimeResults[index];\n                    const traceColor = Color.randomFromString(index+index+index);\n                    const altColor = new Color({'color':[traceColor.lchuv[0]+20,traceColor.lchuv[1],traceColor.lchuv[2]], type:'lchuv'})\n                    const graphColors = [traceColor,altColor];\n                    Object.keys(bandwidthTimeData).forEach((exp, i)=>{\n                        // Sort records by sendTime\n                        bandwidthTimeData[exp].sort((a,b)=>a.sendTime-b.sendTime)\n                        const traceColor = graphColors[i] || Color.random();\n                        this.bandwidthTimeData.data.push({\n                            x:bandwidthTimeData[exp].map(record=>record.timestamp),\n                            y:bandwidthTimeData[exp].map(record=>record.bandwidth),\n                            name:index+\" - \"+exp,\n                            mode:\"lines+markers\",\n                            line:{\n                                color:traceColor.rgbString\n                            },\n                            marker:{\n                                color:\"rgba(0,0,0,0)\",\n                                line:{\n                                    color:traceColor.rgbString,\n                                    width:markerBorderWidth\n                                }\n                            }\n                        })\n                    })\n                })\n                // Update yaxis range\n                this.bandwidthTimeData.ready=true;\n                this.bandwidthTimeLayout.ready=true;\n                this.bandwidthTimeSpinner.show=false;\n            },\n            processBandwidthHourlyData(jsonDataRows){\n                this.bandwidthHourlySpinner={show:true,message:\"Sorting data...\"};\n                this.bandwidthHourlyData.ready=false;\n                this.bandwidthHourlyLayout.ready=false;\n                const bandwidthHourlyExperiments = this.$store.state.experiments.filter((exp)=>exp.categories.includes(\"bandwidth\")).map(exp=>exp.name);\n                const bandwidthHourlyResults = {}\n                const addBandwidthHourlyRecord = (data)=>{\n                    if(!bandwidthHourlyResults.avail_band){\n                        bandwidthHourlyResults.avail_band = new Array(24).fill();\n                        bandwidthHourlyResults.avail_band = bandwidthHourlyResults.avail_band.map(()=>[]);\n                    }\n                    if(!bandwidthHourlyResults.btnk_band){\n                        bandwidthHourlyResults.btnk_band = new Array(24).fill();\n                        bandwidthHourlyResults.btnk_band = bandwidthHourlyResults.btnk_band.map(()=>[]);\n                    }\n                    \n                    // Time is in nanoseconds, convert to ms\n                    const sendTime = data.ctrl_stime/(10**6);\n                    const hours = moment(sendTime,\"x\").utc().hours();\n\n                    if(data.avail_band && data.btnk_band){\n                        // Bandwidth is in bps, convert to Mbps\n                        bandwidthHourlyResults.avail_band[hours].push(data.avail_band / (10**6));\n                        bandwidthHourlyResults.btnk_band[hours].push(data.btnk_band / (10**6));\n                    }\n                    \n                }\n                let processedRows = 0;\n                jsonDataRows.forEach((curr)=>{\n                    if(bandwidthHourlyExperiments.includes(curr.exp)){\n                        addBandwidthHourlyRecord(curr.data);\n                    }\n                    this.bandwidthHourlySpinner = {\n                        show:true,\n                        message:`Sorting data (${Math.ceil(processedRows/jsonDataRows.length*100)}%)`\n                    };\n                    processedRows++;\n                });\n                const meanBandwidthHourlyResults = {}\n                // Standard deviation data for error bars\n                const stdevBandwidthHourlyResults = {}\n                Object.keys(bandwidthHourlyResults).forEach((expName)=>{\n                    let prevAvgBandwidth = null;\n                    let prevStdevBandwidth = null;\n                    meanBandwidthHourlyResults[expName] = bandwidthHourlyResults[expName].map((hourData)=>{\n                        const filteredHourData = hourData.filter((val)=>!!val);\n                        if(filteredHourData.length==0){\n                            return prevAvgBandwidth;\n                        }\n                        const avgBandwidth =  stats.mean(filteredHourData);\n                        prevAvgBandwidth = avgBandwidth;\n                        return avgBandwidth; \n                    });\n                    stdevBandwidthHourlyResults[expName] = bandwidthHourlyResults[expName].map((hourData)=>{\n                        const filteredHourData = hourData.filter((val)=>!!val);\n                        if(filteredHourData.length==0){\n                            return prevStdevBandwidth;\n                        }\n                        const stdevBandwidth =  stats.sampleStdev(filteredHourData);\n                        prevStdevBandwidth = stdevBandwidth;\n                        return stdevBandwidth; \n                    });\n                });\n                this.bandwidthHourlySpinner.message=\"Generating graph...\";\n                this.bandwidthHourlyData.data=[];\n                const markerBorderWidth = 2;\n                const utcHours = new Array(24).fill().map((v,i)=>i); \n                Object.keys(meanBandwidthHourlyResults).forEach((exp,i)=>{\n                    const traceColor = Object.values(this.graphColor)[i] || Color.random();\n                    this.bandwidthHourlyData.data.push({\n                        x:utcHours,\n                        y:meanBandwidthHourlyResults[exp],\n                        error_y: {\n                            type: 'data',\n                            array: stdevBandwidthHourlyResults[exp],\n                            visible: true,\n                        },\n                        name:exp,\n                        mode:\"lines+markers\",\n                        line:{\n                            color:traceColor.rgbString\n                        },\n                        marker:{\n                            color:\"rgba(0,0,0,0)\",\n                            line:{\n                                color:traceColor.rgbString,\n                                width:markerBorderWidth\n                            }\n                        }\n                    })\n                })\n                // Update yaxis range\n                this.bandwidthHourlyData.ready=true;\n                this.bandwidthHourlyLayout.ready=true;\n                this.bandwidthHourlySpinner.show=false;\n            },\n            processRTTTimeData(jsonDataRows){\n                this.rttTimeSpinner={show:true,message:\"Sorting data...\"};\n                this.rttTimeData.ready=false;\n                this.rttTimeLayout.ready=false;\n                const rttTimeResults = {}\n                const addRTTTimeRecord = (record, index)=>{\n                    if(record){   \n                        // Time is in nanoseconds, convert to ms\n                        const sendTime = record.ctrl_stime/(10**6);\n                        const recvTime = record.ctrl_rtime/(10**6);\n                        const rtt = (recvTime-sendTime);\n                        const timestamp = moment(sendTime,\"x\").utc().format(\"YYYY-MM-DD HH:mm:ss.SS\");\n                        // Verify data is properly parsed\n                        if(!isNaN(rtt)){\n                            if(!rttTimeResults[index]){\n                                rttTimeResults[index] = [];\n                            }\n                            rttTimeResults[index].push({\n                                timestamp,\n                                rtt,\n                                sendTime\n                            });\n                        }\n                    }\n                }\n                let processedRows = 0;\n                jsonDataRows.forEach((curr)=>{\n                    if(curr.exp==\"DNS_local\"){ \n                        addRTTTimeRecord(curr.data.rst_list[0], curr.index);\n                    }else{\n                        addRTTTimeRecord(curr.data, curr.index);\n                    }\n                    this.rttTimeSpinner = {\n                        show:true,\n                        message:`Sorting data (${Math.ceil(processedRows/jsonDataRows.length*100)}%)`\n                    };\n                    processedRows++;\n                });\n                this.rttTimeSpinner.message=\"Generating graph...\";\n                this.rttTimeData.data=[];\n                const markerBorderWidth = 2;\n                // Sort records by sendTime\n                Object.keys(rttTimeResults).forEach((index)=>{\n                    const traceColor = Color.randomFromString(index+index+index);\n                    const rttTimeData = rttTimeResults[index];\n                    rttTimeData.sort((a,b)=>a.sendTime-b.sendTime);\n                    this.rttTimeData.data.push({\n                        x:rttTimeData.map(record=>record.timestamp),\n                        y:rttTimeData.map(record=>record.rtt),\n                        name:index,\n                        mode:\"lines+markers\",\n                        line:{\n                            color:traceColor.rgbString\n                        },\n                        marker:{\n                            color:\"rgba(0,0,0,0)\",\n                            line:{\n                                color:traceColor.rgbString,\n                                width:markerBorderWidth\n                            }\n                        }\n                    })\n                });\n                // Update yaxis range\n                this.rttTimeData.ready=true;\n                this.rttTimeLayout.ready=true;\n                this.rttTimeSpinner.show=false;\n            },\n            processRTTHourlyData(jsonDataRows){\n                this.rttHourlySpinner={show:true,message:\"Sorting data...\"};\n                this.rttHourlyData.ready=false;\n                this.rttHourlyLayout.ready=false;\n                const rttHourlyResults = {}\n                const addRTTHourlyRecord = (record, index)=>{\n                    if(!rttHourlyResults[index]){\n                        rttHourlyResults[index] = new Array(24).fill();\n                        rttHourlyResults[index] = rttHourlyResults[index].map(()=>[]);\n                    }\n                    if(record){\n                        // Time is in nanoseconds, convert to ms\n                        const sendTime = record.ctrl_stime/(10**6);\n                        const recvTime = record.ctrl_rtime/(10**6);\n                        const rtt = (recvTime-sendTime);\n                        const hours = moment(sendTime,\"x\").utc().hours();\n                        // Verify data is properly parsed\n                        if(!isNaN(hours) && !isNaN(rtt)){\n                            rttHourlyResults[index][hours].push(rtt);\n                        }\n                    }\n                }\n                let processedRows = 0;\n                jsonDataRows.forEach((curr)=>{\n                    if(curr.exp==\"DNS_local\"){ \n                        addRTTHourlyRecord(curr.data.rst_list[0], curr.index)\n                    }else{\n                        addRTTHourlyRecord(curr.data, curr.index);\n                    }\n                    this.rttHourlySpinner = {\n                        show:true,\n                        message:`Sorting data (${Math.ceil(processedRows/jsonDataRows.length*100)}%)`\n                    };\n                    processedRows++;\n                });\n                let prevAvgRTT = null;\n                let prevStdevRTT = null;\n                console.log(rttHourlyResults);\n                this.rttHourlySpinner.message=\"Generating graph...\";\n                this.rttHourlyData.data=[];\n                const markerBorderWidth = 2;\n                const utcHours = new Array(24).fill().map((v,i)=>i); \n                Object.keys(rttHourlyResults).forEach((index)=>{\n                    const rttHourlyData = rttHourlyResults[index];\n                    const meanRTTHourlyData= rttHourlyData.map((hourData)=>{\n                    const filteredHourData = hourData.filter((val)=>!!val);\n                        if(filteredHourData.length==0){\n                            return prevAvgRTT;\n                        }\n                        const avgRTT = stats.mean(filteredHourData);\n                        prevAvgRTT = avgRTT;\n                        return avgRTT; \n                    });\n                    const stdevRTTHourlyData = rttHourlyData.map((hourData)=>{\n                        const filteredHourData = hourData.filter((val)=>!!val);\n                        if(filteredHourData.length==0){\n                            return prevStdevRTT;\n                        }\n                        const stdevRTT =  stats.sampleStdev(filteredHourData);\n                        prevStdevRTT = stdevRTT;\n                        return stdevRTT; \n                    });\n                    const traceColor = Color.randomFromString(index+index+index);\n                    this.rttHourlyData.data.push({\n                        x:utcHours,\n                        y:meanRTTHourlyData,\n                        error_y: {\n                            type: 'data',\n                            array: stdevRTTHourlyData,\n                            visible: true,\n                        },\n                        name:index,\n                        mode:\"lines+markers\",\n                        line:{\n                            color:traceColor.rgbString\n                        },\n                        marker:{\n                            color:\"rgba(0,0,0,0)\",\n                            line:{\n                                color:traceColor.rgbString,\n                                width:markerBorderWidth\n                            }\n                        }\n                    })\n                })\n                // Update yaxis range\n                this.rttHourlyData.ready=true;\n                this.rttHourlyLayout.ready=true;\n                this.rttHourlySpinner.show=false;\n            },\n            initGraphData(){\n                const spinnerList = [\n                    this.latencyTimeSpinner,\n                ]\n                const graphList = [\n                    {\n                        f:this.processLatencyTimeData,\n                        data:this.latencyTimeData,\n                        category:'latency'\n                    },\n                    {\n                        f:this.processLatencyHourlyData,\n                        data:this.latencyHourlyData,\n                        category:'latency'\n                    },\n                    {\n                        f:this.processBandwidthTimeData,\n                        data:this.bandwidthTimeData,\n                        category:'bandwidth'\n                    },\n                    {\n                        f:this.processBandwidthHourlyData,\n                        data:this.bandwidthHourlyData,\n                        category:'bandwidth'\n                    },\n                    {\n                        f:this.processRTTTimeData,\n                        data:this.rttTimeData,\n                        category:'rtt'\n                    },\n                    {\n                        f:this.processRTTHourlyData,\n                        data:this.rttHourlyData,\n                        category:'rtt'\n                    },\n                ]\n                spinnerList.forEach((spinner)=>{\n                    spinner.show=true;\n                    spinner.message=\"Fetching data...\";\n                })\n                let {toTime,fromTime}=this.timeRange;\n                // Default fromTime is 0\n                fromTime = (fromTime!=null) ? fromTime : 0;\n                // Default toTime is current time\n                toTime = (toTime!=null) ? toTime : parseFloat(moment().format(\"X\"));\n                this.$store.dispatch('loadData', fromTime).then(()=>{\n                    // Get graph colors\n                    this.$store.state.experiments.forEach((exp)=>{\n                        this.graphColor[exp.name] = new Color({\"type\":\"hex\", \"color\":exp.color});\n                    })\n                    const jsonDataRows = this.$store.state.data.filter((row, i)=>{\n                        const endpoints = this.$store.state.endpoints.reduce((acc,curr)=>{\n                            const id = \"M\"+curr.monitor;\n                            const shortDescription = id+\" - \"+curr.description.split(/[\\s_]/)[0]\n                            acc[id]={\n                                \"shortDescription\":shortDescription,\n                                ...curr\n                            };\n                            return acc;\n                        }, {});\n                        if(row.monitor){\n                            const index = \"M\"+row.monitor; \n                            row.index = endpoints[index].shortDescription;\n                            spinnerList.forEach((spinner)=>{\n                                spinner.show=true;\n                                spinner.message=`Filtering data (${Math.ceil(i/this.$store.state.data.length*100)}%)`\n\n                            })\n                            return (this.experimentIDs==null || \n                                (Array.isArray(this.experimentIDs) && this.experimentIDs.includes(row.exp))\n                            )\n                            && (\n                                (row.start >= fromTime && row.start <= toTime) ||\n                                (row.end>=fromTime && row.end<=toTime)\n                            )\n                        }else{\n                            return false;\n                        }\n                    });\n                    if(this.experimentIDs){\n                        graphList.forEach((graph)=>{\n                            const currentExp = this.$store.state.experiments.find((exp)=>this.experimentIDs.includes(exp.name));\n                            if(currentExp.categories.includes(graph.category)){\n                                graph.data.visible = true;\n                                graph.f(jsonDataRows);\n                            }else{\n                                graph.data.visible = false;\n                            }\n                        });  \n                    }\n                })\n            }\n        },\n        watch:{\n            experimentIDs:{\n                immediate:true,\n                deep:true,\n                async handler(){   \n                    await this.$nextTick();\n                    this.initGraphData();\n                }\n            },\n        }\n    }\n</script>\n<style lang='scss' scoped>\n    .endpoint-summary{\n        background-color: #FFF;\n        box-shadow: 3px 3px 5px rgba(0,0,0,0.1);\n    }\n    .experiment-section{\n        background-color: #FFF;\n        width: 90%;\n        margin: 5% 0;\n        box-sizing: border-box;\n        padding: 2em;\n        box-shadow: 3px 3px 5px rgba(0,0,0,0.1);  \n        line-height: 2em;\n        text-align: left; \n    }\n    .experiment-section-link{\n        color: #615E8A;\n        font-weight: 600;\n        text-transform: uppercase;\n        letter-spacing: 0.75px;\n        margin-top: 1em;\n        display: block;\n        text-decoration: none;\n    }\n    .graph-row{\n        margin: 2% 0;\n        .summary-key,\n        .summary-value{\n            padding: 2%;\n        }\n        .summary-section + .summary-section{\n            .summary-key,\n            .summary-value{\n                border-left: solid 1px rgba(0,0,0,0.1);\n            }\n        }\n        .summary-key{\n            background-color: #615E8A;\n            color: #FFF;\n            font-weight: bold;\n        }\n    }\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Experiments.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Experiments.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Experiments.vue?vue&type=template&id=3fdb034c&scoped=true&\"\nimport script from \"./Experiments.vue?vue&type=script&lang=js&\"\nexport * from \"./Experiments.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Experiments.vue?vue&type=style&index=0&id=3fdb034c&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3fdb034c\",\n  null\n  \n)\n\nexport default component.exports","module.exports = isNumber\n\n/**\n * Determine if something is a non-infinite javascript number.\n * @param  {Number}  n A (potential) number to see if it is a number.\n * @return {Boolean}   True for non-infinite numbers, false for all else.\n */\nfunction isNumber(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\nvar USES_TO_LENGTH = arrayMethodUsesToLength(FIND);\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES || !USES_TO_LENGTH }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","import Color from \"ac-colors\"\nexport default {\n    data(){\n        return {\n            cdfSubdivisions:1000,\n            graphColor:{\n                \"primary\":new Color({\"type\":\"hex\", \"color\":\"#7FA44F\"}),\n                \"secondary\":new Color({\"type\":\"hex\", \"color\":\"#989998\"})\n            },\n            latencyHourlySpinner:{\n                show:true,\n                message:\"Generating graph...\"\n            },\n            latencyHourlyData:{\n                \"ready\":false,\n                \"data\":[],\n            },\n            latencyHourlyLayout:{\n                \"ready\":false,\n                \"layout\":{\n                    \"title\":\"Average DNS Query Latency by Hour\",\n                    \"xaxis\":{\n                        \"title\":\"Hour of Day (UTC)\",\n                        \"range\":[0,23],\n                        \"dtick\":1\n                    },\n                    \"yaxis\":{\n                        \"title\":\"Average Endpoint DNS Query Latency (ms)\",\n                    }\n                }\n            },\n            latencyTimeSpinner:{\n                show:true,\n                message:\"Generating graph...\"\n            },\n            latencyTimeData:{\n                \"ready\":false,\n                \"data\":[],\n            },\n            latencyTimeLayout:{\n                \"ready\":false,\n                \"layout\":{\n                    \"title\":\"DNS Query Latency to Different DNS Resolvers over Time\",\n                    \"xaxis\":{\n                        \"title\":\"Date\",\n                        \"type\":\"date\"\n                    },\n                    \"yaxis\":{\n                        \"title\":\"Endpoint DNS Query Latency (ms)\",\n                    }\n                }\n            },\n            latencyTimeCDFData:{\n                \"ready\":false,\n                \"data\":[],\n            },\n            latencyTimeCDFLayout:{\n                \"ready\":false,\n                \"layout\":{\n                    \"title\":\"CDF for DNS Query Latency to Different DNS Resolvers over Time\",\n                    \"xaxis\":{\n                        \"title\":\"Endpoint DNS Query Latency (ms)\",\n                        \"autorange\":false,\n                    },\n                    \"yaxis\":{\n                        \"title\":\"Cumulative Probability\",\n                        \"autorange\":false,\n                        \"range\":[0,1],\n                    }\n                }\n            },\n            bandwidthTimeSpinner:{\n                show:true,\n                message:\"Generating graph...\"\n            },\n            bandwidthTimeData:{\n                \"ready\":false,\n                \"data\":[],\n            },\n            bandwidthTimeLayout:{\n                \"ready\":false,\n                \"layout\":{\n                    \"title\":\"Available Bandwidth & Bottleneck Bandwidth to Controller over Time\",\n                    \"xaxis\":{\n                        \"title\":\"Date\",\n                        \"type\":\"date\"\n                    },\n                    \"yaxis\":{\n                        \"title\":\"Measured Bandwidth (Mbps)\",\n                    }\n                }\n            },\n            bandwidthTimeCDFData:{\n                \"ready\":false,\n                \"data\":[],\n            },\n            bandwidthTimeCDFLayout:{\n                \"ready\":false,\n                \"layout\":{\n                    \"title\":\"CDF for Available Bandwidth & Bottleneck Bandwidth to Controller over Time\",\n                    \"xaxis\":{\n                        \"title\":\"Measured Bandwidth (Mbps)\",\n                        \"autorange\":false,\n                    },\n                    \"yaxis\":{\n                        \"title\":\"Cumulative Probability\",\n                        \"autorange\":false,\n                        \"range\":[0,1],\n                    }\n                }\n            },\n            bandwidthHourlySpinner:{\n                show:true,\n                message:\"Generating graph...\"\n            },\n            bandwidthHourlyData:{\n                \"ready\":false,\n                \"data\":[],\n            },\n            bandwidthHourlyLayout:{\n                \"ready\":false,\n                \"layout\":{\n                    \"title\":\"Average Available Bandwidth & Bottleneck Bandwidth to Controller by Hour\",\n                    \"xaxis\":{\n                        \"title\":\"Hour of Day (UTC)\",\n                        \"range\":[0,23],\n                        \"dtick\":1\n                    },\n                    \"yaxis\":{\n                        \"title\":\"Average Measured Bandwidth (Mbps)\",\n                    }\n                }\n            },\n            rttTimeSpinner:{\n                show:true,\n                message:\"Generating graph...\"\n            },\n            rttTimeData:{\n                \"ready\":false,\n                \"data\":[],\n            },\n            rttTimeLayout:{\n                \"ready\":false,\n                \"layout\":{\n                    \"title\":\"Endpoint Controller RTT over Time\",\n                    \"xaxis\":{\n                        \"title\":\"Date\",\n                        \"type\":\"date\"\n                    },\n                    \"yaxis\":{\n                        \"title\":\"Endpoint Controller RTT (ms)\",\n                    }\n                }\n            },\n            rttHourlySpinner:{\n                show:true,\n                message:\"Generating graph...\"\n            },\n            rttHourlyData:{\n                \"ready\":false,\n                \"data\":[],\n            },\n            rttHourlyLayout:{\n                \"ready\":false,\n                \"layout\":{\n                    \"title\":\"Average Endpoint Controller RTT by Hour\",\n                    \"xaxis\":{\n                        \"title\":\"Hour of Day (UTC)\",\n                        \"range\":[0,23],\n                        \"dtick\":1\n                    },\n                    \"yaxis\":{\n                        \"title\":\"Average Endpoint Controller RTT (ms)\",\n                    }\n                }\n            },\n        }\n    },\n    computed:{\n        endpointGraphs(){\n            return [\n                { \"spinner\":this.latencyTimeSpinner, \"data\":this.latencyTimeData, \"layout\":this.latencyTimeLayout },\n                { \"spinner\":this.latencyTimeSpinner, \"data\":this.latencyTimeCDFData, \"layout\":this.latencyTimeCDFLayout },\n                { \"spinner\":this.latencyHourlySpinner, \"data\":this.latencyHourlyData, \"layout\":this.latencyHourlyLayout },\n                { \"spinner\":this.bandwidthTimeSpinner, \"data\":this.bandwidthTimeData, \"layout\":this.bandwidthTimeLayout },\n                { \"spinner\":this.bandwidthTimeSpinner, \"data\":this.bandwidthTimeCDFData, \"layout\":this.bandwidthTimeCDFLayout },\n                { \"spinner\":this.bandwidthHourlySpinner, \"data\":this.bandwidthHourlyData, \"layout\":this.bandwidthHourlyLayout },\n                { \"spinner\":this.rttTimeSpinner, \"data\":this.rttTimeData, \"layout\":this.rttTimeLayout },\n                { \"spinner\":this.rttHourlySpinner, \"data\":this.rttHourlyData, \"layout\":this.rttHourlyLayout },\n            ]\n        }\n    }\n}","\"use strict\";function _defineProperties(o,r){for(var t=0;t<r.length;t++){var e=r[t];e.enumerable=e.enumerable||!1,e.configurable=!0,\"value\"in e&&(e.writable=!0),Object.defineProperty(o,e.key,e)}}function _createClass(o,r,t){return r&&_defineProperties(o.prototype,r),t&&_defineProperties(o,t),o}var Color=function(){function Color(o){var r=void 0===o?{color:[0,0,0],type:\"rgb\",precision:3,capitalize:!0}:o,t=r.color,e=void 0===t?[0,0,0]:t,n=r.type,a=void 0===n?\"rgb\":n,i=r.precision,l=void 0===i?3:i,u=r.capitalize,s=void 0===u||u;this.updateColor(e,a),this.precision=l,this.capitalize=s}return Color.prototype.updateColor=function updateColor(o,r){var t;if(void 0===r&&(r=\"rgb\"),\"string\"!=typeof r)throw new TypeError(\"Parameter 2 must be of type string.\");if(r=r.toLowerCase(),!Color.validTypes.includes(r))throw new TypeError(\"Parameter 2 '\"+r+\"' is not a valid type.\");switch(r){case\"rgb\":t=Color.rgbToXyz(o);break;case\"hsl\":t=Color.rgbToXyz(Color.hslToRgb(o));break;case\"hex\":t=Color.rgbToXyz(Color.hexToRgb(o));break;case\"lab\":t=Color.labToXyz(o);break;case\"lchab\":t=Color.labToXyz(Color.lchABToLab(o));break;case\"luv\":t=Color.luvToXyz(o);break;case\"lchuv\":t=Color.luvToXyz(Color.lchUVToLuv(o));break;case\"xyz\":case\"default\":this._xyz=o,this._rgb=Color.xyzToRgb(this._xyz),this._hsl=Color.rgbToHsl(this._rgb),this._hex=Color.rgbToHex(this._rgb),this._lab=Color.xyzToLab(this._xyz),this._lchab=Color.labToLCHab(this._lab),this._luv=Color.xyzToLuv(this._xyz),this._lchuv=Color.luvToLCHuv(this._luv)}\"xyz\"!==r&&this.updateColor(t,\"xyz\")},Color.rgbToHsl=function rgbToHsl(o){var r=o[0]/255,t=o[1]/255,e=o[2]/255,n=Math.max(r,t,e),a=Math.min(r,t,e),i=(n+a)/2,l=0,u=0;return n!==a&&(l=i<.5?(n-a)/(n+a):(n-a)/(2-n-a),u=r===n?(t-e)/(n-a):t===n?2+(e-r)/(n-a):4+(r-t)/(n-a)),[(u=(u*=60)<0?u%360+360:u)+0,(l*=100)+0,(i*=100)+0]},Color.hslToRgb=function hslToRgb(o){var r=o[0],t=o[1],e=o[2];isFinite(r)||(r=0),isFinite(t)||(t=0),isFinite(e)||(e=0),r=r<0?r%360+360:r,e/=100,t/=100,r/=60;var n=(1-Math.abs(2*e-1))*t,a=n*(1-Math.abs(r%2-1)),i=e-n/2,l=r<1?[n,a,0]:r<2?[a,n,0]:r<3?[0,n,a]:r<4?[0,a,n]:r<5?[a,0,n]:[n,0,a];return l.map(function(o){return Math.round(255*(o+i))+0})},Color.rgbToHex=function rgbToHex(o){function S(o){var r=o.toString(16);return 1===r.length?\"0\"+r:r}var r=o[0],t=o[1],e=o[2];return\"#\"+S(r)+S(t)+S(e)},Color.hexToRgb=function hexToRgb(o){o=o.replace(/^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i,function(o,r,t,e){return r+r+t+t+e+e});var r=/^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(o);return r?[parseInt(r[1],16),parseInt(r[2],16),parseInt(r[3],16)]:null},Color.rgbToXyz=function rgbToXyz(o){function ea(o){return o<=.04045?o/12.92:Math.pow((o+.055)/1.055,2.4)}var r=o[0]/255,t=o[1]/255,e=o[2]/255,n=ea(r),a=ea(t),i=ea(e);return[100*(.4124*n+.3576*a+.1805*i)+0,100*(.2126*n+.7152*a+.0722*i)+0,100*(.0193*n+.1192*a+.9505*i)+0]},Color.xyzToRgb=function xyzToRgb(o){function ta(o){return o<=.0031308?12.92*o:1.055*Math.pow(o,1/2.4)-.055}var r=o[0]/100,t=o[1]/100,e=o[2]/100,n=-.9689307147293197*r+1.8757560608852415*t+.041517523842953964*e,a=.055710120445510616*r+-.2040210505984867*t+1.0569959422543882*e,i=ta(3.2406254773200533*r-1.5372079722103187*t-.4986285986982479*e),l=ta(n),u=ta(a);return[Math.round(255*i)+0,Math.round(255*l)+0,Math.round(255*u)+0]},Color.xyzToLab=function xyzToLab(o){function Fa(o){return 216/24389<o?n(o):(24389/27*o+16)/116}var r=o[0]/Color.d65[0],t=o[1]/Color.d65[1],e=o[2]/Color.d65[2],n=null!=Math.cbrt?Math.cbrt:function(o){return Math.pow(o,1/3)},a=Fa(r),i=Fa(t);return[116*i-16,0+500*(a-i),0+200*(i-Fa(e))]},Color.labToXyz=function labToXyz(o){var r=o[0],t=o[1],e=216/24389,n=24389/27,a=(r+16)/116,i=a-o[2]/200,l=t/500+a,u=Math.pow(l,3)>e?Math.pow(l,3):(116*l-16)/n,s=8<r?Math.pow((r+16)/116,3):r/n,c=Math.pow(i,3)>e?Math.pow(i,3):(116*i-16)/n;return[u*Color.d65[0]+0,s*Color.d65[1]+0,c*Color.d65[2]+0]},Color.labToLCHab=function labToLCHab(o){var r=o[1],t=Math.abs(o[2])<Color.maxZeroTolerance?0:o[2],e=Math.sqrt(r*r+t*t),n=0<=Math.atan2(t,r)?Math.atan2(t,r)/Math.PI*180:Math.atan2(t,r)/Math.PI*180+360;return[o[0]+0,e+0,0+n]},Color.lchABToLab=function lchABToLab(o){var r=o[1],t=o[2],e=r*Math.cos(t/180*Math.PI),n=r*Math.sin(t/180*Math.PI);return[o[0]+0,0+e,0+n]},Color.xyzToLuv=function xyzToLuv(o){var r=o[0],t=o[1],e=o[2],n=Color.d65[0],a=Color.d65[1],i=Color.d65[2],l=9*a/(n+15*a+3*i),u=4*n/(n+15*a+3*i);if(0===r&&0===t&&0===e)return[0,0,0];var s=9*t/(r+15*t+3*e),c=4*r/(r+15*t+3*e),h=t/a,C=null!=Math.cbrt?Math.cbrt:function(o){return Math.pow(o,1/3)},p=216/24389<h?116*C(h,1/3)-16:24389/27*h;return[0+p,0+13*p*(c-u),0+13*p*(s-l)]},Color.luvToXyz=function luvToXyz(o){var r=o[0],t=o[1],e=o[2],n=Color.d65[0],a=Color.d65[1],i=Color.d65[2],l=9*a/(n+15*a+3*i),u=4*n/(n+15*a+3*i),s=8<r?Math.pow((r+16)/116,3):r/(24389/27),c=-5*s,h=(52*r/(t+13*r*u)-1)/3||0,C=((s*(39*r/(e+13*r*l)-5)||0)-c)/(h- -1/3);return[100*C+0,100*s+0,100*(C*h+c)+0]},Color.luvToLCHuv=function luvToLCHuv(o){var r=o[0],t=Math.abs(o[1])<Color.maxZeroTolerance?0:o[1],e=Math.abs(o[2])<Color.maxZeroTolerance?0:o[2],n=Math.sqrt(t*t+e*e),a=180*Math.atan2(e,t)/Math.PI;return[r+0,n+0,(a=0<=a?a:a+360)+0]},Color.lchUVToLuv=function lchUVToLuv(o){var r=o[0],t=o[1],e=o[2]/180*Math.PI;return[r+0,0+t*Math.cos(e),0+t*Math.sin(e)]},Color.luminance=function luminance(o,r){if(void 0===r&&(r=\"rgb\"),\"string\"!=typeof r)throw new TypeError(\"Parameter 2 must be of type string.\");if(r=r.toLowerCase(),!Color.validTypes.includes(r))throw new TypeError(\"Parameter 2 '\"+r+\"' is not a valid type.\");\"rgb\"!==r&&(o=new Color({color:o,type:r}).rgb);for(var t=0;t<o.length;t++)o[t]/=255,o[t]<.03928?o[t]/=12.92:o[t]=Math.pow((o[t]+.055)/1.055,2.4);return.2126*o[0]+.7152*o[1]+.0722*o[2]},Color.random=function random(){return new Color({color:[255,255,255].map(function(o){return Math.round(o*Math.random())})})},Color.randomFromString=function randomFromString(o){void 0===o&&(o=\"\");function mc(o){for(var r=4294967295,t=0;t<o.length;t++){var e=4026531840&(r=(r<<4)+o.charCodeAt(t));0!=e&&(r^=e>>>24,r^=e)}return Math.abs(r)}var r=mc(o),t=mc(o+r);return new Color({color:[r%256,t%256,mc(o+t)%256]})},Color.randomOfType=function randomOfType(o){if(void 0===o&&(o=\"rgb\"),\"string\"!=typeof o)throw new TypeError(\"Parameter 1 must be of type string.\");if(o=o.toLowerCase(),!Color.validTypes.includes(o))throw new TypeError(\"Parameter 1 '\"+o+\"' is not a valid type.\");return Color.random()[o]},Color.randomOfTypeFormatted=function randomOfTypeFormatted(o,r,t){if(void 0===o&&(o=\"rgb\"),void 0===r&&(r=!0),void 0===t&&(t=3),\"string\"!=typeof o)throw new TypeError(\"Parameter 1 must be of type string.\");if(o=o.toLowerCase(),!Color.validTypes.includes(o))throw new TypeError(\"Parameter 1 '\"+o+\"' is not a valid type.\");var e=Color.random();return e.capitalize=r,e.precision=t,e[o+\"String\"]},Color.contrastTextColor=function contrastTextColor(o,r){if(void 0===r&&(r=\"rgb\"),\"string\"!=typeof r)throw new TypeError(\"Parameter 2 must be of type string.\");if(r=r.toLowerCase(),!Color.validTypes.includes(r))throw new TypeError(\"Parameter 2 '\"+r+\"' is not a valid type.\");var t=Color.contrastRatio(new Color({color:[255,255,255]}),new Color({color:o,type:r}));return Color.contrastRatio(new Color({color:[0,0,0]}),new Color({color:o,type:r}))<t?\"#FFFFFF\":\"#000000\"},Color.contrastRatio=function contrastRatio(o,r){if(!(o instanceof Color))throw new TypeError(\"Parameter 1 must be of type Color.\");if(!(r instanceof Color))throw new TypeError(\"Parameter 2 must be of type Color.\");var t=Color.luminance(o.rgb)+.05,e=Color.luminance(r.rgb)+.05;return t<e?e/t:t/e},_createClass(Color,[{key:\"rgb\",get:function get(){return this._rgb},set:function set(o){this.updateColor(o,\"rgb\")}},{key:\"rgbString\",get:function get(){var o=\"RGB(\"+this.rgb.join(\", \")+\")\";return this.capitalize?o.toUpperCase():o.toLowerCase()}},{key:\"hsl\",get:function get(){return this._hsl},set:function set(o){this.updateColor(o,\"hsl\")}},{key:\"hslString\",get:function get(){var r=this,o=\"HSL(\"+this.hsl.map(function(o){return o.toFixed(r.precision)}).join(\", \")+\")\";return this.capitalize?o.toUpperCase():o.toLowerCase()}},{key:\"hex\",get:function get(){return this._hex},set:function set(o){this.updateColor(o,\"hex\")}},{key:\"hexString\",get:function get(){var o=this._hex;return this.capitalize?o.toUpperCase():o.toLowerCase()}},{key:\"xyz\",get:function get(){return this._xyz},set:function set(o){this.updateColor(o,\"xyz\")}},{key:\"xyzString\",get:function get(){var r=this,o=\"XYZ(\"+this.xyz.map(function(o){return o.toFixed(r.precision)}).join(\", \")+\")\";return this.capitalize?o.toUpperCase():o.toLowerCase()}},{key:\"lab\",get:function get(){return this._lab},set:function set(o){this.updateColor(o,\"lab\")}},{key:\"labString\",get:function get(){var r=this,o=\"LAB(\"+this.lab.map(function(o){return o.toFixed(r.precision)}).join(\", \")+\")\";return this.capitalize?o.toUpperCase():o.toLowerCase()}},{key:\"lchab\",get:function get(){return this._lchab},set:function set(o){this.updateColor(o,\"lchab\")}},{key:\"lchabString\",get:function get(){var r=this,o=this.lchab.map(function(o){return o.toFixed(r.precision)});return this.capitalize?\"LCHab(\"+o.join(\", \")+\")\":\"lchAB(\"+o.join(\", \")+\")\"}},{key:\"luv\",get:function get(){return this._luv},set:function set(o){this.updateColor(o,\"luv\")}},{key:\"luvString\",get:function get(){var r=this,o=\"LUV(\"+this.luv.map(function(o){return o.toFixed(r.precision)}).join(\", \")+\")\";return this.capitalize?o.toUpperCase():o.toLowerCase()}},{key:\"lchuv\",get:function get(){return this._lchuv},set:function set(o){this.updateColor(o,\"lchuv\")}},{key:\"lchuvString\",get:function get(){var r=this,o=this.lchuv.map(function(o){return o.toFixed(r.precision)});return this.capitalize?\"LCHuv(\"+o.join(\", \")+\")\":\"lchUV(\"+o.join(\", \")+\")\"}}]),Color}();Color.validTypes=[\"rgb\",\"hex\",\"hsl\",\"xyz\",\"lab\",\"lchab\",\"luv\",\"lchuv\"],Color.d65=[95.05,100,108.9],Color.maxZeroTolerance=Math.pow(10,-12),module.exports=Color;","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Experiments.vue?vue&type=style&index=0&id=3fdb034c&lang=scss&scoped=true&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Experiments.vue?vue&type=style&index=0&id=3fdb034c&lang=scss&scoped=true&\""],"sourceRoot":""}
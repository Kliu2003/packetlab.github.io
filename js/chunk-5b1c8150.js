(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-5b1c8150"],{"29fb":function(e,t,n){"use strict";var o=n("8dae"),a=n.n(o);a.a},"71d0":function(e,t,n){"use strict";n.r(t);var o=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},a=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("main",{staticClass:"main-content"},[n("h1",[e._v("Running your first PacketLab Experiment")]),n("p",[e._v("To run an experiment using PacketLab, we will need to open a terminal for each of the two primary components involved in running PacketLab experiments: the General Experiment Controller (EC) and the Measurement Endpoint (ME). In both terminals, navigate to the directory containing the PacketLab release. Then, navigate to "),n("code",[e._v("bin")]),e._v(", the directory containing the compiled binaries for the EC and ME, as well as several other compiled binaries.")]),n("b",{staticClass:"Section"},[e._v("Running the General Experiment Controller")]),n("p",[e._v("Let's start by running the general experiment controller. Running the EC involves a few additional parameters, which can be displayed by running "),n("code",[e._v("./pktlabec -h")]),e._v(" from the same "),n("code",[e._v("bin")]),e._v(" directory:")]),n("code",[e._v("USAGE: pktlabec [-h] [-c EC_CONF_PATH] ADDR[:PORT] EXP_PROG [EXP_PROG_ARGS ...]")]),n("p",[n("code",[e._v("[-c EC_CONF_PATH]")]),e._v(" is the path to "),n("code",[e._v("example.ec.conf")]),e._v(", the config file for the EC. In the default file structure for the precompiled code, a sample config file suitable for testing is located in "),n("code",[e._v("pktlab/test/config")]),e._v(", so we can use a relative path from "),n("code",[e._v("bin")]),e._v(" to access it as "),n("code",[e._v("-c ../test/config/example.ec.conf")]),e._v(".")]),n("p",[n("code",[e._v("ADDR[:PORT]")]),e._v(" refers to the IP address and port that the general experiment controller is listening on. For example, while testing on my local machine and using port 5568, I would use "),n("code",[e._v("127.0.0.1:5568")]),e._v(".")]),n("p",[e._v("Finally, "),n("code",[e._v("EXP_PROG")]),e._v(" is the path to the compiled executable for the experiment program you want to run, such as one of the sample tests included with the PacketLab API. ")]),n("p",[e._v("If the experiment that is being run has arguments of its own, these can be placed at the end of the command as "),n("code",[e._v("[EXP_PROG_ARGS ...]")]),e._v(". We now have everything we need to run the EC.")]),n("b",{staticClass:"Section"},[e._v("Running the Measurement Endpoint")]),n("p",[e._v("The final component of our setup is the ME. Running the ME also requires parameters, which we can see by running "),n("code",[e._v("./pktlabme -h")]),e._v(" from the same "),n("code",[e._v("bin")]),e._v(" directory:")]),n("code",[e._v("USAGE: pktlabme [-h] [-c ME_CONF_PATH] [ADDR[:PORT]]")]),n("p",[e._v("Like with the EC, "),n("code",[e._v("[-c ME_CONF_PATH]")]),e._v(" is the path to "),n("code",[e._v("example.me.conf")]),e._v(", the config file for the ME. "),n("code",[e._v("example.me.conf")]),e._v(" can be found in the same place as "),n("code",[e._v("example.ec.conf")]),e._v(" from earlier, so we can access it as "),n("code",[e._v("-c ../test/config/example.me.conf")]),e._v(".")]),n("p",[e._v("Finally, "),n("code",[e._v("[ADDR[:PORT]]")]),e._v(" refers to the address that the EC is listening on. So, to run the ME with our address from earlier, we would use "),n("code",[e._v("127.0.0.1:5568")]),e._v(".")]),n("b",{staticClass:"Section"},[e._v("Putting it all together")]),n("p",[e._v("Now, let's put it all together by running "),n("code",[e._v("test_http_get")]),e._v(", one of the sample tests included with the PacketLab library. This experiment executes an http request using TCP. Included sample tests can be found in "),n("code",[e._v("pktlab/test/exp")]),e._v(", so we can access it as "),n("code",[e._v("../test/exp/test_http_get")]),e._v(".")]),n("p",[e._v("We can first run the EC with our chosen test as"),n("br"),n("code",[e._v("./pktlabec -c ../test/config/example.ec.conf 127.0.0.1:5568 ../test/exp/test_http_get")]),n("br"),e._v(" from the EC terminal. Then, we can follow up with the ME from our third terminal using"),n("br"),n("code",[e._v("./pktlabme -c ../test/config/example.me.conf 127.0.0.1:5568")]),e._v(".")]),n("p",[e._v("And voila, if you navigate back to the terminal running the EC, you should see HTML code retrieved from the web! Congratulations, you've just run your first experiment using PacketLab!")])])}],i=(n("29fb"),n("2877")),c={},r=Object(i["a"])(c,o,a,!1,null,"64c60df7",null);t["default"]=r.exports},"8dae":function(e,t,n){}}]);
//# sourceMappingURL=chunk-5b1c8150.js.map